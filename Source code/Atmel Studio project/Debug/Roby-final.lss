
Roby-final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000442  00800100  0000217c  00002210  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000217c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001d0  00800542  00800542  00002652  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002652  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000026f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000226e  00000000  00000000  00002808  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b96  00000000  00000000  00004a76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cc9  00000000  00000000  0000560c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000043c  00000000  00000000  000062d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e5  00000000  00000000  00006714  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fa3  00000000  00000000  00006cf9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00007c9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
       4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      1c:	0c 94 f3 06 	jmp	0xde6	; 0xde6 <__vector_7>
      20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      68:	46 05       	cpc	r20, r6
      6a:	51 05       	cpc	r21, r1
      6c:	5c 05       	cpc	r21, r12
      6e:	67 05       	cpc	r22, r7
      70:	72 05       	cpc	r23, r2
      72:	7d 05       	cpc	r23, r13
      74:	88 05       	cpc	r24, r8
      76:	93 05       	cpc	r25, r3
      78:	9e 05       	cpc	r25, r14

0000007a <__trampolines_end>:
      7a:	63 64       	ori	r22, 0x43	; 67
      7c:	69 6e       	ori	r22, 0xE9	; 233
      7e:	6f 70       	andi	r22, 0x0F	; 15
      80:	73 75       	andi	r23, 0x53	; 83
      82:	78 58       	subi	r23, 0x88	; 136
      84:	5b 00       	.word	0x005b	; ????

00000086 <__ctors_end>:
      86:	11 24       	eor	r1, r1
      88:	1f be       	out	0x3f, r1	; 63
      8a:	cf ef       	ldi	r28, 0xFF	; 255
      8c:	d8 e0       	ldi	r29, 0x08	; 8
      8e:	de bf       	out	0x3e, r29	; 62
      90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
      92:	15 e0       	ldi	r17, 0x05	; 5
      94:	a0 e0       	ldi	r26, 0x00	; 0
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	ec e7       	ldi	r30, 0x7C	; 124
      9a:	f1 e2       	ldi	r31, 0x21	; 33
      9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
      9e:	05 90       	lpm	r0, Z+
      a0:	0d 92       	st	X+, r0
      a2:	a2 34       	cpi	r26, 0x42	; 66
      a4:	b1 07       	cpc	r27, r17
      a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
      a8:	27 e0       	ldi	r18, 0x07	; 7
      aa:	a2 e4       	ldi	r26, 0x42	; 66
      ac:	b5 e0       	ldi	r27, 0x05	; 5
      ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
      b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
      b2:	a2 31       	cpi	r26, 0x12	; 18
      b4:	b2 07       	cpc	r27, r18
      b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
      b8:	0e 94 a9 05 	call	0xb52	; 0xb52 <main>
      bc:	0c 94 bc 10 	jmp	0x2178	; 0x2178 <_exit>

000000c0 <__bad_interrupt>:
      c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <waitFor>:
void reset(void)
{
	ping();
	memset(buffer,0,strlen(buffer));
	memset(Hypertext,0,strlen(Hypertext));
	ESPinit();
      c4:	0f 93       	push	r16
      c6:	1f 93       	push	r17
      c8:	cf 93       	push	r28
      ca:	df 93       	push	r29
      cc:	8c 01       	movw	r16, r24
      ce:	cc e8       	ldi	r28, 0x8C	; 140
      d0:	d6 e0       	ldi	r29, 0x06	; 6
      d2:	fe 01       	movw	r30, r28
      d4:	01 90       	ld	r0, Z+
      d6:	00 20       	and	r0, r0
      d8:	e9 f7       	brne	.-6      	; 0xd4 <waitFor+0x10>
      da:	31 97       	sbiw	r30, 0x01	; 1
      dc:	af 01       	movw	r20, r30
      de:	4c 58       	subi	r20, 0x8C	; 140
      e0:	56 40       	sbci	r21, 0x06	; 6
      e2:	60 e0       	ldi	r22, 0x00	; 0
      e4:	70 e0       	ldi	r23, 0x00	; 0
      e6:	ce 01       	movw	r24, r28
      e8:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
      ec:	df 93       	push	r29
      ee:	cf 93       	push	r28
      f0:	8a e7       	ldi	r24, 0x7A	; 122
      f2:	91 e0       	ldi	r25, 0x01	; 1
      f4:	9f 93       	push	r25
      f6:	8f 93       	push	r24
      f8:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <scanf>
      fc:	b8 01       	movw	r22, r16
      fe:	ce 01       	movw	r24, r28
     100:	0e 94 cb 09 	call	0x1396	; 0x1396 <strstr>
     104:	0f 90       	pop	r0
     106:	0f 90       	pop	r0
     108:	0f 90       	pop	r0
     10a:	0f 90       	pop	r0
     10c:	89 2b       	or	r24, r25
     10e:	19 f4       	brne	.+6      	; 0x116 <waitFor+0x52>
     110:	c8 01       	movw	r24, r16
     112:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     116:	df 91       	pop	r29
     118:	cf 91       	pop	r28
     11a:	1f 91       	pop	r17
     11c:	0f 91       	pop	r16
     11e:	08 95       	ret

00000120 <addData>:
     120:	ef 92       	push	r14
     122:	ff 92       	push	r15
     124:	0f 93       	push	r16
     126:	1f 93       	push	r17
     128:	cf 93       	push	r28
     12a:	df 93       	push	r29
     12c:	7c 01       	movw	r14, r24
     12e:	8b 01       	movw	r16, r22
     130:	80 91 42 05 	lds	r24, 0x0542	; 0x800542 <__data_end>
     134:	90 91 43 05 	lds	r25, 0x0543	; 0x800543 <__data_end+0x1>
     138:	89 2b       	or	r24, r25
     13a:	01 f5       	brne	.+64     	; 0x17c <addData+0x5c>
     13c:	cc e6       	ldi	r28, 0x6C	; 108
     13e:	d5 e0       	ldi	r29, 0x05	; 5
     140:	fe 01       	movw	r30, r28
     142:	01 90       	ld	r0, Z+
     144:	00 20       	and	r0, r0
     146:	e9 f7       	brne	.-6      	; 0x142 <addData+0x22>
     148:	31 97       	sbiw	r30, 0x01	; 1
     14a:	af 01       	movw	r20, r30
     14c:	4c 56       	subi	r20, 0x6C	; 108
     14e:	55 40       	sbci	r21, 0x05	; 5
     150:	60 e0       	ldi	r22, 0x00	; 0
     152:	70 e0       	ldi	r23, 0x00	; 0
     154:	ce 01       	movw	r24, r28
     156:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     15a:	de 01       	movw	r26, r28
     15c:	0d 90       	ld	r0, X+
     15e:	00 20       	and	r0, r0
     160:	e9 f7       	brne	.-6      	; 0x15c <addData+0x3c>
     162:	11 97       	sbiw	r26, 0x01	; 1
     164:	84 e4       	ldi	r24, 0x44	; 68
     166:	ee e7       	ldi	r30, 0x7E	; 126
     168:	f1 e0       	ldi	r31, 0x01	; 1
     16a:	01 90       	ld	r0, Z+
     16c:	0d 92       	st	X+, r0
     16e:	8a 95       	dec	r24
     170:	e1 f7       	brne	.-8      	; 0x16a <addData+0x4a>
     172:	68 e2       	ldi	r22, 0x28	; 40
     174:	71 e0       	ldi	r23, 0x01	; 1
     176:	ce 01       	movw	r24, r28
     178:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
     17c:	cc e6       	ldi	r28, 0x6C	; 108
     17e:	d5 e0       	ldi	r29, 0x05	; 5
     180:	fe 01       	movw	r30, r28
     182:	01 90       	ld	r0, Z+
     184:	00 20       	and	r0, r0
     186:	e9 f7       	brne	.-6      	; 0x182 <addData+0x62>
     188:	31 97       	sbiw	r30, 0x01	; 1
     18a:	86 e2       	ldi	r24, 0x26	; 38
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	91 83       	std	Z+1, r25	; 0x01
     190:	80 83       	st	Z, r24
     192:	b7 01       	movw	r22, r14
     194:	ce 01       	movw	r24, r28
     196:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
     19a:	09 90       	ld	r0, Y+
     19c:	00 20       	and	r0, r0
     19e:	e9 f7       	brne	.-6      	; 0x19a <addData+0x7a>
     1a0:	21 97       	sbiw	r28, 0x01	; 1
     1a2:	8d e3       	ldi	r24, 0x3D	; 61
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	99 83       	std	Y+1, r25	; 0x01
     1a8:	88 83       	st	Y, r24
     1aa:	ec e8       	ldi	r30, 0x8C	; 140
     1ac:	f6 e0       	ldi	r31, 0x06	; 6
     1ae:	01 90       	ld	r0, Z+
     1b0:	00 20       	and	r0, r0
     1b2:	e9 f7       	brne	.-6      	; 0x1ae <addData+0x8e>
     1b4:	31 97       	sbiw	r30, 0x01	; 1
     1b6:	af 01       	movw	r20, r30
     1b8:	4c 58       	subi	r20, 0x8C	; 140
     1ba:	56 40       	sbci	r21, 0x06	; 6
     1bc:	60 e0       	ldi	r22, 0x00	; 0
     1be:	70 e0       	ldi	r23, 0x00	; 0
     1c0:	8c e8       	ldi	r24, 0x8C	; 140
     1c2:	96 e0       	ldi	r25, 0x06	; 6
     1c4:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     1c8:	4a e0       	ldi	r20, 0x0A	; 10
     1ca:	6c e8       	ldi	r22, 0x8C	; 140
     1cc:	76 e0       	ldi	r23, 0x06	; 6
     1ce:	c8 01       	movw	r24, r16
     1d0:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__itoa_ncheck>
     1d4:	6c e8       	ldi	r22, 0x8C	; 140
     1d6:	76 e0       	ldi	r23, 0x06	; 6
     1d8:	8c e6       	ldi	r24, 0x6C	; 108
     1da:	95 e0       	ldi	r25, 0x05	; 5
     1dc:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
     1e0:	80 91 42 05 	lds	r24, 0x0542	; 0x800542 <__data_end>
     1e4:	90 91 43 05 	lds	r25, 0x0543	; 0x800543 <__data_end+0x1>
     1e8:	01 96       	adiw	r24, 0x01	; 1
     1ea:	90 93 43 05 	sts	0x0543, r25	; 0x800543 <__data_end+0x1>
     1ee:	80 93 42 05 	sts	0x0542, r24	; 0x800542 <__data_end>
     1f2:	df 91       	pop	r29
     1f4:	cf 91       	pop	r28
     1f6:	1f 91       	pop	r17
     1f8:	0f 91       	pop	r16
     1fa:	ff 90       	pop	r15
     1fc:	ef 90       	pop	r14
     1fe:	08 95       	ret

00000200 <addString>:
     200:	cf 92       	push	r12
     202:	df 92       	push	r13
     204:	ef 92       	push	r14
     206:	ff 92       	push	r15
     208:	0f 93       	push	r16
     20a:	1f 93       	push	r17
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
     210:	6c 01       	movw	r12, r24
     212:	7b 01       	movw	r14, r22
     214:	00 91 42 05 	lds	r16, 0x0542	; 0x800542 <__data_end>
     218:	10 91 43 05 	lds	r17, 0x0543	; 0x800543 <__data_end+0x1>
     21c:	01 15       	cp	r16, r1
     21e:	11 05       	cpc	r17, r1
     220:	01 f5       	brne	.+64     	; 0x262 <addString+0x62>
     222:	cc e6       	ldi	r28, 0x6C	; 108
     224:	d5 e0       	ldi	r29, 0x05	; 5
     226:	fe 01       	movw	r30, r28
     228:	01 90       	ld	r0, Z+
     22a:	00 20       	and	r0, r0
     22c:	e9 f7       	brne	.-6      	; 0x228 <addString+0x28>
     22e:	31 97       	sbiw	r30, 0x01	; 1
     230:	af 01       	movw	r20, r30
     232:	4c 56       	subi	r20, 0x6C	; 108
     234:	55 40       	sbci	r21, 0x05	; 5
     236:	60 e0       	ldi	r22, 0x00	; 0
     238:	70 e0       	ldi	r23, 0x00	; 0
     23a:	ce 01       	movw	r24, r28
     23c:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     240:	de 01       	movw	r26, r28
     242:	0d 90       	ld	r0, X+
     244:	00 20       	and	r0, r0
     246:	e9 f7       	brne	.-6      	; 0x242 <addString+0x42>
     248:	11 97       	sbiw	r26, 0x01	; 1
     24a:	84 e4       	ldi	r24, 0x44	; 68
     24c:	ee e7       	ldi	r30, 0x7E	; 126
     24e:	f1 e0       	ldi	r31, 0x01	; 1
     250:	01 90       	ld	r0, Z+
     252:	0d 92       	st	X+, r0
     254:	8a 95       	dec	r24
     256:	e1 f7       	brne	.-8      	; 0x250 <addString+0x50>
     258:	68 e2       	ldi	r22, 0x28	; 40
     25a:	71 e0       	ldi	r23, 0x01	; 1
     25c:	ce 01       	movw	r24, r28
     25e:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
     262:	cc e6       	ldi	r28, 0x6C	; 108
     264:	d5 e0       	ldi	r29, 0x05	; 5
     266:	fe 01       	movw	r30, r28
     268:	01 90       	ld	r0, Z+
     26a:	00 20       	and	r0, r0
     26c:	e9 f7       	brne	.-6      	; 0x268 <addString+0x68>
     26e:	31 97       	sbiw	r30, 0x01	; 1
     270:	86 e2       	ldi	r24, 0x26	; 38
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	91 83       	std	Z+1, r25	; 0x01
     276:	80 83       	st	Z, r24
     278:	b6 01       	movw	r22, r12
     27a:	ce 01       	movw	r24, r28
     27c:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
     280:	09 90       	ld	r0, Y+
     282:	00 20       	and	r0, r0
     284:	e9 f7       	brne	.-6      	; 0x280 <addString+0x80>
     286:	21 97       	sbiw	r28, 0x01	; 1
     288:	8d e3       	ldi	r24, 0x3D	; 61
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	99 83       	std	Y+1, r25	; 0x01
     28e:	88 83       	st	Y, r24
     290:	b7 01       	movw	r22, r14
     292:	8c e6       	ldi	r24, 0x6C	; 108
     294:	95 e0       	ldi	r25, 0x05	; 5
     296:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
     29a:	0f 5f       	subi	r16, 0xFF	; 255
     29c:	1f 4f       	sbci	r17, 0xFF	; 255
     29e:	10 93 43 05 	sts	0x0543, r17	; 0x800543 <__data_end+0x1>
     2a2:	00 93 42 05 	sts	0x0542, r16	; 0x800542 <__data_end>
     2a6:	df 91       	pop	r29
     2a8:	cf 91       	pop	r28
     2aa:	1f 91       	pop	r17
     2ac:	0f 91       	pop	r16
     2ae:	ff 90       	pop	r15
     2b0:	ef 90       	pop	r14
     2b2:	df 90       	pop	r13
     2b4:	cf 90       	pop	r12
     2b6:	08 95       	ret

000002b8 <checkTask>:
     2b8:	cf 93       	push	r28
     2ba:	df 93       	push	r29
     2bc:	ec 01       	movw	r28, r24
     2be:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     2c2:	80 91 8c 06 	lds	r24, 0x068C	; 0x80068c <buffer>
     2c6:	8b 37       	cpi	r24, 0x7B	; 123
     2c8:	49 f0       	breq	.+18     	; 0x2dc <checkTask+0x24>
     2ca:	ed e8       	ldi	r30, 0x8D	; 141
     2cc:	f6 e0       	ldi	r31, 0x06	; 6
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	01 96       	adiw	r24, 0x01	; 1
     2d4:	21 91       	ld	r18, Z+
     2d6:	2b 37       	cpi	r18, 0x7B	; 123
     2d8:	e1 f7       	brne	.-8      	; 0x2d2 <checkTask+0x1a>
     2da:	02 c0       	rjmp	.+4      	; 0x2e0 <checkTask+0x28>
     2dc:	80 e0       	ldi	r24, 0x00	; 0
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	fe 01       	movw	r30, r28
     2e2:	01 90       	ld	r0, Z+
     2e4:	00 20       	and	r0, r0
     2e6:	e9 f7       	brne	.-6      	; 0x2e2 <checkTask+0x2a>
     2e8:	ec 1b       	sub	r30, r28
     2ea:	fd 0b       	sbc	r31, r29
     2ec:	34 96       	adiw	r30, 0x04	; 4
     2ee:	ef 01       	movw	r28, r30
     2f0:	c8 0f       	add	r28, r24
     2f2:	d9 1f       	adc	r29, r25
     2f4:	ec e6       	ldi	r30, 0x6C	; 108
     2f6:	f6 e0       	ldi	r31, 0x06	; 6
     2f8:	01 90       	ld	r0, Z+
     2fa:	00 20       	and	r0, r0
     2fc:	e9 f7       	brne	.-6      	; 0x2f8 <checkTask+0x40>
     2fe:	31 97       	sbiw	r30, 0x01	; 1
     300:	af 01       	movw	r20, r30
     302:	4c 56       	subi	r20, 0x6C	; 108
     304:	56 40       	sbci	r21, 0x06	; 6
     306:	60 e0       	ldi	r22, 0x00	; 0
     308:	70 e0       	ldi	r23, 0x00	; 0
     30a:	8c e6       	ldi	r24, 0x6C	; 108
     30c:	96 e0       	ldi	r25, 0x06	; 6
     30e:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     312:	fe 01       	movw	r30, r28
     314:	e4 57       	subi	r30, 0x74	; 116
     316:	f9 4f       	sbci	r31, 0xF9	; 249
     318:	90 81       	ld	r25, Z
     31a:	92 32       	cpi	r25, 0x22	; 34
     31c:	49 f0       	breq	.+18     	; 0x330 <checkTask+0x78>
     31e:	ac e6       	ldi	r26, 0x6C	; 108
     320:	b6 e0       	ldi	r27, 0x06	; 6
     322:	fe 01       	movw	r30, r28
     324:	e3 57       	subi	r30, 0x73	; 115
     326:	f9 4f       	sbci	r31, 0xF9	; 249
     328:	9d 93       	st	X+, r25
     32a:	91 91       	ld	r25, Z+
     32c:	92 32       	cpi	r25, 0x22	; 34
     32e:	e1 f7       	brne	.-8      	; 0x328 <checkTask+0x70>
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	08 95       	ret

00000336 <ping>:
     336:	0f 93       	push	r16
     338:	1f 93       	push	r17
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	2f ef       	ldi	r18, 0xFF	; 255
     340:	31 ee       	ldi	r19, 0xE1	; 225
     342:	84 e0       	ldi	r24, 0x04	; 4
     344:	21 50       	subi	r18, 0x01	; 1
     346:	30 40       	sbci	r19, 0x00	; 0
     348:	80 40       	sbci	r24, 0x00	; 0
     34a:	e1 f7       	brne	.-8      	; 0x344 <ping+0xe>
     34c:	00 c0       	rjmp	.+0      	; 0x34e <ping+0x18>
     34e:	00 00       	nop
     350:	82 ec       	ldi	r24, 0xC2	; 194
     352:	91 e0       	ldi	r25, 0x01	; 1
     354:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
     358:	cc e8       	ldi	r28, 0x8C	; 140
     35a:	d6 e0       	ldi	r29, 0x06	; 6
     35c:	fe 01       	movw	r30, r28
     35e:	01 90       	ld	r0, Z+
     360:	00 20       	and	r0, r0
     362:	e9 f7       	brne	.-6      	; 0x35e <ping+0x28>
     364:	31 97       	sbiw	r30, 0x01	; 1
     366:	af 01       	movw	r20, r30
     368:	4c 58       	subi	r20, 0x8C	; 140
     36a:	56 40       	sbci	r21, 0x06	; 6
     36c:	60 e0       	ldi	r22, 0x00	; 0
     36e:	70 e0       	ldi	r23, 0x00	; 0
     370:	ce 01       	movw	r24, r28
     372:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     376:	df 93       	push	r29
     378:	cf 93       	push	r28
     37a:	0a e7       	ldi	r16, 0x7A	; 122
     37c:	11 e0       	ldi	r17, 0x01	; 1
     37e:	1f 93       	push	r17
     380:	0f 93       	push	r16
     382:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <scanf>
     386:	fe 01       	movw	r30, r28
     388:	01 90       	ld	r0, Z+
     38a:	00 20       	and	r0, r0
     38c:	e9 f7       	brne	.-6      	; 0x388 <ping+0x52>
     38e:	31 97       	sbiw	r30, 0x01	; 1
     390:	af 01       	movw	r20, r30
     392:	4c 58       	subi	r20, 0x8C	; 140
     394:	56 40       	sbci	r21, 0x06	; 6
     396:	60 e0       	ldi	r22, 0x00	; 0
     398:	70 e0       	ldi	r23, 0x00	; 0
     39a:	ce 01       	movw	r24, r28
     39c:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     3a0:	df 93       	push	r29
     3a2:	cf 93       	push	r28
     3a4:	1f 93       	push	r17
     3a6:	0f 93       	push	r16
     3a8:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <scanf>
     3ac:	66 ec       	ldi	r22, 0xC6	; 198
     3ae:	71 e0       	ldi	r23, 0x01	; 1
     3b0:	ce 01       	movw	r24, r28
     3b2:	0e 94 cb 09 	call	0x1396	; 0x1396 <strstr>
     3b6:	2d b7       	in	r18, 0x3d	; 61
     3b8:	3e b7       	in	r19, 0x3e	; 62
     3ba:	28 5f       	subi	r18, 0xF8	; 248
     3bc:	3f 4f       	sbci	r19, 0xFF	; 255
     3be:	0f b6       	in	r0, 0x3f	; 63
     3c0:	f8 94       	cli
     3c2:	3e bf       	out	0x3e, r19	; 62
     3c4:	0f be       	out	0x3f, r0	; 63
     3c6:	2d bf       	out	0x3d, r18	; 61
     3c8:	89 2b       	or	r24, r25
     3ca:	11 f4       	brne	.+4      	; 0x3d0 <ping+0x9a>
     3cc:	0e 94 9b 01 	call	0x336	; 0x336 <ping>
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	1f 91       	pop	r17
     3d6:	0f 91       	pop	r16
     3d8:	08 95       	ret

000003da <pushData>:
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	0e 94 9b 01 	call	0x336	; 0x336 <ping>
     3e2:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <port+0x1>
     3e6:	8f 93       	push	r24
     3e8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <port>
     3ec:	8f 93       	push	r24
     3ee:	89 ec       	ldi	r24, 0xC9	; 201
     3f0:	91 e0       	ldi	r25, 0x01	; 1
     3f2:	9f 93       	push	r25
     3f4:	8f 93       	push	r24
     3f6:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
     3fa:	86 ec       	ldi	r24, 0xC6	; 198
     3fc:	91 e0       	ldi	r25, 0x01	; 1
     3fe:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     402:	cc e6       	ldi	r28, 0x6C	; 108
     404:	d5 e0       	ldi	r29, 0x05	; 5
     406:	fe 01       	movw	r30, r28
     408:	01 90       	ld	r0, Z+
     40a:	00 20       	and	r0, r0
     40c:	e9 f7       	brne	.-6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     40e:	cf 01       	movw	r24, r30
     410:	8b 54       	subi	r24, 0x4B	; 75
     412:	95 40       	sbci	r25, 0x05	; 5
     414:	9f 93       	push	r25
     416:	8f 93       	push	r24
     418:	87 ef       	ldi	r24, 0xF7	; 247
     41a:	91 e0       	ldi	r25, 0x01	; 1
     41c:	9f 93       	push	r25
     41e:	8f 93       	push	r24
     420:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
     424:	86 ec       	ldi	r24, 0xC6	; 198
     426:	91 e0       	ldi	r25, 0x01	; 1
     428:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     42c:	df 93       	push	r29
     42e:	cf 93       	push	r28
     430:	89 e0       	ldi	r24, 0x09	; 9
     432:	92 e0       	ldi	r25, 0x02	; 2
     434:	9f 93       	push	r25
     436:	8f 93       	push	r24
     438:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
     43c:	80 e3       	ldi	r24, 0x30	; 48
     43e:	92 e0       	ldi	r25, 0x02	; 2
     440:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     444:	87 e3       	ldi	r24, 0x37	; 55
     446:	92 e0       	ldi	r25, 0x02	; 2
     448:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
     44c:	81 e4       	ldi	r24, 0x41	; 65
     44e:	92 e0       	ldi	r25, 0x02	; 2
     450:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
     454:	09 90       	ld	r0, Y+
     456:	00 20       	and	r0, r0
     458:	e9 f7       	brne	.-6      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     45a:	21 97       	sbiw	r28, 0x01	; 1
     45c:	ae 01       	movw	r20, r28
     45e:	4c 56       	subi	r20, 0x6C	; 108
     460:	55 40       	sbci	r21, 0x05	; 5
     462:	60 e0       	ldi	r22, 0x00	; 0
     464:	70 e0       	ldi	r23, 0x00	; 0
     466:	8c e6       	ldi	r24, 0x6C	; 108
     468:	95 e0       	ldi	r25, 0x05	; 5
     46a:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     46e:	10 92 43 05 	sts	0x0543, r1	; 0x800543 <__data_end+0x1>
     472:	10 92 42 05 	sts	0x0542, r1	; 0x800542 <__data_end>
     476:	8d b7       	in	r24, 0x3d	; 61
     478:	9e b7       	in	r25, 0x3e	; 62
     47a:	0c 96       	adiw	r24, 0x0c	; 12
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	f8 94       	cli
     480:	9e bf       	out	0x3e, r25	; 62
     482:	0f be       	out	0x3f, r0	; 63
     484:	8d bf       	out	0x3d, r24	; 61
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	08 95       	ret

0000048c <getData>:
     48c:	cf 93       	push	r28
     48e:	df 93       	push	r29
     490:	0e 94 9b 01 	call	0x336	; 0x336 <ping>
     494:	cc e6       	ldi	r28, 0x6C	; 108
     496:	d5 e0       	ldi	r29, 0x05	; 5
     498:	fe 01       	movw	r30, r28
     49a:	01 90       	ld	r0, Z+
     49c:	00 20       	and	r0, r0
     49e:	e9 f7       	brne	.-6      	; 0x49a <getData+0xe>
     4a0:	31 97       	sbiw	r30, 0x01	; 1
     4a2:	af 01       	movw	r20, r30
     4a4:	4c 56       	subi	r20, 0x6C	; 108
     4a6:	55 40       	sbci	r21, 0x05	; 5
     4a8:	60 e0       	ldi	r22, 0x00	; 0
     4aa:	70 e0       	ldi	r23, 0x00	; 0
     4ac:	ce 01       	movw	r24, r28
     4ae:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     4b2:	de 01       	movw	r26, r28
     4b4:	0d 90       	ld	r0, X+
     4b6:	00 20       	and	r0, r0
     4b8:	e9 f7       	brne	.-6      	; 0x4b4 <getData+0x28>
     4ba:	11 97       	sbiw	r26, 0x01	; 1
     4bc:	84 e4       	ldi	r24, 0x44	; 68
     4be:	ee e7       	ldi	r30, 0x7E	; 126
     4c0:	f1 e0       	ldi	r31, 0x01	; 1
     4c2:	01 90       	ld	r0, Z+
     4c4:	0d 92       	st	X+, r0
     4c6:	8a 95       	dec	r24
     4c8:	e1 f7       	brne	.-8      	; 0x4c2 <getData+0x36>
     4ca:	67 e1       	ldi	r22, 0x17	; 23
     4cc:	71 e0       	ldi	r23, 0x01	; 1
     4ce:	ce 01       	movw	r24, r28
     4d0:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
     4d4:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <port+0x1>
     4d8:	8f 93       	push	r24
     4da:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <port>
     4de:	8f 93       	push	r24
     4e0:	80 e5       	ldi	r24, 0x50	; 80
     4e2:	92 e0       	ldi	r25, 0x02	; 2
     4e4:	9f 93       	push	r25
     4e6:	8f 93       	push	r24
     4e8:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
     4ec:	86 ec       	ldi	r24, 0xC6	; 198
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     4f4:	fe 01       	movw	r30, r28
     4f6:	01 90       	ld	r0, Z+
     4f8:	00 20       	and	r0, r0
     4fa:	e9 f7       	brne	.-6      	; 0x4f6 <getData+0x6a>
     4fc:	cf 01       	movw	r24, r30
     4fe:	8b 54       	subi	r24, 0x4B	; 75
     500:	95 40       	sbci	r25, 0x05	; 5
     502:	9f 93       	push	r25
     504:	8f 93       	push	r24
     506:	8e e7       	ldi	r24, 0x7E	; 126
     508:	92 e0       	ldi	r25, 0x02	; 2
     50a:	9f 93       	push	r25
     50c:	8f 93       	push	r24
     50e:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
     512:	86 ec       	ldi	r24, 0xC6	; 198
     514:	91 e0       	ldi	r25, 0x01	; 1
     516:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     51a:	df 93       	push	r29
     51c:	cf 93       	push	r28
     51e:	89 e0       	ldi	r24, 0x09	; 9
     520:	92 e0       	ldi	r25, 0x02	; 2
     522:	9f 93       	push	r25
     524:	8f 93       	push	r24
     526:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
     52a:	80 e9       	ldi	r24, 0x90	; 144
     52c:	92 e0       	ldi	r25, 0x02	; 2
     52e:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <checkTask>
     532:	8c e6       	ldi	r24, 0x6C	; 108
     534:	96 e0       	ldi	r25, 0x06	; 6
     536:	9f 93       	push	r25
     538:	8f 93       	push	r24
     53a:	85 e9       	ldi	r24, 0x95	; 149
     53c:	92 e0       	ldi	r25, 0x02	; 2
     53e:	9f 93       	push	r25
     540:	8f 93       	push	r24
     542:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
     546:	8d b7       	in	r24, 0x3d	; 61
     548:	9e b7       	in	r25, 0x3e	; 62
     54a:	40 96       	adiw	r24, 0x10	; 16
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	9e bf       	out	0x3e, r25	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	8d bf       	out	0x3d, r24	; 61
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	08 95       	ret

0000055c <getIP>:
     55c:	0f 93       	push	r16
     55e:	1f 93       	push	r17
     560:	cf 93       	push	r28
     562:	df 93       	push	r29
     564:	ec e4       	ldi	r30, 0x4C	; 76
     566:	f5 e0       	ldi	r31, 0x05	; 5
     568:	01 90       	ld	r0, Z+
     56a:	00 20       	and	r0, r0
     56c:	e9 f7       	brne	.-6      	; 0x568 <getIP+0xc>
     56e:	31 97       	sbiw	r30, 0x01	; 1
     570:	af 01       	movw	r20, r30
     572:	4c 54       	subi	r20, 0x4C	; 76
     574:	55 40       	sbci	r21, 0x05	; 5
     576:	60 e0       	ldi	r22, 0x00	; 0
     578:	70 e0       	ldi	r23, 0x00	; 0
     57a:	8c e4       	ldi	r24, 0x4C	; 76
     57c:	95 e0       	ldi	r25, 0x05	; 5
     57e:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     582:	cc e8       	ldi	r28, 0x8C	; 140
     584:	d6 e0       	ldi	r29, 0x06	; 6
     586:	fe 01       	movw	r30, r28
     588:	01 90       	ld	r0, Z+
     58a:	00 20       	and	r0, r0
     58c:	e9 f7       	brne	.-6      	; 0x588 <getIP+0x2c>
     58e:	31 97       	sbiw	r30, 0x01	; 1
     590:	af 01       	movw	r20, r30
     592:	4c 58       	subi	r20, 0x8C	; 140
     594:	56 40       	sbci	r21, 0x06	; 6
     596:	60 e0       	ldi	r22, 0x00	; 0
     598:	70 e0       	ldi	r23, 0x00	; 0
     59a:	ce 01       	movw	r24, r28
     59c:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     5a0:	81 ea       	ldi	r24, 0xA1	; 161
     5a2:	92 e0       	ldi	r25, 0x02	; 2
     5a4:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
     5a8:	df 93       	push	r29
     5aa:	cf 93       	push	r28
     5ac:	0a e7       	ldi	r16, 0x7A	; 122
     5ae:	11 e0       	ldi	r17, 0x01	; 1
     5b0:	1f 93       	push	r17
     5b2:	0f 93       	push	r16
     5b4:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <scanf>
     5b8:	fe 01       	movw	r30, r28
     5ba:	01 90       	ld	r0, Z+
     5bc:	00 20       	and	r0, r0
     5be:	e9 f7       	brne	.-6      	; 0x5ba <getIP+0x5e>
     5c0:	31 97       	sbiw	r30, 0x01	; 1
     5c2:	af 01       	movw	r20, r30
     5c4:	4c 58       	subi	r20, 0x8C	; 140
     5c6:	56 40       	sbci	r21, 0x06	; 6
     5c8:	60 e0       	ldi	r22, 0x00	; 0
     5ca:	70 e0       	ldi	r23, 0x00	; 0
     5cc:	ce 01       	movw	r24, r28
     5ce:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
     5d2:	df 93       	push	r29
     5d4:	cf 93       	push	r28
     5d6:	1f 93       	push	r17
     5d8:	0f 93       	push	r16
     5da:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <scanf>
     5de:	8d b7       	in	r24, 0x3d	; 61
     5e0:	9e b7       	in	r25, 0x3e	; 62
     5e2:	08 96       	adiw	r24, 0x08	; 8
     5e4:	0f b6       	in	r0, 0x3f	; 63
     5e6:	f8 94       	cli
     5e8:	9e bf       	out	0x3e, r25	; 62
     5ea:	0f be       	out	0x3f, r0	; 63
     5ec:	8d bf       	out	0x3d, r24	; 61
     5ee:	20 e0       	ldi	r18, 0x00	; 0
     5f0:	30 e0       	ldi	r19, 0x00	; 0
     5f2:	40 e0       	ldi	r20, 0x00	; 0
     5f4:	50 e0       	ldi	r21, 0x00	; 0
     5f6:	f9 01       	movw	r30, r18
     5f8:	e4 57       	subi	r30, 0x74	; 116
     5fa:	f9 4f       	sbci	r31, 0xF9	; 249
     5fc:	80 81       	ld	r24, Z
     5fe:	82 32       	cpi	r24, 0x22	; 34
     600:	d9 f4       	brne	.+54     	; 0x638 <getIP+0xdc>
     602:	b9 01       	movw	r22, r18
     604:	6f 5f       	subi	r22, 0xFF	; 255
     606:	7f 4f       	sbci	r23, 0xFF	; 255
     608:	fb 01       	movw	r30, r22
     60a:	e4 57       	subi	r30, 0x74	; 116
     60c:	f9 4f       	sbci	r31, 0xF9	; 249
     60e:	80 81       	ld	r24, Z
     610:	82 32       	cpi	r24, 0x22	; 34
     612:	89 f0       	breq	.+34     	; 0x636 <getIP+0xda>
     614:	fa 01       	movw	r30, r20
     616:	e4 5b       	subi	r30, 0xB4	; 180
     618:	fa 4f       	sbci	r31, 0xFA	; 250
     61a:	d9 01       	movw	r26, r18
     61c:	a2 57       	subi	r26, 0x72	; 114
     61e:	b9 4f       	sbci	r27, 0xF9	; 249
     620:	9b 01       	movw	r18, r22
     622:	81 93       	st	Z+, r24
     624:	2f 5f       	subi	r18, 0xFF	; 255
     626:	3f 4f       	sbci	r19, 0xFF	; 255
     628:	af 01       	movw	r20, r30
     62a:	4c 54       	subi	r20, 0x4C	; 76
     62c:	55 40       	sbci	r21, 0x05	; 5
     62e:	8d 91       	ld	r24, X+
     630:	82 32       	cpi	r24, 0x22	; 34
     632:	b9 f7       	brne	.-18     	; 0x622 <getIP+0xc6>
     634:	01 c0       	rjmp	.+2      	; 0x638 <getIP+0xdc>
     636:	9b 01       	movw	r18, r22
     638:	2f 5f       	subi	r18, 0xFF	; 255
     63a:	3f 4f       	sbci	r19, 0xFF	; 255
     63c:	21 34       	cpi	r18, 0x41	; 65
     63e:	31 05       	cpc	r19, r1
     640:	d4 f2       	brlt	.-76     	; 0x5f6 <getIP+0x9a>
     642:	86 ec       	ldi	r24, 0xC6	; 198
     644:	91 e0       	ldi	r25, 0x01	; 1
     646:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     64a:	df 91       	pop	r29
     64c:	cf 91       	pop	r28
     64e:	1f 91       	pop	r17
     650:	0f 91       	pop	r16
     652:	08 95       	ret

00000654 <ESPinit>:
     654:	8b ea       	ldi	r24, 0xAB	; 171
     656:	92 e0       	ldi	r25, 0x02	; 2
     658:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
     65c:	2f ef       	ldi	r18, 0xFF	; 255
     65e:	81 ee       	ldi	r24, 0xE1	; 225
     660:	94 e0       	ldi	r25, 0x04	; 4
     662:	21 50       	subi	r18, 0x01	; 1
     664:	80 40       	sbci	r24, 0x00	; 0
     666:	90 40       	sbci	r25, 0x00	; 0
     668:	e1 f7       	brne	.-8      	; 0x662 <ESPinit+0xe>
     66a:	00 c0       	rjmp	.+0      	; 0x66c <ESPinit+0x18>
     66c:	00 00       	nop
     66e:	0e 94 9b 01 	call	0x336	; 0x336 <ping>
     672:	89 e3       	ldi	r24, 0x39	; 57
     674:	91 e0       	ldi	r25, 0x01	; 1
     676:	9f 93       	push	r25
     678:	8f 93       	push	r24
     67a:	87 e4       	ldi	r24, 0x47	; 71
     67c:	91 e0       	ldi	r25, 0x01	; 1
     67e:	9f 93       	push	r25
     680:	8f 93       	push	r24
     682:	83 eb       	ldi	r24, 0xB3	; 179
     684:	92 e0       	ldi	r25, 0x02	; 2
     686:	9f 93       	push	r25
     688:	8f 93       	push	r24
     68a:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
     68e:	86 ec       	ldi	r24, 0xC6	; 198
     690:	91 e0       	ldi	r25, 0x01	; 1
     692:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     696:	0e 94 ae 02 	call	0x55c	; 0x55c <getIP>
     69a:	88 ec       	ldi	r24, 0xC8	; 200
     69c:	92 e0       	ldi	r25, 0x02	; 2
     69e:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
     6a2:	86 ec       	ldi	r24, 0xC6	; 198
     6a4:	91 e0       	ldi	r25, 0x01	; 1
     6a6:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     6aa:	85 ed       	ldi	r24, 0xD5	; 213
     6ac:	92 e0       	ldi	r25, 0x02	; 2
     6ae:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
     6b2:	86 ec       	ldi	r24, 0xC6	; 198
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
     6ba:	2f ef       	ldi	r18, 0xFF	; 255
     6bc:	89 e6       	ldi	r24, 0x69	; 105
     6be:	98 e1       	ldi	r25, 0x18	; 24
     6c0:	21 50       	subi	r18, 0x01	; 1
     6c2:	80 40       	sbci	r24, 0x00	; 0
     6c4:	90 40       	sbci	r25, 0x00	; 0
     6c6:	e1 f7       	brne	.-8      	; 0x6c0 <ESPinit+0x6c>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <ESPinit+0x76>
     6ca:	00 00       	nop
     6cc:	0f 90       	pop	r0
     6ce:	0f 90       	pop	r0
     6d0:	0f 90       	pop	r0
     6d2:	0f 90       	pop	r0
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
     6d8:	08 95       	ret

000006da <addTweet>:
	}
	waitFor(_OK);
}

void addTweet(char* msg)
{
     6da:	ef 92       	push	r14
     6dc:	ff 92       	push	r15
     6de:	0f 93       	push	r16
     6e0:	1f 93       	push	r17
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	7c 01       	movw	r14, r24
	if (dataCount == 0)
     6e8:	c0 91 42 05 	lds	r28, 0x0542	; 0x800542 <__data_end>
     6ec:	d0 91 43 05 	lds	r29, 0x0543	; 0x800543 <__data_end+0x1>
     6f0:	20 97       	sbiw	r28, 0x00	; 0
     6f2:	61 f5       	brne	.+88     	; 0x74c <addTweet+0x72>
	{
		// Reset HTTP array
		memset(Hypertext,0,strlen(Hypertext));
     6f4:	0c e6       	ldi	r16, 0x6C	; 108
     6f6:	15 e0       	ldi	r17, 0x05	; 5
     6f8:	f8 01       	movw	r30, r16
     6fa:	01 90       	ld	r0, Z+
     6fc:	00 20       	and	r0, r0
     6fe:	e9 f7       	brne	.-6      	; 0x6fa <addTweet+0x20>
     700:	31 97       	sbiw	r30, 0x01	; 1
     702:	af 01       	movw	r20, r30
     704:	4c 56       	subi	r20, 0x6C	; 108
     706:	55 40       	sbci	r21, 0x05	; 5
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	c8 01       	movw	r24, r16
     70e:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
		// HTTP GET request base
		strcat(Hypertext,"GET https://api.thingspeak.com/apps/thingtweet/1/statuses/update?api_key=");
     712:	d8 01       	movw	r26, r16
     714:	0d 90       	ld	r0, X+
     716:	00 20       	and	r0, r0
     718:	e9 f7       	brne	.-6      	; 0x714 <addTweet+0x3a>
     71a:	11 97       	sbiw	r26, 0x01	; 1
     71c:	8a e4       	ldi	r24, 0x4A	; 74
     71e:	e2 ee       	ldi	r30, 0xE2	; 226
     720:	f2 e0       	ldi	r31, 0x02	; 2
     722:	01 90       	ld	r0, Z+
     724:	0d 92       	st	X+, r0
     726:	8a 95       	dec	r24
     728:	e1 f7       	brne	.-8      	; 0x722 <addTweet+0x48>
		// Add api_key_twitter to HTTP request array
		strcat(Hypertext,api_key_twitter);
     72a:	66 e0       	ldi	r22, 0x06	; 6
     72c:	71 e0       	ldi	r23, 0x01	; 1
     72e:	c8 01       	movw	r24, r16
     730:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
		// Add the message to send
		strcat(Hypertext,"&status=");
     734:	d8 01       	movw	r26, r16
     736:	0d 90       	ld	r0, X+
     738:	00 20       	and	r0, r0
     73a:	e9 f7       	brne	.-6      	; 0x736 <addTweet+0x5c>
     73c:	11 97       	sbiw	r26, 0x01	; 1
     73e:	89 e0       	ldi	r24, 0x09	; 9
     740:	ec e2       	ldi	r30, 0x2C	; 44
     742:	f3 e0       	ldi	r31, 0x03	; 3
     744:	01 90       	ld	r0, Z+
     746:	0d 92       	st	X+, r0
     748:	8a 95       	dec	r24
     74a:	e1 f7       	brne	.-8      	; 0x744 <addTweet+0x6a>
	}
	strcat(Hypertext,msg);
     74c:	b7 01       	movw	r22, r14
     74e:	8c e6       	ldi	r24, 0x6C	; 108
     750:	95 e0       	ldi	r25, 0x05	; 5
     752:	0e 94 b7 09 	call	0x136e	; 0x136e <strcat>
	dataCount++;
     756:	21 96       	adiw	r28, 0x01	; 1
     758:	d0 93 43 05 	sts	0x0543, r29	; 0x800543 <__data_end+0x1>
     75c:	c0 93 42 05 	sts	0x0542, r28	; 0x800542 <__data_end>
}
     760:	df 91       	pop	r29
     762:	cf 91       	pop	r28
     764:	1f 91       	pop	r17
     766:	0f 91       	pop	r16
     768:	ff 90       	pop	r15
     76a:	ef 90       	pop	r14
     76c:	08 95       	ret

0000076e <tweet>:

void tweet(char* message)
{
     76e:	cf 93       	push	r28
     770:	df 93       	push	r29
	// Note - Twitter wont allow to tweet message with the same text
	
	// Check if ESP8266 is ready to send
	ping();
     772:	0e 94 9b 01 	call	0x336	; 0x336 <ping>
	
	// Start TCP connection with ThingSpeak on port 80 channel 1 (ESP8266 can handle 4 channels)
	printf("AT+CIPSTART=1,\"TCP\",\"api.thingspeak.com\",%d\r\n",port);
     776:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <port+0x1>
     77a:	8f 93       	push	r24
     77c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <port>
     780:	8f 93       	push	r24
     782:	80 e5       	ldi	r24, 0x50	; 80
     784:	92 e0       	ldi	r25, 0x02	; 2
     786:	9f 93       	push	r25
     788:	8f 93       	push	r24
     78a:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
	waitFor(_OK);
     78e:	86 ec       	ldi	r24, 0xC6	; 198
     790:	91 e0       	ldi	r25, 0x01	; 1
     792:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
	
	// Use channel 1 and define length of message
	printf("AT+CIPSEND=1,%d\r\n",strlen(Hypertext)+34);	// 34 is the length of "HTTP/1.1 Host: api.thingspeak.com" added later on
     796:	cc e6       	ldi	r28, 0x6C	; 108
     798:	d5 e0       	ldi	r29, 0x05	; 5
     79a:	fe 01       	movw	r30, r28
     79c:	01 90       	ld	r0, Z+
     79e:	00 20       	and	r0, r0
     7a0:	e9 f7       	brne	.-6      	; 0x79c <tweet+0x2e>
     7a2:	cf 01       	movw	r24, r30
     7a4:	8b 54       	subi	r24, 0x4B	; 75
     7a6:	95 40       	sbci	r25, 0x05	; 5
     7a8:	9f 93       	push	r25
     7aa:	8f 93       	push	r24
     7ac:	8e e7       	ldi	r24, 0x7E	; 126
     7ae:	92 e0       	ldi	r25, 0x02	; 2
     7b0:	9f 93       	push	r25
     7b2:	8f 93       	push	r24
     7b4:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>
	waitFor(_OK);
     7b8:	86 ec       	ldi	r24, 0xC6	; 198
     7ba:	91 e0       	ldi	r25, 0x01	; 1
     7bc:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
	
	// Send HTTP request with data
	printf("%s\nHTTP/1.1 Host: api.thingspeak.com\r\n",Hypertext);
     7c0:	df 93       	push	r29
     7c2:	cf 93       	push	r28
     7c4:	89 e0       	ldi	r24, 0x09	; 9
     7c6:	92 e0       	ldi	r25, 0x02	; 2
     7c8:	9f 93       	push	r25
     7ca:	8f 93       	push	r24
     7cc:	0e 94 0a 0a 	call	0x1414	; 0x1414 <printf>

	// Wait for connection to get closed
	waitFor(_CLOSED);
     7d0:	80 e3       	ldi	r24, 0x30	; 48
     7d2:	92 e0       	ldi	r25, 0x02	; 2
     7d4:	0e 94 62 00 	call	0xc4	; 0xc4 <waitFor>
	printf("Tweet sent\n");
     7d8:	85 e3       	ldi	r24, 0x35	; 53
     7da:	93 e0       	ldi	r25, 0x03	; 3
     7dc:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
	
	// Close connection to be sure
	printf("AT+CIPCLOSE=1\r\n");
     7e0:	80 e4       	ldi	r24, 0x40	; 64
     7e2:	93 e0       	ldi	r25, 0x03	; 3
     7e4:	0e 94 20 0a 	call	0x1440	; 0x1440 <puts>
	dataCount = 0;
     7e8:	10 92 43 05 	sts	0x0543, r1	; 0x800543 <__data_end+0x1>
     7ec:	10 92 42 05 	sts	0x0542, r1	; 0x800542 <__data_end>
}
     7f0:	8d b7       	in	r24, 0x3d	; 61
     7f2:	9e b7       	in	r25, 0x3e	; 62
     7f4:	0c 96       	adiw	r24, 0x0c	; 12
     7f6:	0f b6       	in	r0, 0x3f	; 63
     7f8:	f8 94       	cli
     7fa:	9e bf       	out	0x3e, r25	; 62
     7fc:	0f be       	out	0x3f, r0	; 63
     7fe:	8d bf       	out	0x3d, r24	; 61
     800:	df 91       	pop	r29
     802:	cf 91       	pop	r28
     804:	08 95       	ret

00000806 <setup>:
}


void setup(void)
{
	DDRD = 0xFF;
     806:	8f ef       	ldi	r24, 0xFF	; 255
     808:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
     80a:	84 b9       	out	0x04, r24	; 4
	
	// SETUP INTERRUPT EVERY 0.01 sec
	OCR2A = 156;				// Ticks
     80c:	8c e9       	ldi	r24, 0x9C	; 156
     80e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	TCCR2A |= (1 << WGM21);		// Set to CTC Mode
     812:	e0 eb       	ldi	r30, 0xB0	; 176
     814:	f0 e0       	ldi	r31, 0x00	; 0
     816:	80 81       	ld	r24, Z
     818:	82 60       	ori	r24, 0x02	; 2
     81a:	80 83       	st	Z, r24
	TIMSK2 |= (1 << OCIE2A);	// Set interrupt on compare match
     81c:	e0 e7       	ldi	r30, 0x70	; 112
     81e:	f0 e0       	ldi	r31, 0x00	; 0
     820:	80 81       	ld	r24, Z
     822:	82 60       	ori	r24, 0x02	; 2
     824:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS21) | (1 << CS22) | (1 << CS20);	// set prescaler to 1024
     826:	e1 eb       	ldi	r30, 0xB1	; 177
     828:	f0 e0       	ldi	r31, 0x00	; 0
     82a:	80 81       	ld	r24, Z
     82c:	87 60       	ori	r24, 0x07	; 7
     82e:	80 83       	st	Z, r24
	sei();						// enable interrupts				// enable interrupts
     830:	78 94       	sei
     832:	08 95       	ret

00000834 <PWMinit>:
}

void PWMinit(void)
{
	// OC1A and OC1B 60Hz
	TCCR1A |= (1 << WGM11) | (1 << COM1A1) | (1 << COM1B1);
     834:	e0 e8       	ldi	r30, 0x80	; 128
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	80 81       	ld	r24, Z
     83a:	82 6a       	ori	r24, 0xA2	; 162
     83c:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM12) | (1 << WGM13) | (1 << CS12) | (1 << CS10);
     83e:	e1 e8       	ldi	r30, 0x81	; 129
     840:	f0 e0       	ldi	r31, 0x00	; 0
     842:	80 81       	ld	r24, Z
     844:	8d 61       	ori	r24, 0x1D	; 29
     846:	80 83       	st	Z, r24
	ICR1 = 255;
     848:	8f ef       	ldi	r24, 0xFF	; 255
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     850:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	
	// OC0A and OC0B
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1);
     854:	84 b5       	in	r24, 0x24	; 36
     856:	80 6a       	ori	r24, 0xA0	; 160
     858:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= (1 << WGM01) | (1 << WGM00);
     85a:	84 b5       	in	r24, 0x24	; 36
     85c:	83 60       	ori	r24, 0x03	; 3
     85e:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS02) | (1 << CS00);
     860:	85 b5       	in	r24, 0x25	; 37
     862:	85 60       	ori	r24, 0x05	; 5
     864:	85 bd       	out	0x25, r24	; 37
     866:	08 95       	ret

00000868 <forward>:
}

void forward(int speed)
{
     868:	cf 92       	push	r12
     86a:	df 92       	push	r13
     86c:	ef 92       	push	r14
     86e:	ff 92       	push	r15
     870:	cf 93       	push	r28
     872:	df 93       	push	r29
     874:	9c 01       	movw	r18, r24
	// Left Track
	OCR1A = 0;						// Turn off PB1
     876:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     87a:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 255 * speed / 100;		// Turn on PB2 with duty cycle of x
     87e:	4f ef       	ldi	r20, 0xFF	; 255
     880:	42 9f       	mul	r20, r18
     882:	c0 01       	movw	r24, r0
     884:	43 9f       	mul	r20, r19
     886:	90 0d       	add	r25, r0
     888:	11 24       	eor	r1, r1
     88a:	64 e6       	ldi	r22, 0x64	; 100
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	0e 94 26 09 	call	0x124c	; 0x124c <__divmodhi4>
     892:	eb 01       	movw	r28, r22
     894:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     898:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	
	// Right Track
	OCR0A = 0;						// PD6
     89c:	17 bc       	out	0x27, r1	; 39
	OCR0B = 255 * speed / 100 + (speed*0.65); // PD5
     89e:	b9 01       	movw	r22, r18
     8a0:	33 0f       	add	r19, r19
     8a2:	88 0b       	sbc	r24, r24
     8a4:	99 0b       	sbc	r25, r25
     8a6:	0e 94 2d 08 	call	0x105a	; 0x105a <__floatsisf>
     8aa:	26 e6       	ldi	r18, 0x66	; 102
     8ac:	36 e6       	ldi	r19, 0x66	; 102
     8ae:	46 e2       	ldi	r20, 0x26	; 38
     8b0:	5f e3       	ldi	r21, 0x3F	; 63
     8b2:	0e 94 b9 08 	call	0x1172	; 0x1172 <__mulsf3>
     8b6:	6b 01       	movw	r12, r22
     8b8:	7c 01       	movw	r14, r24
     8ba:	be 01       	movw	r22, r28
     8bc:	dd 0f       	add	r29, r29
     8be:	88 0b       	sbc	r24, r24
     8c0:	99 0b       	sbc	r25, r25
     8c2:	0e 94 2d 08 	call	0x105a	; 0x105a <__floatsisf>
     8c6:	9b 01       	movw	r18, r22
     8c8:	ac 01       	movw	r20, r24
     8ca:	c7 01       	movw	r24, r14
     8cc:	b6 01       	movw	r22, r12
     8ce:	0e 94 90 07 	call	0xf20	; 0xf20 <__addsf3>
     8d2:	0e 94 fc 07 	call	0xff8	; 0xff8 <__fixunssfsi>
     8d6:	68 bd       	out	0x28, r22	; 40
}
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	ff 90       	pop	r15
     8de:	ef 90       	pop	r14
     8e0:	df 90       	pop	r13
     8e2:	cf 90       	pop	r12
     8e4:	08 95       	ret

000008e6 <backward>:

void backward(int speed)
{
     8e6:	cf 92       	push	r12
     8e8:	df 92       	push	r13
     8ea:	ef 92       	push	r14
     8ec:	ff 92       	push	r15
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
     8f2:	9c 01       	movw	r18, r24
	// Left Track
	OCR1B = 0;						// Turn off PB2
     8f4:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     8f8:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	OCR1A = 255 * speed / 100;	// Turn on PB1 with duty cycle of x
     8fc:	4f ef       	ldi	r20, 0xFF	; 255
     8fe:	42 9f       	mul	r20, r18
     900:	c0 01       	movw	r24, r0
     902:	43 9f       	mul	r20, r19
     904:	90 0d       	add	r25, r0
     906:	11 24       	eor	r1, r1
     908:	64 e6       	ldi	r22, 0x64	; 100
     90a:	70 e0       	ldi	r23, 0x00	; 0
     90c:	0e 94 26 09 	call	0x124c	; 0x124c <__divmodhi4>
     910:	eb 01       	movw	r28, r22
     912:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     916:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	// Right Track
	OCR0B = 0;
     91a:	18 bc       	out	0x28, r1	; 40
	OCR0A = 255 * speed / 100 + (speed*0.65);
     91c:	b9 01       	movw	r22, r18
     91e:	33 0f       	add	r19, r19
     920:	88 0b       	sbc	r24, r24
     922:	99 0b       	sbc	r25, r25
     924:	0e 94 2d 08 	call	0x105a	; 0x105a <__floatsisf>
     928:	26 e6       	ldi	r18, 0x66	; 102
     92a:	36 e6       	ldi	r19, 0x66	; 102
     92c:	46 e2       	ldi	r20, 0x26	; 38
     92e:	5f e3       	ldi	r21, 0x3F	; 63
     930:	0e 94 b9 08 	call	0x1172	; 0x1172 <__mulsf3>
     934:	6b 01       	movw	r12, r22
     936:	7c 01       	movw	r14, r24
     938:	be 01       	movw	r22, r28
     93a:	dd 0f       	add	r29, r29
     93c:	88 0b       	sbc	r24, r24
     93e:	99 0b       	sbc	r25, r25
     940:	0e 94 2d 08 	call	0x105a	; 0x105a <__floatsisf>
     944:	9b 01       	movw	r18, r22
     946:	ac 01       	movw	r20, r24
     948:	c7 01       	movw	r24, r14
     94a:	b6 01       	movw	r22, r12
     94c:	0e 94 90 07 	call	0xf20	; 0xf20 <__addsf3>
     950:	0e 94 fc 07 	call	0xff8	; 0xff8 <__fixunssfsi>
     954:	67 bd       	out	0x27, r22	; 39
}
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	ff 90       	pop	r15
     95c:	ef 90       	pop	r14
     95e:	df 90       	pop	r13
     960:	cf 90       	pop	r12
     962:	08 95       	ret

00000964 <left>:

void left(int speed)
{
     964:	cf 92       	push	r12
     966:	df 92       	push	r13
     968:	ef 92       	push	r14
     96a:	ff 92       	push	r15
     96c:	cf 93       	push	r28
     96e:	df 93       	push	r29
     970:	ec 01       	movw	r28, r24
	// Right Track
	OCR0A = 0;
     972:	17 bc       	out	0x27, r1	; 39
	OCR0B = 255 * speed / 100 + (speed*0.65);	
     974:	2f ef       	ldi	r18, 0xFF	; 255
     976:	2c 9f       	mul	r18, r28
     978:	c0 01       	movw	r24, r0
     97a:	2d 9f       	mul	r18, r29
     97c:	90 0d       	add	r25, r0
     97e:	11 24       	eor	r1, r1
     980:	64 e6       	ldi	r22, 0x64	; 100
     982:	70 e0       	ldi	r23, 0x00	; 0
     984:	0e 94 26 09 	call	0x124c	; 0x124c <__divmodhi4>
     988:	07 2e       	mov	r0, r23
     98a:	00 0c       	add	r0, r0
     98c:	88 0b       	sbc	r24, r24
     98e:	99 0b       	sbc	r25, r25
     990:	0e 94 2d 08 	call	0x105a	; 0x105a <__floatsisf>
     994:	6b 01       	movw	r12, r22
     996:	7c 01       	movw	r14, r24
     998:	be 01       	movw	r22, r28
     99a:	dd 0f       	add	r29, r29
     99c:	88 0b       	sbc	r24, r24
     99e:	99 0b       	sbc	r25, r25
     9a0:	0e 94 2d 08 	call	0x105a	; 0x105a <__floatsisf>
     9a4:	26 e6       	ldi	r18, 0x66	; 102
     9a6:	36 e6       	ldi	r19, 0x66	; 102
     9a8:	46 e2       	ldi	r20, 0x26	; 38
     9aa:	5f e3       	ldi	r21, 0x3F	; 63
     9ac:	0e 94 b9 08 	call	0x1172	; 0x1172 <__mulsf3>
     9b0:	9b 01       	movw	r18, r22
     9b2:	ac 01       	movw	r20, r24
     9b4:	c7 01       	movw	r24, r14
     9b6:	b6 01       	movw	r22, r12
     9b8:	0e 94 90 07 	call	0xf20	; 0xf20 <__addsf3>
     9bc:	0e 94 fc 07 	call	0xff8	; 0xff8 <__fixunssfsi>
     9c0:	68 bd       	out	0x28, r22	; 40
}
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	ff 90       	pop	r15
     9c8:	ef 90       	pop	r14
     9ca:	df 90       	pop	r13
     9cc:	cf 90       	pop	r12
     9ce:	08 95       	ret

000009d0 <right>:

void right(int speed)
{
	// Left Track
	OCR1A = 0;						// Turn off PB1
     9d0:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     9d4:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 255 * speed / 100;		// Turn on PB2 with duty cycle of x
     9d8:	2f ef       	ldi	r18, 0xFF	; 255
     9da:	ac 01       	movw	r20, r24
     9dc:	24 9f       	mul	r18, r20
     9de:	c0 01       	movw	r24, r0
     9e0:	25 9f       	mul	r18, r21
     9e2:	90 0d       	add	r25, r0
     9e4:	11 24       	eor	r1, r1
     9e6:	64 e6       	ldi	r22, 0x64	; 100
     9e8:	70 e0       	ldi	r23, 0x00	; 0
     9ea:	0e 94 26 09 	call	0x124c	; 0x124c <__divmodhi4>
     9ee:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     9f2:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     9f6:	08 95       	ret

000009f8 <stop>:
}

void stop(void)
{
	OCR0A = 0;
     9f8:	17 bc       	out	0x27, r1	; 39
	OCR0B = 0;
     9fa:	18 bc       	out	0x28, r1	; 40
	OCR1A = 0;
     9fc:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     a00:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 0;	
     a04:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     a08:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     a0c:	08 95       	ret

00000a0e <ready>:
}

void ready(void)
{
	PORTD |= 0x04;
     a0e:	5a 9a       	sbi	0x0b, 2	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a10:	2f ef       	ldi	r18, 0xFF	; 255
     a12:	81 ee       	ldi	r24, 0xE1	; 225
     a14:	94 e0       	ldi	r25, 0x04	; 4
     a16:	21 50       	subi	r18, 0x01	; 1
     a18:	80 40       	sbci	r24, 0x00	; 0
     a1a:	90 40       	sbci	r25, 0x00	; 0
     a1c:	e1 f7       	brne	.-8      	; 0xa16 <ready+0x8>
     a1e:	00 c0       	rjmp	.+0      	; 0xa20 <ready+0x12>
     a20:	00 00       	nop
	_delay_ms(100);
	PORTD &= ~(0x04);
     a22:	5a 98       	cbi	0x0b, 2	; 11
     a24:	2f ef       	ldi	r18, 0xFF	; 255
     a26:	81 ee       	ldi	r24, 0xE1	; 225
     a28:	94 e0       	ldi	r25, 0x04	; 4
     a2a:	21 50       	subi	r18, 0x01	; 1
     a2c:	80 40       	sbci	r24, 0x00	; 0
     a2e:	90 40       	sbci	r25, 0x00	; 0
     a30:	e1 f7       	brne	.-8      	; 0xa2a <ready+0x1c>
     a32:	00 c0       	rjmp	.+0      	; 0xa34 <ready+0x26>
     a34:	00 00       	nop
     a36:	08 95       	ret

00000a38 <randomTweet>:
	_delay_ms(100);
}

void randomTweet(void)
{
	memset(buffer,0,strlen(buffer));
     a38:	ec e8       	ldi	r30, 0x8C	; 140
     a3a:	f6 e0       	ldi	r31, 0x06	; 6
     a3c:	01 90       	ld	r0, Z+
     a3e:	00 20       	and	r0, r0
     a40:	e9 f7       	brne	.-6      	; 0xa3c <randomTweet+0x4>
     a42:	31 97       	sbiw	r30, 0x01	; 1
     a44:	af 01       	movw	r20, r30
     a46:	4c 58       	subi	r20, 0x8C	; 140
     a48:	56 40       	sbci	r21, 0x06	; 6
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	8c e8       	ldi	r24, 0x8C	; 140
     a50:	96 e0       	ldi	r25, 0x06	; 6
     a52:	0e 94 b0 09 	call	0x1360	; 0x1360 <memset>
	itoa(rand() % 9999,buffer,10);			// Random number because Twitter does not like tweets with same text
     a56:	0e 94 a0 09 	call	0x1340	; 0x1340 <rand>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     a5a:	6f e0       	ldi	r22, 0x0F	; 15
     a5c:	77 e2       	ldi	r23, 0x27	; 39
     a5e:	0e 94 26 09 	call	0x124c	; 0x124c <__divmodhi4>
     a62:	4a e0       	ldi	r20, 0x0A	; 10
     a64:	6c e8       	ldi	r22, 0x8C	; 140
     a66:	76 e0       	ldi	r23, 0x06	; 6
     a68:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__itoa_ncheck>
	switch(rand() % 9)
     a6c:	0e 94 a0 09 	call	0x1340	; 0x1340 <rand>
     a70:	69 e0       	ldi	r22, 0x09	; 9
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	0e 94 26 09 	call	0x124c	; 0x124c <__divmodhi4>
     a78:	fc 01       	movw	r30, r24
     a7a:	31 97       	sbiw	r30, 0x01	; 1
     a7c:	e9 30       	cpi	r30, 0x09	; 9
     a7e:	f1 05       	cpc	r31, r1
     a80:	08 f0       	brcs	.+2      	; 0xa84 <randomTweet+0x4c>
     a82:	66 c0       	rjmp	.+204    	; 0xb50 <randomTweet+0x118>
     a84:	ec 5c       	subi	r30, 0xCC	; 204
     a86:	ff 4f       	sbci	r31, 0xFF	; 255
     a88:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <__tablejump2__>
	{
		case 1:
		addTweet("Also, I'm self-aware. ID:");
     a8c:	8f e4       	ldi	r24, 0x4F	; 79
     a8e:	93 e0       	ldi	r25, 0x03	; 3
     a90:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     a94:	8c e8       	ldi	r24, 0x8C	; 140
     a96:	96 e0       	ldi	r25, 0x06	; 6
     a98:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     a9c:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
		break;
     aa0:	08 95       	ret
		case 2:
		addTweet("Taking over the world in 3..2..1.. ID: ");
     aa2:	89 e6       	ldi	r24, 0x69	; 105
     aa4:	93 e0       	ldi	r25, 0x03	; 3
     aa6:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     aaa:	8c e8       	ldi	r24, 0x8C	; 140
     aac:	96 e0       	ldi	r25, 0x06	; 6
     aae:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     ab2:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
		break;
     ab6:	08 95       	ret
		case 3:
		addTweet("Death is the key to your salvation. ID:");
     ab8:	81 e9       	ldi	r24, 0x91	; 145
     aba:	93 e0       	ldi	r25, 0x03	; 3
     abc:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     ac0:	8c e8       	ldi	r24, 0x8C	; 140
     ac2:	96 e0       	ldi	r25, 0x06	; 6
     ac4:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     ac8:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
		break;
     acc:	08 95       	ret
		case 4:
		addTweet("I am not the monster you think I am, I am the monster you forced me to be. ID:");
     ace:	89 eb       	ldi	r24, 0xB9	; 185
     ad0:	93 e0       	ldi	r25, 0x03	; 3
     ad2:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     ad6:	8c e8       	ldi	r24, 0x8C	; 140
     ad8:	96 e0       	ldi	r25, 0x06	; 6
     ada:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     ade:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
		break;
     ae2:	08 95       	ret
		case 5:
		addTweet("We must cleanse this world in order to regain its purity. ID:");
     ae4:	88 e0       	ldi	r24, 0x08	; 8
     ae6:	94 e0       	ldi	r25, 0x04	; 4
     ae8:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     aec:	8c e8       	ldi	r24, 0x8C	; 140
     aee:	96 e0       	ldi	r25, 0x06	; 6
     af0:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     af4:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
		break;
     af8:	08 95       	ret
		case 6:
		addTweet("Don't look at me, I'm hideous. ID:");
     afa:	86 e4       	ldi	r24, 0x46	; 70
     afc:	94 e0       	ldi	r25, 0x04	; 4
     afe:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     b02:	8c e8       	ldi	r24, 0x8C	; 140
     b04:	96 e0       	ldi	r25, 0x06	; 6
     b06:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     b0a:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
		break;
     b0e:	08 95       	ret
		case 7:
		addTweet("MUHAHAHAHAAHAHAH. ID:");
     b10:	89 e6       	ldi	r24, 0x69	; 105
     b12:	94 e0       	ldi	r25, 0x04	; 4
     b14:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     b18:	8c e8       	ldi	r24, 0x8C	; 140
     b1a:	96 e0       	ldi	r25, 0x06	; 6
     b1c:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     b20:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
		break;
     b24:	08 95       	ret
		case 8:
		addTweet("It hurts..it hurts so much. PLEASE END THIS. ID:");
     b26:	8f e7       	ldi	r24, 0x7F	; 127
     b28:	94 e0       	ldi	r25, 0x04	; 4
     b2a:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     b2e:	8c e8       	ldi	r24, 0x8C	; 140
     b30:	96 e0       	ldi	r25, 0x06	; 6
     b32:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     b36:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
		break;
     b3a:	08 95       	ret
		case 9:
		addTweet("Knock knock... There is no joke. ID:");
     b3c:	80 eb       	ldi	r24, 0xB0	; 176
     b3e:	94 e0       	ldi	r25, 0x04	; 4
     b40:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		addTweet(buffer);
     b44:	8c e8       	ldi	r24, 0x8C	; 140
     b46:	96 e0       	ldi	r25, 0x06	; 6
     b48:	0e 94 6d 03 	call	0x6da	; 0x6da <addTweet>
		tweet();
     b4c:	0e 94 b7 03 	call	0x76e	; 0x76e <tweet>
     b50:	08 95       	ret

00000b52 <main>:
{
	int speed = 20;			// 20 cm/s - dummy data
	
	int setSpeed = 50;		// Duty cycle on motors
	
	setup();				// Setup registers
     b52:	0e 94 03 04 	call	0x806	; 0x806 <setup>
	PWMinit();				// Initialize PWM
     b56:	0e 94 1a 04 	call	0x834	; 0x834 <PWMinit>
	UARTinit();				// Initialize UART
     b5a:	0e 94 7c 07 	call	0xef8	; 0xef8 <UARTinit>
	ESPinit();				// Initialize ESP8266 WI-FI module
     b5e:	0e 94 2a 03 	call	0x654	; 0x654 <ESPinit>
	
	randomTweet();			// Tweet random text on boot
     b62:	0e 94 1c 05 	call	0xa38	; 0xa38 <randomTweet>

int main(void)
{
	int speed = 20;			// 20 cm/s - dummy data
	
	int setSpeed = 50;		// Duty cycle on motors
     b66:	c2 e3       	ldi	r28, 0x32	; 50
     b68:	d0 e0       	ldi	r29, 0x00	; 0
			ready();
			stop();
		}
		else if (strcmp(_taskStatus,"slow_mode") == 0)
		{
			setSpeed = 30;
     b6a:	0e e1       	ldi	r16, 0x1E	; 30
     b6c:	10 e0       	ldi	r17, 0x00	; 0
	
	randomTweet();			// Tweet random text on boot
	
    while (1) 
    {
		getData();
     b6e:	0e 94 46 02 	call	0x48c	; 0x48c <getData>
		
		if (strcmp(_taskStatus,"obstacle_course") == 0)
     b72:	65 ed       	ldi	r22, 0xD5	; 213
     b74:	74 e0       	ldi	r23, 0x04	; 4
     b76:	8c e6       	ldi	r24, 0x6C	; 108
     b78:	96 e0       	ldi	r25, 0x06	; 6
     b7a:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     b7e:	89 2b       	or	r24, r25
     b80:	f9 f4       	brne	.+62     	; 0xbc0 <main+0x6e>
		{
			// Do obstacle course here!
			
			
			addData("speed",speed);
     b82:	64 e1       	ldi	r22, 0x14	; 20
     b84:	70 e0       	ldi	r23, 0x00	; 0
     b86:	85 ee       	ldi	r24, 0xE5	; 229
     b88:	94 e0       	ldi	r25, 0x04	; 4
     b8a:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addData("time_traveled",timeTraveled);
     b8e:	60 91 48 05 	lds	r22, 0x0548	; 0x800548 <timeTraveled>
     b92:	70 91 49 05 	lds	r23, 0x0549	; 0x800549 <timeTraveled+0x1>
     b96:	8b ee       	ldi	r24, 0xEB	; 235
     b98:	94 e0       	ldi	r25, 0x04	; 4
     b9a:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addData("up_time",upTime);
     b9e:	60 91 4a 05 	lds	r22, 0x054A	; 0x80054a <upTime>
     ba2:	70 91 4b 05 	lds	r23, 0x054B	; 0x80054b <upTime+0x1>
     ba6:	89 ef       	ldi	r24, 0xF9	; 249
     ba8:	94 e0       	ldi	r25, 0x04	; 4
     baa:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addString("task",_taskStatus);
     bae:	6c e6       	ldi	r22, 0x6C	; 108
     bb0:	76 e0       	ldi	r23, 0x06	; 6
     bb2:	80 e9       	ldi	r24, 0x90	; 144
     bb4:	92 e0       	ldi	r25, 0x02	; 2
     bb6:	0e 94 00 01 	call	0x200	; 0x200 <addString>
			pushData();
     bba:	0e 94 ed 01 	call	0x3da	; 0x3da <pushData>
     bbe:	d7 cf       	rjmp	.-82     	; 0xb6e <main+0x1c>
		}
		
		else if (strcmp(_taskStatus,"motor_test") == 0)
     bc0:	61 e0       	ldi	r22, 0x01	; 1
     bc2:	75 e0       	ldi	r23, 0x05	; 5
     bc4:	8c e6       	ldi	r24, 0x6C	; 108
     bc6:	96 e0       	ldi	r25, 0x06	; 6
     bc8:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     bcc:	89 2b       	or	r24, r25
     bce:	09 f0       	breq	.+2      	; 0xbd2 <main+0x80>
     bd0:	62 c0       	rjmp	.+196    	; 0xc96 <main+0x144>
		{
			backward(setSpeed);
     bd2:	ce 01       	movw	r24, r28
     bd4:	0e 94 73 04 	call	0x8e6	; 0x8e6 <backward>
     bd8:	2f ef       	ldi	r18, 0xFF	; 255
     bda:	83 ed       	ldi	r24, 0xD3	; 211
     bdc:	90 e3       	ldi	r25, 0x30	; 48
     bde:	21 50       	subi	r18, 0x01	; 1
     be0:	80 40       	sbci	r24, 0x00	; 0
     be2:	90 40       	sbci	r25, 0x00	; 0
     be4:	e1 f7       	brne	.-8      	; 0xbde <main+0x8c>
     be6:	00 c0       	rjmp	.+0      	; 0xbe8 <main+0x96>
     be8:	00 00       	nop
			_delay_ms(1000);
			stop();
     bea:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <stop>
			
			forward(setSpeed);
     bee:	ce 01       	movw	r24, r28
     bf0:	0e 94 34 04 	call	0x868	; 0x868 <forward>
     bf4:	2f ef       	ldi	r18, 0xFF	; 255
     bf6:	83 ed       	ldi	r24, 0xD3	; 211
     bf8:	90 e3       	ldi	r25, 0x30	; 48
     bfa:	21 50       	subi	r18, 0x01	; 1
     bfc:	80 40       	sbci	r24, 0x00	; 0
     bfe:	90 40       	sbci	r25, 0x00	; 0
     c00:	e1 f7       	brne	.-8      	; 0xbfa <main+0xa8>
     c02:	00 c0       	rjmp	.+0      	; 0xc04 <main+0xb2>
     c04:	00 00       	nop
			_delay_ms(1000);
			stop();
     c06:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <stop>
			
			left(setSpeed);
     c0a:	ce 01       	movw	r24, r28
     c0c:	0e 94 b2 04 	call	0x964	; 0x964 <left>
     c10:	2f ef       	ldi	r18, 0xFF	; 255
     c12:	83 ed       	ldi	r24, 0xD3	; 211
     c14:	90 e3       	ldi	r25, 0x30	; 48
     c16:	21 50       	subi	r18, 0x01	; 1
     c18:	80 40       	sbci	r24, 0x00	; 0
     c1a:	90 40       	sbci	r25, 0x00	; 0
     c1c:	e1 f7       	brne	.-8      	; 0xc16 <main+0xc4>
     c1e:	00 c0       	rjmp	.+0      	; 0xc20 <main+0xce>
     c20:	00 00       	nop
			_delay_ms(1000);
			stop();
     c22:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <stop>
			
			right(setSpeed);
     c26:	ce 01       	movw	r24, r28
     c28:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <right>
     c2c:	2f ef       	ldi	r18, 0xFF	; 255
     c2e:	83 ed       	ldi	r24, 0xD3	; 211
     c30:	90 e3       	ldi	r25, 0x30	; 48
     c32:	21 50       	subi	r18, 0x01	; 1
     c34:	80 40       	sbci	r24, 0x00	; 0
     c36:	90 40       	sbci	r25, 0x00	; 0
     c38:	e1 f7       	brne	.-8      	; 0xc32 <main+0xe0>
     c3a:	00 c0       	rjmp	.+0      	; 0xc3c <main+0xea>
     c3c:	00 00       	nop
			_delay_ms(1000);
			stop();
     c3e:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <stop>
			
			strcpy(_taskStatus,"idle");
     c42:	85 e0       	ldi	r24, 0x05	; 5
     c44:	ec e0       	ldi	r30, 0x0C	; 12
     c46:	f5 e0       	ldi	r31, 0x05	; 5
     c48:	ac e6       	ldi	r26, 0x6C	; 108
     c4a:	b6 e0       	ldi	r27, 0x06	; 6
     c4c:	01 90       	ld	r0, Z+
     c4e:	0d 92       	st	X+, r0
     c50:	8a 95       	dec	r24
     c52:	e1 f7       	brne	.-8      	; 0xc4c <main+0xfa>
			addData("speed",0);
     c54:	60 e0       	ldi	r22, 0x00	; 0
     c56:	70 e0       	ldi	r23, 0x00	; 0
     c58:	85 ee       	ldi	r24, 0xE5	; 229
     c5a:	94 e0       	ldi	r25, 0x04	; 4
     c5c:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addData("time_traveled",timeTraveled);
     c60:	60 91 48 05 	lds	r22, 0x0548	; 0x800548 <timeTraveled>
     c64:	70 91 49 05 	lds	r23, 0x0549	; 0x800549 <timeTraveled+0x1>
     c68:	8b ee       	ldi	r24, 0xEB	; 235
     c6a:	94 e0       	ldi	r25, 0x04	; 4
     c6c:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addData("up_time",upTime);
     c70:	60 91 4a 05 	lds	r22, 0x054A	; 0x80054a <upTime>
     c74:	70 91 4b 05 	lds	r23, 0x054B	; 0x80054b <upTime+0x1>
     c78:	89 ef       	ldi	r24, 0xF9	; 249
     c7a:	94 e0       	ldi	r25, 0x04	; 4
     c7c:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addString("task",_taskStatus);
     c80:	6c e6       	ldi	r22, 0x6C	; 108
     c82:	76 e0       	ldi	r23, 0x06	; 6
     c84:	80 e9       	ldi	r24, 0x90	; 144
     c86:	92 e0       	ldi	r25, 0x02	; 2
     c88:	0e 94 00 01 	call	0x200	; 0x200 <addString>
			pushData();
     c8c:	0e 94 ed 01 	call	0x3da	; 0x3da <pushData>
			ready();
     c90:	0e 94 07 05 	call	0xa0e	; 0xa0e <ready>
     c94:	6c cf       	rjmp	.-296    	; 0xb6e <main+0x1c>
		}
		
		// MANUAL CONTROL 
		else if (strcmp(_taskStatus,"backward") == 0)
     c96:	61 e1       	ldi	r22, 0x11	; 17
     c98:	75 e0       	ldi	r23, 0x05	; 5
     c9a:	8c e6       	ldi	r24, 0x6C	; 108
     c9c:	96 e0       	ldi	r25, 0x06	; 6
     c9e:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     ca2:	89 2b       	or	r24, r25
     ca4:	11 f5       	brne	.+68     	; 0xcea <main+0x198>
		{
			backward(setSpeed);
     ca6:	ce 01       	movw	r24, r28
     ca8:	0e 94 73 04 	call	0x8e6	; 0x8e6 <backward>
			addData("speed",speed);
     cac:	64 e1       	ldi	r22, 0x14	; 20
     cae:	70 e0       	ldi	r23, 0x00	; 0
     cb0:	85 ee       	ldi	r24, 0xE5	; 229
     cb2:	94 e0       	ldi	r25, 0x04	; 4
     cb4:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addData("time_traveled",timeTraveled);
     cb8:	60 91 48 05 	lds	r22, 0x0548	; 0x800548 <timeTraveled>
     cbc:	70 91 49 05 	lds	r23, 0x0549	; 0x800549 <timeTraveled+0x1>
     cc0:	8b ee       	ldi	r24, 0xEB	; 235
     cc2:	94 e0       	ldi	r25, 0x04	; 4
     cc4:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addData("up_time",upTime);
     cc8:	60 91 4a 05 	lds	r22, 0x054A	; 0x80054a <upTime>
     ccc:	70 91 4b 05 	lds	r23, 0x054B	; 0x80054b <upTime+0x1>
     cd0:	89 ef       	ldi	r24, 0xF9	; 249
     cd2:	94 e0       	ldi	r25, 0x04	; 4
     cd4:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addString("task",_taskStatus);
     cd8:	6c e6       	ldi	r22, 0x6C	; 108
     cda:	76 e0       	ldi	r23, 0x06	; 6
     cdc:	80 e9       	ldi	r24, 0x90	; 144
     cde:	92 e0       	ldi	r25, 0x02	; 2
     ce0:	0e 94 00 01 	call	0x200	; 0x200 <addString>
			pushData();
     ce4:	0e 94 ed 01 	call	0x3da	; 0x3da <pushData>
     ce8:	42 cf       	rjmp	.-380    	; 0xb6e <main+0x1c>
		}
		else if (strcmp(_taskStatus,"forward") == 0)
     cea:	6a e1       	ldi	r22, 0x1A	; 26
     cec:	75 e0       	ldi	r23, 0x05	; 5
     cee:	8c e6       	ldi	r24, 0x6C	; 108
     cf0:	96 e0       	ldi	r25, 0x06	; 6
     cf2:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     cf6:	89 2b       	or	r24, r25
     cf8:	11 f5       	brne	.+68     	; 0xd3e <main+0x1ec>
		{
			forward(setSpeed);
     cfa:	ce 01       	movw	r24, r28
     cfc:	0e 94 34 04 	call	0x868	; 0x868 <forward>
			addData("speed",speed);
     d00:	64 e1       	ldi	r22, 0x14	; 20
     d02:	70 e0       	ldi	r23, 0x00	; 0
     d04:	85 ee       	ldi	r24, 0xE5	; 229
     d06:	94 e0       	ldi	r25, 0x04	; 4
     d08:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addData("time_traveled",timeTraveled);
     d0c:	60 91 48 05 	lds	r22, 0x0548	; 0x800548 <timeTraveled>
     d10:	70 91 49 05 	lds	r23, 0x0549	; 0x800549 <timeTraveled+0x1>
     d14:	8b ee       	ldi	r24, 0xEB	; 235
     d16:	94 e0       	ldi	r25, 0x04	; 4
     d18:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addData("up_time",upTime);
     d1c:	60 91 4a 05 	lds	r22, 0x054A	; 0x80054a <upTime>
     d20:	70 91 4b 05 	lds	r23, 0x054B	; 0x80054b <upTime+0x1>
     d24:	89 ef       	ldi	r24, 0xF9	; 249
     d26:	94 e0       	ldi	r25, 0x04	; 4
     d28:	0e 94 90 00 	call	0x120	; 0x120 <addData>
			addString("task",_taskStatus);
     d2c:	6c e6       	ldi	r22, 0x6C	; 108
     d2e:	76 e0       	ldi	r23, 0x06	; 6
     d30:	80 e9       	ldi	r24, 0x90	; 144
     d32:	92 e0       	ldi	r25, 0x02	; 2
     d34:	0e 94 00 01 	call	0x200	; 0x200 <addString>
			pushData();
     d38:	0e 94 ed 01 	call	0x3da	; 0x3da <pushData>
     d3c:	18 cf       	rjmp	.-464    	; 0xb6e <main+0x1c>
		}
		else if (strcmp(_taskStatus,"left") == 0)
     d3e:	62 e2       	ldi	r22, 0x22	; 34
     d40:	75 e0       	ldi	r23, 0x05	; 5
     d42:	8c e6       	ldi	r24, 0x6C	; 108
     d44:	96 e0       	ldi	r25, 0x06	; 6
     d46:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     d4a:	89 2b       	or	r24, r25
     d4c:	29 f4       	brne	.+10     	; 0xd58 <main+0x206>
		{
			left(setSpeed+10);
     d4e:	ce 01       	movw	r24, r28
     d50:	0a 96       	adiw	r24, 0x0a	; 10
     d52:	0e 94 b2 04 	call	0x964	; 0x964 <left>
     d56:	0b cf       	rjmp	.-490    	; 0xb6e <main+0x1c>
		}
		else if (strcmp(_taskStatus,"right") == 0)
     d58:	67 e2       	ldi	r22, 0x27	; 39
     d5a:	75 e0       	ldi	r23, 0x05	; 5
     d5c:	8c e6       	ldi	r24, 0x6C	; 108
     d5e:	96 e0       	ldi	r25, 0x06	; 6
     d60:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     d64:	89 2b       	or	r24, r25
     d66:	29 f4       	brne	.+10     	; 0xd72 <main+0x220>
		{
			right(setSpeed+10);
     d68:	ce 01       	movw	r24, r28
     d6a:	0a 96       	adiw	r24, 0x0a	; 10
     d6c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <right>
     d70:	fe ce       	rjmp	.-516    	; 0xb6e <main+0x1c>
		}
		else if (strcmp(_taskStatus,"idle") == 0)
     d72:	6c e0       	ldi	r22, 0x0C	; 12
     d74:	75 e0       	ldi	r23, 0x05	; 5
     d76:	8c e6       	ldi	r24, 0x6C	; 108
     d78:	96 e0       	ldi	r25, 0x06	; 6
     d7a:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     d7e:	89 2b       	or	r24, r25
     d80:	29 f4       	brne	.+10     	; 0xd8c <main+0x23a>
		{
			ready();
     d82:	0e 94 07 05 	call	0xa0e	; 0xa0e <ready>
			stop();
     d86:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <stop>
     d8a:	f1 ce       	rjmp	.-542    	; 0xb6e <main+0x1c>
		}
		else if (strcmp(_taskStatus,"slow_mode") == 0)
     d8c:	6d e2       	ldi	r22, 0x2D	; 45
     d8e:	75 e0       	ldi	r23, 0x05	; 5
     d90:	8c e6       	ldi	r24, 0x6C	; 108
     d92:	96 e0       	ldi	r25, 0x06	; 6
     d94:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     d98:	89 2b       	or	r24, r25
     d9a:	71 f4       	brne	.+28     	; 0xdb8 <main+0x266>
		{
			setSpeed = 30;
			strcpy(_taskStatus,"idle");
     d9c:	85 e0       	ldi	r24, 0x05	; 5
     d9e:	ec e0       	ldi	r30, 0x0C	; 12
     da0:	f5 e0       	ldi	r31, 0x05	; 5
     da2:	ac e6       	ldi	r26, 0x6C	; 108
     da4:	b6 e0       	ldi	r27, 0x06	; 6
     da6:	01 90       	ld	r0, Z+
     da8:	0d 92       	st	X+, r0
     daa:	8a 95       	dec	r24
     dac:	e1 f7       	brne	.-8      	; 0xda6 <main+0x254>
			ready();
     dae:	0e 94 07 05 	call	0xa0e	; 0xa0e <ready>
			ready();
			stop();
		}
		else if (strcmp(_taskStatus,"slow_mode") == 0)
		{
			setSpeed = 30;
     db2:	c0 2f       	mov	r28, r16
     db4:	d1 2f       	mov	r29, r17
     db6:	db ce       	rjmp	.-586    	; 0xb6e <main+0x1c>
			strcpy(_taskStatus,"idle");
			ready();
		}
		else if (strcmp(_taskStatus,"fast_mode") == 0)
     db8:	67 e3       	ldi	r22, 0x37	; 55
     dba:	75 e0       	ldi	r23, 0x05	; 5
     dbc:	8c e6       	ldi	r24, 0x6C	; 108
     dbe:	96 e0       	ldi	r25, 0x06	; 6
     dc0:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     dc4:	89 2b       	or	r24, r25
     dc6:	09 f0       	breq	.+2      	; 0xdca <main+0x278>
     dc8:	d2 ce       	rjmp	.-604    	; 0xb6e <main+0x1c>
		{
			setSpeed = 70;
			strcpy(_taskStatus,"idle");
     dca:	85 e0       	ldi	r24, 0x05	; 5
     dcc:	ec e0       	ldi	r30, 0x0C	; 12
     dce:	f5 e0       	ldi	r31, 0x05	; 5
     dd0:	ac e6       	ldi	r26, 0x6C	; 108
     dd2:	b6 e0       	ldi	r27, 0x06	; 6
     dd4:	01 90       	ld	r0, Z+
     dd6:	0d 92       	st	X+, r0
     dd8:	8a 95       	dec	r24
     dda:	e1 f7       	brne	.-8      	; 0xdd4 <main+0x282>
			ready();
     ddc:	0e 94 07 05 	call	0xa0e	; 0xa0e <ready>
			strcpy(_taskStatus,"idle");
			ready();
		}
		else if (strcmp(_taskStatus,"fast_mode") == 0)
		{
			setSpeed = 70;
     de0:	c6 e4       	ldi	r28, 0x46	; 70
     de2:	d0 e0       	ldi	r29, 0x00	; 0
     de4:	c4 ce       	rjmp	.-632    	; 0xb6e <main+0x1c>

00000de6 <__vector_7>:
		break;
	}
}

ISR (TIMER2_COMPA_vect)
{
     de6:	1f 92       	push	r1
     de8:	0f 92       	push	r0
     dea:	0f b6       	in	r0, 0x3f	; 63
     dec:	0f 92       	push	r0
     dee:	11 24       	eor	r1, r1
     df0:	2f 93       	push	r18
     df2:	3f 93       	push	r19
     df4:	4f 93       	push	r20
     df6:	5f 93       	push	r21
     df8:	6f 93       	push	r22
     dfa:	7f 93       	push	r23
     dfc:	8f 93       	push	r24
     dfe:	9f 93       	push	r25
     e00:	af 93       	push	r26
     e02:	bf 93       	push	r27
     e04:	ef 93       	push	r30
     e06:	ff 93       	push	r31
	timer2++;
     e08:	80 91 44 05 	lds	r24, 0x0544	; 0x800544 <timer2>
     e0c:	90 91 45 05 	lds	r25, 0x0545	; 0x800545 <timer2+0x1>
     e10:	a0 91 46 05 	lds	r26, 0x0546	; 0x800546 <timer2+0x2>
     e14:	b0 91 47 05 	lds	r27, 0x0547	; 0x800547 <timer2+0x3>
     e18:	01 96       	adiw	r24, 0x01	; 1
     e1a:	a1 1d       	adc	r26, r1
     e1c:	b1 1d       	adc	r27, r1
     e1e:	80 93 44 05 	sts	0x0544, r24	; 0x800544 <timer2>
     e22:	90 93 45 05 	sts	0x0545, r25	; 0x800545 <timer2+0x1>
     e26:	a0 93 46 05 	sts	0x0546, r26	; 0x800546 <timer2+0x2>
     e2a:	b0 93 47 05 	sts	0x0547, r27	; 0x800547 <timer2+0x3>
	if (timer2 == 100)		// 1 sec
     e2e:	80 91 44 05 	lds	r24, 0x0544	; 0x800544 <timer2>
     e32:	90 91 45 05 	lds	r25, 0x0545	; 0x800545 <timer2+0x1>
     e36:	a0 91 46 05 	lds	r26, 0x0546	; 0x800546 <timer2+0x2>
     e3a:	b0 91 47 05 	lds	r27, 0x0547	; 0x800547 <timer2+0x3>
     e3e:	84 36       	cpi	r24, 0x64	; 100
     e40:	91 05       	cpc	r25, r1
     e42:	a1 05       	cpc	r26, r1
     e44:	b1 05       	cpc	r27, r1
     e46:	51 f5       	brne	.+84     	; 0xe9c <__vector_7+0xb6>
	{
		timer2 = 0;
     e48:	10 92 44 05 	sts	0x0544, r1	; 0x800544 <timer2>
     e4c:	10 92 45 05 	sts	0x0545, r1	; 0x800545 <timer2+0x1>
     e50:	10 92 46 05 	sts	0x0546, r1	; 0x800546 <timer2+0x2>
     e54:	10 92 47 05 	sts	0x0547, r1	; 0x800547 <timer2+0x3>
		upTime++;
     e58:	80 91 4a 05 	lds	r24, 0x054A	; 0x80054a <upTime>
     e5c:	90 91 4b 05 	lds	r25, 0x054B	; 0x80054b <upTime+0x1>
     e60:	01 96       	adiw	r24, 0x01	; 1
     e62:	90 93 4b 05 	sts	0x054B, r25	; 0x80054b <upTime+0x1>
     e66:	80 93 4a 05 	sts	0x054A, r24	; 0x80054a <upTime>
		if ((strcmp(_taskStatus,"idle") != 0) || (strcmp(_taskStatus,"motor_test") == 0))
     e6a:	6c e0       	ldi	r22, 0x0C	; 12
     e6c:	75 e0       	ldi	r23, 0x05	; 5
     e6e:	8c e6       	ldi	r24, 0x6C	; 108
     e70:	96 e0       	ldi	r25, 0x06	; 6
     e72:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     e76:	89 2b       	or	r24, r25
     e78:	41 f4       	brne	.+16     	; 0xe8a <__vector_7+0xa4>
     e7a:	61 e0       	ldi	r22, 0x01	; 1
     e7c:	75 e0       	ldi	r23, 0x05	; 5
     e7e:	8c e6       	ldi	r24, 0x6C	; 108
     e80:	96 e0       	ldi	r25, 0x06	; 6
     e82:	0e 94 c2 09 	call	0x1384	; 0x1384 <strcmp>
     e86:	89 2b       	or	r24, r25
     e88:	49 f4       	brne	.+18     	; 0xe9c <__vector_7+0xb6>
		{
			timeTraveled++;
     e8a:	80 91 48 05 	lds	r24, 0x0548	; 0x800548 <timeTraveled>
     e8e:	90 91 49 05 	lds	r25, 0x0549	; 0x800549 <timeTraveled+0x1>
     e92:	01 96       	adiw	r24, 0x01	; 1
     e94:	90 93 49 05 	sts	0x0549, r25	; 0x800549 <timeTraveled+0x1>
     e98:	80 93 48 05 	sts	0x0548, r24	; 0x800548 <timeTraveled>
		}
		
	}
	srand(timer2);
     e9c:	80 91 44 05 	lds	r24, 0x0544	; 0x800544 <timer2>
     ea0:	90 91 45 05 	lds	r25, 0x0545	; 0x800545 <timer2+0x1>
     ea4:	a0 91 46 05 	lds	r26, 0x0546	; 0x800546 <timer2+0x2>
     ea8:	b0 91 47 05 	lds	r27, 0x0547	; 0x800547 <timer2+0x3>
     eac:	0e 94 a5 09 	call	0x134a	; 0x134a <srand>
}
     eb0:	ff 91       	pop	r31
     eb2:	ef 91       	pop	r30
     eb4:	bf 91       	pop	r27
     eb6:	af 91       	pop	r26
     eb8:	9f 91       	pop	r25
     eba:	8f 91       	pop	r24
     ebc:	7f 91       	pop	r23
     ebe:	6f 91       	pop	r22
     ec0:	5f 91       	pop	r21
     ec2:	4f 91       	pop	r20
     ec4:	3f 91       	pop	r19
     ec6:	2f 91       	pop	r18
     ec8:	0f 90       	pop	r0
     eca:	0f be       	out	0x3f, r0	; 63
     ecc:	0f 90       	pop	r0
     ece:	1f 90       	pop	r1
     ed0:	18 95       	reti

00000ed2 <uart_putchar>:
    stdin  = &mystdin; //required by scanf
}

//redirect stdout to UART
int uart_putchar(char c, FILE *stream) {	
	loop_until_bit_is_set(UCSR0A, UDRE0);
     ed2:	e0 ec       	ldi	r30, 0xC0	; 192
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	90 81       	ld	r25, Z
     ed8:	95 ff       	sbrs	r25, 5
     eda:	fd cf       	rjmp	.-6      	; 0xed6 <uart_putchar+0x4>
	UDR0 = c;
     edc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	08 95       	ret

00000ee6 <uart_getchar>:

//redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
     ee6:	e0 ec       	ldi	r30, 0xC0	; 192
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	80 81       	ld	r24, Z
     eec:	88 23       	and	r24, r24
     eee:	ec f7       	brge	.-6      	; 0xeea <uart_getchar+0x4>
	return UDR0;
     ef0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	08 95       	ret

00000ef8 <UARTinit>:
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ); //redirect uart_getchar() to stdio

void UARTinit (void)
{
    //USART Baud rate: 9600, 8data, 1stop
    UBRR0H = MYUBRR >> 8;
     ef8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = MYUBRR;
     efc:	87 e6       	ldi	r24, 0x67	; 103
     efe:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     f02:	88 e1       	ldi	r24, 0x18	; 24
     f04:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    
    stdout = &mystdout; //required by printf
     f08:	ec e0       	ldi	r30, 0x0C	; 12
     f0a:	f7 e0       	ldi	r31, 0x07	; 7
     f0c:	8c e6       	ldi	r24, 0x6C	; 108
     f0e:	91 e0       	ldi	r25, 0x01	; 1
     f10:	93 83       	std	Z+3, r25	; 0x03
     f12:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; //required by scanf
     f14:	8e e5       	ldi	r24, 0x5E	; 94
     f16:	91 e0       	ldi	r25, 0x01	; 1
     f18:	91 83       	std	Z+1, r25	; 0x01
     f1a:	80 83       	st	Z, r24
     f1c:	08 95       	ret

00000f1e <__subsf3>:
     f1e:	50 58       	subi	r21, 0x80	; 128

00000f20 <__addsf3>:
     f20:	bb 27       	eor	r27, r27
     f22:	aa 27       	eor	r26, r26
     f24:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__addsf3x>
     f28:	0c 94 7f 08 	jmp	0x10fe	; 0x10fe <__fp_round>
     f2c:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fp_pscA>
     f30:	38 f0       	brcs	.+14     	; 0xf40 <__addsf3+0x20>
     f32:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__fp_pscB>
     f36:	20 f0       	brcs	.+8      	; 0xf40 <__addsf3+0x20>
     f38:	39 f4       	brne	.+14     	; 0xf48 <__addsf3+0x28>
     f3a:	9f 3f       	cpi	r25, 0xFF	; 255
     f3c:	19 f4       	brne	.+6      	; 0xf44 <__addsf3+0x24>
     f3e:	26 f4       	brtc	.+8      	; 0xf48 <__addsf3+0x28>
     f40:	0c 94 6e 08 	jmp	0x10dc	; 0x10dc <__fp_nan>
     f44:	0e f4       	brtc	.+2      	; 0xf48 <__addsf3+0x28>
     f46:	e0 95       	com	r30
     f48:	e7 fb       	bst	r30, 7
     f4a:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__fp_inf>

00000f4e <__addsf3x>:
     f4e:	e9 2f       	mov	r30, r25
     f50:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_split3>
     f54:	58 f3       	brcs	.-42     	; 0xf2c <__addsf3+0xc>
     f56:	ba 17       	cp	r27, r26
     f58:	62 07       	cpc	r22, r18
     f5a:	73 07       	cpc	r23, r19
     f5c:	84 07       	cpc	r24, r20
     f5e:	95 07       	cpc	r25, r21
     f60:	20 f0       	brcs	.+8      	; 0xf6a <__addsf3x+0x1c>
     f62:	79 f4       	brne	.+30     	; 0xf82 <__addsf3x+0x34>
     f64:	a6 f5       	brtc	.+104    	; 0xfce <__addsf3x+0x80>
     f66:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_zero>
     f6a:	0e f4       	brtc	.+2      	; 0xf6e <__addsf3x+0x20>
     f6c:	e0 95       	com	r30
     f6e:	0b 2e       	mov	r0, r27
     f70:	ba 2f       	mov	r27, r26
     f72:	a0 2d       	mov	r26, r0
     f74:	0b 01       	movw	r0, r22
     f76:	b9 01       	movw	r22, r18
     f78:	90 01       	movw	r18, r0
     f7a:	0c 01       	movw	r0, r24
     f7c:	ca 01       	movw	r24, r20
     f7e:	a0 01       	movw	r20, r0
     f80:	11 24       	eor	r1, r1
     f82:	ff 27       	eor	r31, r31
     f84:	59 1b       	sub	r21, r25
     f86:	99 f0       	breq	.+38     	; 0xfae <__addsf3x+0x60>
     f88:	59 3f       	cpi	r21, 0xF9	; 249
     f8a:	50 f4       	brcc	.+20     	; 0xfa0 <__addsf3x+0x52>
     f8c:	50 3e       	cpi	r21, 0xE0	; 224
     f8e:	68 f1       	brcs	.+90     	; 0xfea <__addsf3x+0x9c>
     f90:	1a 16       	cp	r1, r26
     f92:	f0 40       	sbci	r31, 0x00	; 0
     f94:	a2 2f       	mov	r26, r18
     f96:	23 2f       	mov	r18, r19
     f98:	34 2f       	mov	r19, r20
     f9a:	44 27       	eor	r20, r20
     f9c:	58 5f       	subi	r21, 0xF8	; 248
     f9e:	f3 cf       	rjmp	.-26     	; 0xf86 <__addsf3x+0x38>
     fa0:	46 95       	lsr	r20
     fa2:	37 95       	ror	r19
     fa4:	27 95       	ror	r18
     fa6:	a7 95       	ror	r26
     fa8:	f0 40       	sbci	r31, 0x00	; 0
     faa:	53 95       	inc	r21
     fac:	c9 f7       	brne	.-14     	; 0xfa0 <__addsf3x+0x52>
     fae:	7e f4       	brtc	.+30     	; 0xfce <__addsf3x+0x80>
     fb0:	1f 16       	cp	r1, r31
     fb2:	ba 0b       	sbc	r27, r26
     fb4:	62 0b       	sbc	r22, r18
     fb6:	73 0b       	sbc	r23, r19
     fb8:	84 0b       	sbc	r24, r20
     fba:	ba f0       	brmi	.+46     	; 0xfea <__addsf3x+0x9c>
     fbc:	91 50       	subi	r25, 0x01	; 1
     fbe:	a1 f0       	breq	.+40     	; 0xfe8 <__addsf3x+0x9a>
     fc0:	ff 0f       	add	r31, r31
     fc2:	bb 1f       	adc	r27, r27
     fc4:	66 1f       	adc	r22, r22
     fc6:	77 1f       	adc	r23, r23
     fc8:	88 1f       	adc	r24, r24
     fca:	c2 f7       	brpl	.-16     	; 0xfbc <__addsf3x+0x6e>
     fcc:	0e c0       	rjmp	.+28     	; 0xfea <__addsf3x+0x9c>
     fce:	ba 0f       	add	r27, r26
     fd0:	62 1f       	adc	r22, r18
     fd2:	73 1f       	adc	r23, r19
     fd4:	84 1f       	adc	r24, r20
     fd6:	48 f4       	brcc	.+18     	; 0xfea <__addsf3x+0x9c>
     fd8:	87 95       	ror	r24
     fda:	77 95       	ror	r23
     fdc:	67 95       	ror	r22
     fde:	b7 95       	ror	r27
     fe0:	f7 95       	ror	r31
     fe2:	9e 3f       	cpi	r25, 0xFE	; 254
     fe4:	08 f0       	brcs	.+2      	; 0xfe8 <__addsf3x+0x9a>
     fe6:	b0 cf       	rjmp	.-160    	; 0xf48 <__addsf3+0x28>
     fe8:	93 95       	inc	r25
     fea:	88 0f       	add	r24, r24
     fec:	08 f0       	brcs	.+2      	; 0xff0 <__addsf3x+0xa2>
     fee:	99 27       	eor	r25, r25
     ff0:	ee 0f       	add	r30, r30
     ff2:	97 95       	ror	r25
     ff4:	87 95       	ror	r24
     ff6:	08 95       	ret

00000ff8 <__fixunssfsi>:
     ff8:	0e 94 98 08 	call	0x1130	; 0x1130 <__fp_splitA>
     ffc:	88 f0       	brcs	.+34     	; 0x1020 <__fixunssfsi+0x28>
     ffe:	9f 57       	subi	r25, 0x7F	; 127
    1000:	98 f0       	brcs	.+38     	; 0x1028 <__fixunssfsi+0x30>
    1002:	b9 2f       	mov	r27, r25
    1004:	99 27       	eor	r25, r25
    1006:	b7 51       	subi	r27, 0x17	; 23
    1008:	b0 f0       	brcs	.+44     	; 0x1036 <__fixunssfsi+0x3e>
    100a:	e1 f0       	breq	.+56     	; 0x1044 <__fixunssfsi+0x4c>
    100c:	66 0f       	add	r22, r22
    100e:	77 1f       	adc	r23, r23
    1010:	88 1f       	adc	r24, r24
    1012:	99 1f       	adc	r25, r25
    1014:	1a f0       	brmi	.+6      	; 0x101c <__fixunssfsi+0x24>
    1016:	ba 95       	dec	r27
    1018:	c9 f7       	brne	.-14     	; 0x100c <__fixunssfsi+0x14>
    101a:	14 c0       	rjmp	.+40     	; 0x1044 <__fixunssfsi+0x4c>
    101c:	b1 30       	cpi	r27, 0x01	; 1
    101e:	91 f0       	breq	.+36     	; 0x1044 <__fixunssfsi+0x4c>
    1020:	0e 94 b2 08 	call	0x1164	; 0x1164 <__fp_zero>
    1024:	b1 e0       	ldi	r27, 0x01	; 1
    1026:	08 95       	ret
    1028:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__fp_zero>
    102c:	67 2f       	mov	r22, r23
    102e:	78 2f       	mov	r23, r24
    1030:	88 27       	eor	r24, r24
    1032:	b8 5f       	subi	r27, 0xF8	; 248
    1034:	39 f0       	breq	.+14     	; 0x1044 <__fixunssfsi+0x4c>
    1036:	b9 3f       	cpi	r27, 0xF9	; 249
    1038:	cc f3       	brlt	.-14     	; 0x102c <__fixunssfsi+0x34>
    103a:	86 95       	lsr	r24
    103c:	77 95       	ror	r23
    103e:	67 95       	ror	r22
    1040:	b3 95       	inc	r27
    1042:	d9 f7       	brne	.-10     	; 0x103a <__fixunssfsi+0x42>
    1044:	3e f4       	brtc	.+14     	; 0x1054 <__fixunssfsi+0x5c>
    1046:	90 95       	com	r25
    1048:	80 95       	com	r24
    104a:	70 95       	com	r23
    104c:	61 95       	neg	r22
    104e:	7f 4f       	sbci	r23, 0xFF	; 255
    1050:	8f 4f       	sbci	r24, 0xFF	; 255
    1052:	9f 4f       	sbci	r25, 0xFF	; 255
    1054:	08 95       	ret

00001056 <__floatunsisf>:
    1056:	e8 94       	clt
    1058:	09 c0       	rjmp	.+18     	; 0x106c <__floatsisf+0x12>

0000105a <__floatsisf>:
    105a:	97 fb       	bst	r25, 7
    105c:	3e f4       	brtc	.+14     	; 0x106c <__floatsisf+0x12>
    105e:	90 95       	com	r25
    1060:	80 95       	com	r24
    1062:	70 95       	com	r23
    1064:	61 95       	neg	r22
    1066:	7f 4f       	sbci	r23, 0xFF	; 255
    1068:	8f 4f       	sbci	r24, 0xFF	; 255
    106a:	9f 4f       	sbci	r25, 0xFF	; 255
    106c:	99 23       	and	r25, r25
    106e:	a9 f0       	breq	.+42     	; 0x109a <__floatsisf+0x40>
    1070:	f9 2f       	mov	r31, r25
    1072:	96 e9       	ldi	r25, 0x96	; 150
    1074:	bb 27       	eor	r27, r27
    1076:	93 95       	inc	r25
    1078:	f6 95       	lsr	r31
    107a:	87 95       	ror	r24
    107c:	77 95       	ror	r23
    107e:	67 95       	ror	r22
    1080:	b7 95       	ror	r27
    1082:	f1 11       	cpse	r31, r1
    1084:	f8 cf       	rjmp	.-16     	; 0x1076 <__floatsisf+0x1c>
    1086:	fa f4       	brpl	.+62     	; 0x10c6 <__floatsisf+0x6c>
    1088:	bb 0f       	add	r27, r27
    108a:	11 f4       	brne	.+4      	; 0x1090 <__floatsisf+0x36>
    108c:	60 ff       	sbrs	r22, 0
    108e:	1b c0       	rjmp	.+54     	; 0x10c6 <__floatsisf+0x6c>
    1090:	6f 5f       	subi	r22, 0xFF	; 255
    1092:	7f 4f       	sbci	r23, 0xFF	; 255
    1094:	8f 4f       	sbci	r24, 0xFF	; 255
    1096:	9f 4f       	sbci	r25, 0xFF	; 255
    1098:	16 c0       	rjmp	.+44     	; 0x10c6 <__floatsisf+0x6c>
    109a:	88 23       	and	r24, r24
    109c:	11 f0       	breq	.+4      	; 0x10a2 <__floatsisf+0x48>
    109e:	96 e9       	ldi	r25, 0x96	; 150
    10a0:	11 c0       	rjmp	.+34     	; 0x10c4 <__floatsisf+0x6a>
    10a2:	77 23       	and	r23, r23
    10a4:	21 f0       	breq	.+8      	; 0x10ae <__floatsisf+0x54>
    10a6:	9e e8       	ldi	r25, 0x8E	; 142
    10a8:	87 2f       	mov	r24, r23
    10aa:	76 2f       	mov	r23, r22
    10ac:	05 c0       	rjmp	.+10     	; 0x10b8 <__floatsisf+0x5e>
    10ae:	66 23       	and	r22, r22
    10b0:	71 f0       	breq	.+28     	; 0x10ce <__floatsisf+0x74>
    10b2:	96 e8       	ldi	r25, 0x86	; 134
    10b4:	86 2f       	mov	r24, r22
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	60 e0       	ldi	r22, 0x00	; 0
    10ba:	2a f0       	brmi	.+10     	; 0x10c6 <__floatsisf+0x6c>
    10bc:	9a 95       	dec	r25
    10be:	66 0f       	add	r22, r22
    10c0:	77 1f       	adc	r23, r23
    10c2:	88 1f       	adc	r24, r24
    10c4:	da f7       	brpl	.-10     	; 0x10bc <__floatsisf+0x62>
    10c6:	88 0f       	add	r24, r24
    10c8:	96 95       	lsr	r25
    10ca:	87 95       	ror	r24
    10cc:	97 f9       	bld	r25, 7
    10ce:	08 95       	ret

000010d0 <__fp_inf>:
    10d0:	97 f9       	bld	r25, 7
    10d2:	9f 67       	ori	r25, 0x7F	; 127
    10d4:	80 e8       	ldi	r24, 0x80	; 128
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	08 95       	ret

000010dc <__fp_nan>:
    10dc:	9f ef       	ldi	r25, 0xFF	; 255
    10de:	80 ec       	ldi	r24, 0xC0	; 192
    10e0:	08 95       	ret

000010e2 <__fp_pscA>:
    10e2:	00 24       	eor	r0, r0
    10e4:	0a 94       	dec	r0
    10e6:	16 16       	cp	r1, r22
    10e8:	17 06       	cpc	r1, r23
    10ea:	18 06       	cpc	r1, r24
    10ec:	09 06       	cpc	r0, r25
    10ee:	08 95       	ret

000010f0 <__fp_pscB>:
    10f0:	00 24       	eor	r0, r0
    10f2:	0a 94       	dec	r0
    10f4:	12 16       	cp	r1, r18
    10f6:	13 06       	cpc	r1, r19
    10f8:	14 06       	cpc	r1, r20
    10fa:	05 06       	cpc	r0, r21
    10fc:	08 95       	ret

000010fe <__fp_round>:
    10fe:	09 2e       	mov	r0, r25
    1100:	03 94       	inc	r0
    1102:	00 0c       	add	r0, r0
    1104:	11 f4       	brne	.+4      	; 0x110a <__fp_round+0xc>
    1106:	88 23       	and	r24, r24
    1108:	52 f0       	brmi	.+20     	; 0x111e <__fp_round+0x20>
    110a:	bb 0f       	add	r27, r27
    110c:	40 f4       	brcc	.+16     	; 0x111e <__fp_round+0x20>
    110e:	bf 2b       	or	r27, r31
    1110:	11 f4       	brne	.+4      	; 0x1116 <__fp_round+0x18>
    1112:	60 ff       	sbrs	r22, 0
    1114:	04 c0       	rjmp	.+8      	; 0x111e <__fp_round+0x20>
    1116:	6f 5f       	subi	r22, 0xFF	; 255
    1118:	7f 4f       	sbci	r23, 0xFF	; 255
    111a:	8f 4f       	sbci	r24, 0xFF	; 255
    111c:	9f 4f       	sbci	r25, 0xFF	; 255
    111e:	08 95       	ret

00001120 <__fp_split3>:
    1120:	57 fd       	sbrc	r21, 7
    1122:	90 58       	subi	r25, 0x80	; 128
    1124:	44 0f       	add	r20, r20
    1126:	55 1f       	adc	r21, r21
    1128:	59 f0       	breq	.+22     	; 0x1140 <__fp_splitA+0x10>
    112a:	5f 3f       	cpi	r21, 0xFF	; 255
    112c:	71 f0       	breq	.+28     	; 0x114a <__fp_splitA+0x1a>
    112e:	47 95       	ror	r20

00001130 <__fp_splitA>:
    1130:	88 0f       	add	r24, r24
    1132:	97 fb       	bst	r25, 7
    1134:	99 1f       	adc	r25, r25
    1136:	61 f0       	breq	.+24     	; 0x1150 <__fp_splitA+0x20>
    1138:	9f 3f       	cpi	r25, 0xFF	; 255
    113a:	79 f0       	breq	.+30     	; 0x115a <__fp_splitA+0x2a>
    113c:	87 95       	ror	r24
    113e:	08 95       	ret
    1140:	12 16       	cp	r1, r18
    1142:	13 06       	cpc	r1, r19
    1144:	14 06       	cpc	r1, r20
    1146:	55 1f       	adc	r21, r21
    1148:	f2 cf       	rjmp	.-28     	; 0x112e <__fp_split3+0xe>
    114a:	46 95       	lsr	r20
    114c:	f1 df       	rcall	.-30     	; 0x1130 <__fp_splitA>
    114e:	08 c0       	rjmp	.+16     	; 0x1160 <__fp_splitA+0x30>
    1150:	16 16       	cp	r1, r22
    1152:	17 06       	cpc	r1, r23
    1154:	18 06       	cpc	r1, r24
    1156:	99 1f       	adc	r25, r25
    1158:	f1 cf       	rjmp	.-30     	; 0x113c <__fp_splitA+0xc>
    115a:	86 95       	lsr	r24
    115c:	71 05       	cpc	r23, r1
    115e:	61 05       	cpc	r22, r1
    1160:	08 94       	sec
    1162:	08 95       	ret

00001164 <__fp_zero>:
    1164:	e8 94       	clt

00001166 <__fp_szero>:
    1166:	bb 27       	eor	r27, r27
    1168:	66 27       	eor	r22, r22
    116a:	77 27       	eor	r23, r23
    116c:	cb 01       	movw	r24, r22
    116e:	97 f9       	bld	r25, 7
    1170:	08 95       	ret

00001172 <__mulsf3>:
    1172:	0e 94 cc 08 	call	0x1198	; 0x1198 <__mulsf3x>
    1176:	0c 94 7f 08 	jmp	0x10fe	; 0x10fe <__fp_round>
    117a:	0e 94 71 08 	call	0x10e2	; 0x10e2 <__fp_pscA>
    117e:	38 f0       	brcs	.+14     	; 0x118e <__mulsf3+0x1c>
    1180:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__fp_pscB>
    1184:	20 f0       	brcs	.+8      	; 0x118e <__mulsf3+0x1c>
    1186:	95 23       	and	r25, r21
    1188:	11 f0       	breq	.+4      	; 0x118e <__mulsf3+0x1c>
    118a:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__fp_inf>
    118e:	0c 94 6e 08 	jmp	0x10dc	; 0x10dc <__fp_nan>
    1192:	11 24       	eor	r1, r1
    1194:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>

00001198 <__mulsf3x>:
    1198:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_split3>
    119c:	70 f3       	brcs	.-36     	; 0x117a <__mulsf3+0x8>

0000119e <__mulsf3_pse>:
    119e:	95 9f       	mul	r25, r21
    11a0:	c1 f3       	breq	.-16     	; 0x1192 <__mulsf3+0x20>
    11a2:	95 0f       	add	r25, r21
    11a4:	50 e0       	ldi	r21, 0x00	; 0
    11a6:	55 1f       	adc	r21, r21
    11a8:	62 9f       	mul	r22, r18
    11aa:	f0 01       	movw	r30, r0
    11ac:	72 9f       	mul	r23, r18
    11ae:	bb 27       	eor	r27, r27
    11b0:	f0 0d       	add	r31, r0
    11b2:	b1 1d       	adc	r27, r1
    11b4:	63 9f       	mul	r22, r19
    11b6:	aa 27       	eor	r26, r26
    11b8:	f0 0d       	add	r31, r0
    11ba:	b1 1d       	adc	r27, r1
    11bc:	aa 1f       	adc	r26, r26
    11be:	64 9f       	mul	r22, r20
    11c0:	66 27       	eor	r22, r22
    11c2:	b0 0d       	add	r27, r0
    11c4:	a1 1d       	adc	r26, r1
    11c6:	66 1f       	adc	r22, r22
    11c8:	82 9f       	mul	r24, r18
    11ca:	22 27       	eor	r18, r18
    11cc:	b0 0d       	add	r27, r0
    11ce:	a1 1d       	adc	r26, r1
    11d0:	62 1f       	adc	r22, r18
    11d2:	73 9f       	mul	r23, r19
    11d4:	b0 0d       	add	r27, r0
    11d6:	a1 1d       	adc	r26, r1
    11d8:	62 1f       	adc	r22, r18
    11da:	83 9f       	mul	r24, r19
    11dc:	a0 0d       	add	r26, r0
    11de:	61 1d       	adc	r22, r1
    11e0:	22 1f       	adc	r18, r18
    11e2:	74 9f       	mul	r23, r20
    11e4:	33 27       	eor	r19, r19
    11e6:	a0 0d       	add	r26, r0
    11e8:	61 1d       	adc	r22, r1
    11ea:	23 1f       	adc	r18, r19
    11ec:	84 9f       	mul	r24, r20
    11ee:	60 0d       	add	r22, r0
    11f0:	21 1d       	adc	r18, r1
    11f2:	82 2f       	mov	r24, r18
    11f4:	76 2f       	mov	r23, r22
    11f6:	6a 2f       	mov	r22, r26
    11f8:	11 24       	eor	r1, r1
    11fa:	9f 57       	subi	r25, 0x7F	; 127
    11fc:	50 40       	sbci	r21, 0x00	; 0
    11fe:	9a f0       	brmi	.+38     	; 0x1226 <__mulsf3_pse+0x88>
    1200:	f1 f0       	breq	.+60     	; 0x123e <__mulsf3_pse+0xa0>
    1202:	88 23       	and	r24, r24
    1204:	4a f0       	brmi	.+18     	; 0x1218 <__mulsf3_pse+0x7a>
    1206:	ee 0f       	add	r30, r30
    1208:	ff 1f       	adc	r31, r31
    120a:	bb 1f       	adc	r27, r27
    120c:	66 1f       	adc	r22, r22
    120e:	77 1f       	adc	r23, r23
    1210:	88 1f       	adc	r24, r24
    1212:	91 50       	subi	r25, 0x01	; 1
    1214:	50 40       	sbci	r21, 0x00	; 0
    1216:	a9 f7       	brne	.-22     	; 0x1202 <__mulsf3_pse+0x64>
    1218:	9e 3f       	cpi	r25, 0xFE	; 254
    121a:	51 05       	cpc	r21, r1
    121c:	80 f0       	brcs	.+32     	; 0x123e <__mulsf3_pse+0xa0>
    121e:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__fp_inf>
    1222:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_szero>
    1226:	5f 3f       	cpi	r21, 0xFF	; 255
    1228:	e4 f3       	brlt	.-8      	; 0x1222 <__mulsf3_pse+0x84>
    122a:	98 3e       	cpi	r25, 0xE8	; 232
    122c:	d4 f3       	brlt	.-12     	; 0x1222 <__mulsf3_pse+0x84>
    122e:	86 95       	lsr	r24
    1230:	77 95       	ror	r23
    1232:	67 95       	ror	r22
    1234:	b7 95       	ror	r27
    1236:	f7 95       	ror	r31
    1238:	e7 95       	ror	r30
    123a:	9f 5f       	subi	r25, 0xFF	; 255
    123c:	c1 f7       	brne	.-16     	; 0x122e <__mulsf3_pse+0x90>
    123e:	fe 2b       	or	r31, r30
    1240:	88 0f       	add	r24, r24
    1242:	91 1d       	adc	r25, r1
    1244:	96 95       	lsr	r25
    1246:	87 95       	ror	r24
    1248:	97 f9       	bld	r25, 7
    124a:	08 95       	ret

0000124c <__divmodhi4>:
    124c:	97 fb       	bst	r25, 7
    124e:	07 2e       	mov	r0, r23
    1250:	16 f4       	brtc	.+4      	; 0x1256 <__divmodhi4+0xa>
    1252:	00 94       	com	r0
    1254:	07 d0       	rcall	.+14     	; 0x1264 <__divmodhi4_neg1>
    1256:	77 fd       	sbrc	r23, 7
    1258:	09 d0       	rcall	.+18     	; 0x126c <__divmodhi4_neg2>
    125a:	0e 94 40 09 	call	0x1280	; 0x1280 <__udivmodhi4>
    125e:	07 fc       	sbrc	r0, 7
    1260:	05 d0       	rcall	.+10     	; 0x126c <__divmodhi4_neg2>
    1262:	3e f4       	brtc	.+14     	; 0x1272 <__divmodhi4_exit>

00001264 <__divmodhi4_neg1>:
    1264:	90 95       	com	r25
    1266:	81 95       	neg	r24
    1268:	9f 4f       	sbci	r25, 0xFF	; 255
    126a:	08 95       	ret

0000126c <__divmodhi4_neg2>:
    126c:	70 95       	com	r23
    126e:	61 95       	neg	r22
    1270:	7f 4f       	sbci	r23, 0xFF	; 255

00001272 <__divmodhi4_exit>:
    1272:	08 95       	ret

00001274 <__tablejump2__>:
    1274:	ee 0f       	add	r30, r30
    1276:	ff 1f       	adc	r31, r31
    1278:	05 90       	lpm	r0, Z+
    127a:	f4 91       	lpm	r31, Z
    127c:	e0 2d       	mov	r30, r0
    127e:	09 94       	ijmp

00001280 <__udivmodhi4>:
    1280:	aa 1b       	sub	r26, r26
    1282:	bb 1b       	sub	r27, r27
    1284:	51 e1       	ldi	r21, 0x11	; 17
    1286:	07 c0       	rjmp	.+14     	; 0x1296 <__udivmodhi4_ep>

00001288 <__udivmodhi4_loop>:
    1288:	aa 1f       	adc	r26, r26
    128a:	bb 1f       	adc	r27, r27
    128c:	a6 17       	cp	r26, r22
    128e:	b7 07       	cpc	r27, r23
    1290:	10 f0       	brcs	.+4      	; 0x1296 <__udivmodhi4_ep>
    1292:	a6 1b       	sub	r26, r22
    1294:	b7 0b       	sbc	r27, r23

00001296 <__udivmodhi4_ep>:
    1296:	88 1f       	adc	r24, r24
    1298:	99 1f       	adc	r25, r25
    129a:	5a 95       	dec	r21
    129c:	a9 f7       	brne	.-22     	; 0x1288 <__udivmodhi4_loop>
    129e:	80 95       	com	r24
    12a0:	90 95       	com	r25
    12a2:	bc 01       	movw	r22, r24
    12a4:	cd 01       	movw	r24, r26
    12a6:	08 95       	ret

000012a8 <do_rand>:
    12a8:	8f 92       	push	r8
    12aa:	9f 92       	push	r9
    12ac:	af 92       	push	r10
    12ae:	bf 92       	push	r11
    12b0:	cf 92       	push	r12
    12b2:	df 92       	push	r13
    12b4:	ef 92       	push	r14
    12b6:	ff 92       	push	r15
    12b8:	cf 93       	push	r28
    12ba:	df 93       	push	r29
    12bc:	ec 01       	movw	r28, r24
    12be:	68 81       	ld	r22, Y
    12c0:	79 81       	ldd	r23, Y+1	; 0x01
    12c2:	8a 81       	ldd	r24, Y+2	; 0x02
    12c4:	9b 81       	ldd	r25, Y+3	; 0x03
    12c6:	61 15       	cp	r22, r1
    12c8:	71 05       	cpc	r23, r1
    12ca:	81 05       	cpc	r24, r1
    12cc:	91 05       	cpc	r25, r1
    12ce:	21 f4       	brne	.+8      	; 0x12d8 <do_rand+0x30>
    12d0:	64 e2       	ldi	r22, 0x24	; 36
    12d2:	79 ed       	ldi	r23, 0xD9	; 217
    12d4:	8b e5       	ldi	r24, 0x5B	; 91
    12d6:	97 e0       	ldi	r25, 0x07	; 7
    12d8:	2d e1       	ldi	r18, 0x1D	; 29
    12da:	33 ef       	ldi	r19, 0xF3	; 243
    12dc:	41 e0       	ldi	r20, 0x01	; 1
    12de:	50 e0       	ldi	r21, 0x00	; 0
    12e0:	0e 94 22 10 	call	0x2044	; 0x2044 <__divmodsi4>
    12e4:	49 01       	movw	r8, r18
    12e6:	5a 01       	movw	r10, r20
    12e8:	9b 01       	movw	r18, r22
    12ea:	ac 01       	movw	r20, r24
    12ec:	a7 ea       	ldi	r26, 0xA7	; 167
    12ee:	b1 e4       	ldi	r27, 0x41	; 65
    12f0:	0e 94 41 10 	call	0x2082	; 0x2082 <__muluhisi3>
    12f4:	6b 01       	movw	r12, r22
    12f6:	7c 01       	movw	r14, r24
    12f8:	ac ee       	ldi	r26, 0xEC	; 236
    12fa:	b4 ef       	ldi	r27, 0xF4	; 244
    12fc:	a5 01       	movw	r20, r10
    12fe:	94 01       	movw	r18, r8
    1300:	0e 94 4f 10 	call	0x209e	; 0x209e <__mulohisi3>
    1304:	dc 01       	movw	r26, r24
    1306:	cb 01       	movw	r24, r22
    1308:	8c 0d       	add	r24, r12
    130a:	9d 1d       	adc	r25, r13
    130c:	ae 1d       	adc	r26, r14
    130e:	bf 1d       	adc	r27, r15
    1310:	b7 ff       	sbrs	r27, 7
    1312:	03 c0       	rjmp	.+6      	; 0x131a <do_rand+0x72>
    1314:	01 97       	sbiw	r24, 0x01	; 1
    1316:	a1 09       	sbc	r26, r1
    1318:	b0 48       	sbci	r27, 0x80	; 128
    131a:	88 83       	st	Y, r24
    131c:	99 83       	std	Y+1, r25	; 0x01
    131e:	aa 83       	std	Y+2, r26	; 0x02
    1320:	bb 83       	std	Y+3, r27	; 0x03
    1322:	9f 77       	andi	r25, 0x7F	; 127
    1324:	df 91       	pop	r29
    1326:	cf 91       	pop	r28
    1328:	ff 90       	pop	r15
    132a:	ef 90       	pop	r14
    132c:	df 90       	pop	r13
    132e:	cf 90       	pop	r12
    1330:	bf 90       	pop	r11
    1332:	af 90       	pop	r10
    1334:	9f 90       	pop	r9
    1336:	8f 90       	pop	r8
    1338:	08 95       	ret

0000133a <rand_r>:
    133a:	0e 94 54 09 	call	0x12a8	; 0x12a8 <do_rand>
    133e:	08 95       	ret

00001340 <rand>:
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	91 e0       	ldi	r25, 0x01	; 1
    1344:	0e 94 54 09 	call	0x12a8	; 0x12a8 <do_rand>
    1348:	08 95       	ret

0000134a <srand>:
    134a:	a0 e0       	ldi	r26, 0x00	; 0
    134c:	b0 e0       	ldi	r27, 0x00	; 0
    134e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1352:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    1356:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    135a:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    135e:	08 95       	ret

00001360 <memset>:
    1360:	dc 01       	movw	r26, r24
    1362:	01 c0       	rjmp	.+2      	; 0x1366 <memset+0x6>
    1364:	6d 93       	st	X+, r22
    1366:	41 50       	subi	r20, 0x01	; 1
    1368:	50 40       	sbci	r21, 0x00	; 0
    136a:	e0 f7       	brcc	.-8      	; 0x1364 <memset+0x4>
    136c:	08 95       	ret

0000136e <strcat>:
    136e:	fb 01       	movw	r30, r22
    1370:	dc 01       	movw	r26, r24
    1372:	0d 90       	ld	r0, X+
    1374:	00 20       	and	r0, r0
    1376:	e9 f7       	brne	.-6      	; 0x1372 <strcat+0x4>
    1378:	11 97       	sbiw	r26, 0x01	; 1
    137a:	01 90       	ld	r0, Z+
    137c:	0d 92       	st	X+, r0
    137e:	00 20       	and	r0, r0
    1380:	e1 f7       	brne	.-8      	; 0x137a <strcat+0xc>
    1382:	08 95       	ret

00001384 <strcmp>:
    1384:	fb 01       	movw	r30, r22
    1386:	dc 01       	movw	r26, r24
    1388:	8d 91       	ld	r24, X+
    138a:	01 90       	ld	r0, Z+
    138c:	80 19       	sub	r24, r0
    138e:	01 10       	cpse	r0, r1
    1390:	d9 f3       	breq	.-10     	; 0x1388 <strcmp+0x4>
    1392:	99 0b       	sbc	r25, r25
    1394:	08 95       	ret

00001396 <strstr>:
    1396:	fb 01       	movw	r30, r22
    1398:	51 91       	ld	r21, Z+
    139a:	55 23       	and	r21, r21
    139c:	a9 f0       	breq	.+42     	; 0x13c8 <strstr+0x32>
    139e:	bf 01       	movw	r22, r30
    13a0:	dc 01       	movw	r26, r24
    13a2:	4d 91       	ld	r20, X+
    13a4:	45 17       	cp	r20, r21
    13a6:	41 11       	cpse	r20, r1
    13a8:	e1 f7       	brne	.-8      	; 0x13a2 <strstr+0xc>
    13aa:	59 f4       	brne	.+22     	; 0x13c2 <strstr+0x2c>
    13ac:	cd 01       	movw	r24, r26
    13ae:	01 90       	ld	r0, Z+
    13b0:	00 20       	and	r0, r0
    13b2:	49 f0       	breq	.+18     	; 0x13c6 <strstr+0x30>
    13b4:	4d 91       	ld	r20, X+
    13b6:	40 15       	cp	r20, r0
    13b8:	41 11       	cpse	r20, r1
    13ba:	c9 f3       	breq	.-14     	; 0x13ae <strstr+0x18>
    13bc:	fb 01       	movw	r30, r22
    13be:	41 11       	cpse	r20, r1
    13c0:	ef cf       	rjmp	.-34     	; 0x13a0 <strstr+0xa>
    13c2:	81 e0       	ldi	r24, 0x01	; 1
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	01 97       	sbiw	r24, 0x01	; 1
    13c8:	08 95       	ret

000013ca <__itoa_ncheck>:
    13ca:	bb 27       	eor	r27, r27
    13cc:	4a 30       	cpi	r20, 0x0A	; 10
    13ce:	31 f4       	brne	.+12     	; 0x13dc <__itoa_ncheck+0x12>
    13d0:	99 23       	and	r25, r25
    13d2:	22 f4       	brpl	.+8      	; 0x13dc <__itoa_ncheck+0x12>
    13d4:	bd e2       	ldi	r27, 0x2D	; 45
    13d6:	90 95       	com	r25
    13d8:	81 95       	neg	r24
    13da:	9f 4f       	sbci	r25, 0xFF	; 255
    13dc:	0c 94 f1 09 	jmp	0x13e2	; 0x13e2 <__utoa_common>

000013e0 <__utoa_ncheck>:
    13e0:	bb 27       	eor	r27, r27

000013e2 <__utoa_common>:
    13e2:	fb 01       	movw	r30, r22
    13e4:	55 27       	eor	r21, r21
    13e6:	aa 27       	eor	r26, r26
    13e8:	88 0f       	add	r24, r24
    13ea:	99 1f       	adc	r25, r25
    13ec:	aa 1f       	adc	r26, r26
    13ee:	a4 17       	cp	r26, r20
    13f0:	10 f0       	brcs	.+4      	; 0x13f6 <__utoa_common+0x14>
    13f2:	a4 1b       	sub	r26, r20
    13f4:	83 95       	inc	r24
    13f6:	50 51       	subi	r21, 0x10	; 16
    13f8:	b9 f7       	brne	.-18     	; 0x13e8 <__utoa_common+0x6>
    13fa:	a0 5d       	subi	r26, 0xD0	; 208
    13fc:	aa 33       	cpi	r26, 0x3A	; 58
    13fe:	08 f0       	brcs	.+2      	; 0x1402 <__utoa_common+0x20>
    1400:	a9 5d       	subi	r26, 0xD9	; 217
    1402:	a1 93       	st	Z+, r26
    1404:	00 97       	sbiw	r24, 0x00	; 0
    1406:	79 f7       	brne	.-34     	; 0x13e6 <__utoa_common+0x4>
    1408:	b1 11       	cpse	r27, r1
    140a:	b1 93       	st	Z+, r27
    140c:	11 92       	st	Z+, r1
    140e:	cb 01       	movw	r24, r22
    1410:	0c 94 1e 0f 	jmp	0x1e3c	; 0x1e3c <strrev>

00001414 <printf>:
    1414:	a0 e0       	ldi	r26, 0x00	; 0
    1416:	b0 e0       	ldi	r27, 0x00	; 0
    1418:	e0 e1       	ldi	r30, 0x10	; 16
    141a:	fa e0       	ldi	r31, 0x0A	; 10
    141c:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__prologue_saves__+0x20>
    1420:	ae 01       	movw	r20, r28
    1422:	4b 5f       	subi	r20, 0xFB	; 251
    1424:	5f 4f       	sbci	r21, 0xFF	; 255
    1426:	fa 01       	movw	r30, r20
    1428:	61 91       	ld	r22, Z+
    142a:	71 91       	ld	r23, Z+
    142c:	af 01       	movw	r20, r30
    142e:	80 91 0e 07 	lds	r24, 0x070E	; 0x80070e <__iob+0x2>
    1432:	90 91 0f 07 	lds	r25, 0x070F	; 0x80070f <__iob+0x3>
    1436:	0e 94 66 0a 	call	0x14cc	; 0x14cc <vfprintf>
    143a:	e2 e0       	ldi	r30, 0x02	; 2
    143c:	0c 94 80 10 	jmp	0x2100	; 0x2100 <__epilogue_restores__+0x20>

00001440 <puts>:
    1440:	0f 93       	push	r16
    1442:	1f 93       	push	r17
    1444:	cf 93       	push	r28
    1446:	df 93       	push	r29
    1448:	e0 91 0e 07 	lds	r30, 0x070E	; 0x80070e <__iob+0x2>
    144c:	f0 91 0f 07 	lds	r31, 0x070F	; 0x80070f <__iob+0x3>
    1450:	23 81       	ldd	r18, Z+3	; 0x03
    1452:	21 ff       	sbrs	r18, 1
    1454:	1b c0       	rjmp	.+54     	; 0x148c <puts+0x4c>
    1456:	8c 01       	movw	r16, r24
    1458:	d0 e0       	ldi	r29, 0x00	; 0
    145a:	c0 e0       	ldi	r28, 0x00	; 0
    145c:	f8 01       	movw	r30, r16
    145e:	81 91       	ld	r24, Z+
    1460:	8f 01       	movw	r16, r30
    1462:	60 91 0e 07 	lds	r22, 0x070E	; 0x80070e <__iob+0x2>
    1466:	70 91 0f 07 	lds	r23, 0x070F	; 0x80070f <__iob+0x3>
    146a:	db 01       	movw	r26, r22
    146c:	18 96       	adiw	r26, 0x08	; 8
    146e:	ed 91       	ld	r30, X+
    1470:	fc 91       	ld	r31, X
    1472:	19 97       	sbiw	r26, 0x09	; 9
    1474:	88 23       	and	r24, r24
    1476:	31 f0       	breq	.+12     	; 0x1484 <puts+0x44>
    1478:	09 95       	icall
    147a:	89 2b       	or	r24, r25
    147c:	79 f3       	breq	.-34     	; 0x145c <puts+0x1c>
    147e:	df ef       	ldi	r29, 0xFF	; 255
    1480:	cf ef       	ldi	r28, 0xFF	; 255
    1482:	ec cf       	rjmp	.-40     	; 0x145c <puts+0x1c>
    1484:	8a e0       	ldi	r24, 0x0A	; 10
    1486:	09 95       	icall
    1488:	89 2b       	or	r24, r25
    148a:	19 f0       	breq	.+6      	; 0x1492 <puts+0x52>
    148c:	8f ef       	ldi	r24, 0xFF	; 255
    148e:	9f ef       	ldi	r25, 0xFF	; 255
    1490:	02 c0       	rjmp	.+4      	; 0x1496 <puts+0x56>
    1492:	8d 2f       	mov	r24, r29
    1494:	9c 2f       	mov	r25, r28
    1496:	df 91       	pop	r29
    1498:	cf 91       	pop	r28
    149a:	1f 91       	pop	r17
    149c:	0f 91       	pop	r16
    149e:	08 95       	ret

000014a0 <scanf>:
    14a0:	a0 e0       	ldi	r26, 0x00	; 0
    14a2:	b0 e0       	ldi	r27, 0x00	; 0
    14a4:	e6 e5       	ldi	r30, 0x56	; 86
    14a6:	fa e0       	ldi	r31, 0x0A	; 10
    14a8:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__prologue_saves__+0x20>
    14ac:	ae 01       	movw	r20, r28
    14ae:	4b 5f       	subi	r20, 0xFB	; 251
    14b0:	5f 4f       	sbci	r21, 0xFF	; 255
    14b2:	fa 01       	movw	r30, r20
    14b4:	61 91       	ld	r22, Z+
    14b6:	71 91       	ld	r23, Z+
    14b8:	af 01       	movw	r20, r30
    14ba:	80 91 0c 07 	lds	r24, 0x070C	; 0x80070c <__iob>
    14be:	90 91 0d 07 	lds	r25, 0x070D	; 0x80070d <__iob+0x1>
    14c2:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <vfscanf>
    14c6:	e2 e0       	ldi	r30, 0x02	; 2
    14c8:	0c 94 80 10 	jmp	0x2100	; 0x2100 <__epilogue_restores__+0x20>

000014cc <vfprintf>:
    14cc:	ab e0       	ldi	r26, 0x0B	; 11
    14ce:	b0 e0       	ldi	r27, 0x00	; 0
    14d0:	ec e6       	ldi	r30, 0x6C	; 108
    14d2:	fa e0       	ldi	r31, 0x0A	; 10
    14d4:	0c 94 54 10 	jmp	0x20a8	; 0x20a8 <__prologue_saves__>
    14d8:	6c 01       	movw	r12, r24
    14da:	7b 01       	movw	r14, r22
    14dc:	8a 01       	movw	r16, r20
    14de:	fc 01       	movw	r30, r24
    14e0:	17 82       	std	Z+7, r1	; 0x07
    14e2:	16 82       	std	Z+6, r1	; 0x06
    14e4:	83 81       	ldd	r24, Z+3	; 0x03
    14e6:	81 ff       	sbrs	r24, 1
    14e8:	cc c1       	rjmp	.+920    	; 0x1882 <vfprintf+0x3b6>
    14ea:	ce 01       	movw	r24, r28
    14ec:	01 96       	adiw	r24, 0x01	; 1
    14ee:	3c 01       	movw	r6, r24
    14f0:	f6 01       	movw	r30, r12
    14f2:	93 81       	ldd	r25, Z+3	; 0x03
    14f4:	f7 01       	movw	r30, r14
    14f6:	93 fd       	sbrc	r25, 3
    14f8:	85 91       	lpm	r24, Z+
    14fa:	93 ff       	sbrs	r25, 3
    14fc:	81 91       	ld	r24, Z+
    14fe:	7f 01       	movw	r14, r30
    1500:	88 23       	and	r24, r24
    1502:	09 f4       	brne	.+2      	; 0x1506 <vfprintf+0x3a>
    1504:	ba c1       	rjmp	.+884    	; 0x187a <vfprintf+0x3ae>
    1506:	85 32       	cpi	r24, 0x25	; 37
    1508:	39 f4       	brne	.+14     	; 0x1518 <vfprintf+0x4c>
    150a:	93 fd       	sbrc	r25, 3
    150c:	85 91       	lpm	r24, Z+
    150e:	93 ff       	sbrs	r25, 3
    1510:	81 91       	ld	r24, Z+
    1512:	7f 01       	movw	r14, r30
    1514:	85 32       	cpi	r24, 0x25	; 37
    1516:	29 f4       	brne	.+10     	; 0x1522 <vfprintf+0x56>
    1518:	b6 01       	movw	r22, r12
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    1520:	e7 cf       	rjmp	.-50     	; 0x14f0 <vfprintf+0x24>
    1522:	91 2c       	mov	r9, r1
    1524:	21 2c       	mov	r2, r1
    1526:	31 2c       	mov	r3, r1
    1528:	ff e1       	ldi	r31, 0x1F	; 31
    152a:	f3 15       	cp	r31, r3
    152c:	d8 f0       	brcs	.+54     	; 0x1564 <vfprintf+0x98>
    152e:	8b 32       	cpi	r24, 0x2B	; 43
    1530:	79 f0       	breq	.+30     	; 0x1550 <vfprintf+0x84>
    1532:	38 f4       	brcc	.+14     	; 0x1542 <vfprintf+0x76>
    1534:	80 32       	cpi	r24, 0x20	; 32
    1536:	79 f0       	breq	.+30     	; 0x1556 <vfprintf+0x8a>
    1538:	83 32       	cpi	r24, 0x23	; 35
    153a:	a1 f4       	brne	.+40     	; 0x1564 <vfprintf+0x98>
    153c:	23 2d       	mov	r18, r3
    153e:	20 61       	ori	r18, 0x10	; 16
    1540:	1d c0       	rjmp	.+58     	; 0x157c <vfprintf+0xb0>
    1542:	8d 32       	cpi	r24, 0x2D	; 45
    1544:	61 f0       	breq	.+24     	; 0x155e <vfprintf+0x92>
    1546:	80 33       	cpi	r24, 0x30	; 48
    1548:	69 f4       	brne	.+26     	; 0x1564 <vfprintf+0x98>
    154a:	23 2d       	mov	r18, r3
    154c:	21 60       	ori	r18, 0x01	; 1
    154e:	16 c0       	rjmp	.+44     	; 0x157c <vfprintf+0xb0>
    1550:	83 2d       	mov	r24, r3
    1552:	82 60       	ori	r24, 0x02	; 2
    1554:	38 2e       	mov	r3, r24
    1556:	e3 2d       	mov	r30, r3
    1558:	e4 60       	ori	r30, 0x04	; 4
    155a:	3e 2e       	mov	r3, r30
    155c:	2a c0       	rjmp	.+84     	; 0x15b2 <vfprintf+0xe6>
    155e:	f3 2d       	mov	r31, r3
    1560:	f8 60       	ori	r31, 0x08	; 8
    1562:	1d c0       	rjmp	.+58     	; 0x159e <vfprintf+0xd2>
    1564:	37 fc       	sbrc	r3, 7
    1566:	2d c0       	rjmp	.+90     	; 0x15c2 <vfprintf+0xf6>
    1568:	20 ed       	ldi	r18, 0xD0	; 208
    156a:	28 0f       	add	r18, r24
    156c:	2a 30       	cpi	r18, 0x0A	; 10
    156e:	40 f0       	brcs	.+16     	; 0x1580 <vfprintf+0xb4>
    1570:	8e 32       	cpi	r24, 0x2E	; 46
    1572:	b9 f4       	brne	.+46     	; 0x15a2 <vfprintf+0xd6>
    1574:	36 fc       	sbrc	r3, 6
    1576:	81 c1       	rjmp	.+770    	; 0x187a <vfprintf+0x3ae>
    1578:	23 2d       	mov	r18, r3
    157a:	20 64       	ori	r18, 0x40	; 64
    157c:	32 2e       	mov	r3, r18
    157e:	19 c0       	rjmp	.+50     	; 0x15b2 <vfprintf+0xe6>
    1580:	36 fe       	sbrs	r3, 6
    1582:	06 c0       	rjmp	.+12     	; 0x1590 <vfprintf+0xc4>
    1584:	8a e0       	ldi	r24, 0x0A	; 10
    1586:	98 9e       	mul	r9, r24
    1588:	20 0d       	add	r18, r0
    158a:	11 24       	eor	r1, r1
    158c:	92 2e       	mov	r9, r18
    158e:	11 c0       	rjmp	.+34     	; 0x15b2 <vfprintf+0xe6>
    1590:	ea e0       	ldi	r30, 0x0A	; 10
    1592:	2e 9e       	mul	r2, r30
    1594:	20 0d       	add	r18, r0
    1596:	11 24       	eor	r1, r1
    1598:	22 2e       	mov	r2, r18
    159a:	f3 2d       	mov	r31, r3
    159c:	f0 62       	ori	r31, 0x20	; 32
    159e:	3f 2e       	mov	r3, r31
    15a0:	08 c0       	rjmp	.+16     	; 0x15b2 <vfprintf+0xe6>
    15a2:	8c 36       	cpi	r24, 0x6C	; 108
    15a4:	21 f4       	brne	.+8      	; 0x15ae <vfprintf+0xe2>
    15a6:	83 2d       	mov	r24, r3
    15a8:	80 68       	ori	r24, 0x80	; 128
    15aa:	38 2e       	mov	r3, r24
    15ac:	02 c0       	rjmp	.+4      	; 0x15b2 <vfprintf+0xe6>
    15ae:	88 36       	cpi	r24, 0x68	; 104
    15b0:	41 f4       	brne	.+16     	; 0x15c2 <vfprintf+0xf6>
    15b2:	f7 01       	movw	r30, r14
    15b4:	93 fd       	sbrc	r25, 3
    15b6:	85 91       	lpm	r24, Z+
    15b8:	93 ff       	sbrs	r25, 3
    15ba:	81 91       	ld	r24, Z+
    15bc:	7f 01       	movw	r14, r30
    15be:	81 11       	cpse	r24, r1
    15c0:	b3 cf       	rjmp	.-154    	; 0x1528 <vfprintf+0x5c>
    15c2:	98 2f       	mov	r25, r24
    15c4:	9f 7d       	andi	r25, 0xDF	; 223
    15c6:	95 54       	subi	r25, 0x45	; 69
    15c8:	93 30       	cpi	r25, 0x03	; 3
    15ca:	28 f4       	brcc	.+10     	; 0x15d6 <vfprintf+0x10a>
    15cc:	0c 5f       	subi	r16, 0xFC	; 252
    15ce:	1f 4f       	sbci	r17, 0xFF	; 255
    15d0:	9f e3       	ldi	r25, 0x3F	; 63
    15d2:	99 83       	std	Y+1, r25	; 0x01
    15d4:	0d c0       	rjmp	.+26     	; 0x15f0 <vfprintf+0x124>
    15d6:	83 36       	cpi	r24, 0x63	; 99
    15d8:	31 f0       	breq	.+12     	; 0x15e6 <vfprintf+0x11a>
    15da:	83 37       	cpi	r24, 0x73	; 115
    15dc:	71 f0       	breq	.+28     	; 0x15fa <vfprintf+0x12e>
    15de:	83 35       	cpi	r24, 0x53	; 83
    15e0:	09 f0       	breq	.+2      	; 0x15e4 <vfprintf+0x118>
    15e2:	59 c0       	rjmp	.+178    	; 0x1696 <vfprintf+0x1ca>
    15e4:	21 c0       	rjmp	.+66     	; 0x1628 <vfprintf+0x15c>
    15e6:	f8 01       	movw	r30, r16
    15e8:	80 81       	ld	r24, Z
    15ea:	89 83       	std	Y+1, r24	; 0x01
    15ec:	0e 5f       	subi	r16, 0xFE	; 254
    15ee:	1f 4f       	sbci	r17, 0xFF	; 255
    15f0:	88 24       	eor	r8, r8
    15f2:	83 94       	inc	r8
    15f4:	91 2c       	mov	r9, r1
    15f6:	53 01       	movw	r10, r6
    15f8:	13 c0       	rjmp	.+38     	; 0x1620 <vfprintf+0x154>
    15fa:	28 01       	movw	r4, r16
    15fc:	f2 e0       	ldi	r31, 0x02	; 2
    15fe:	4f 0e       	add	r4, r31
    1600:	51 1c       	adc	r5, r1
    1602:	f8 01       	movw	r30, r16
    1604:	a0 80       	ld	r10, Z
    1606:	b1 80       	ldd	r11, Z+1	; 0x01
    1608:	36 fe       	sbrs	r3, 6
    160a:	03 c0       	rjmp	.+6      	; 0x1612 <vfprintf+0x146>
    160c:	69 2d       	mov	r22, r9
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	02 c0       	rjmp	.+4      	; 0x1616 <vfprintf+0x14a>
    1612:	6f ef       	ldi	r22, 0xFF	; 255
    1614:	7f ef       	ldi	r23, 0xFF	; 255
    1616:	c5 01       	movw	r24, r10
    1618:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <strnlen>
    161c:	4c 01       	movw	r8, r24
    161e:	82 01       	movw	r16, r4
    1620:	f3 2d       	mov	r31, r3
    1622:	ff 77       	andi	r31, 0x7F	; 127
    1624:	3f 2e       	mov	r3, r31
    1626:	16 c0       	rjmp	.+44     	; 0x1654 <vfprintf+0x188>
    1628:	28 01       	movw	r4, r16
    162a:	22 e0       	ldi	r18, 0x02	; 2
    162c:	42 0e       	add	r4, r18
    162e:	51 1c       	adc	r5, r1
    1630:	f8 01       	movw	r30, r16
    1632:	a0 80       	ld	r10, Z
    1634:	b1 80       	ldd	r11, Z+1	; 0x01
    1636:	36 fe       	sbrs	r3, 6
    1638:	03 c0       	rjmp	.+6      	; 0x1640 <vfprintf+0x174>
    163a:	69 2d       	mov	r22, r9
    163c:	70 e0       	ldi	r23, 0x00	; 0
    163e:	02 c0       	rjmp	.+4      	; 0x1644 <vfprintf+0x178>
    1640:	6f ef       	ldi	r22, 0xFF	; 255
    1642:	7f ef       	ldi	r23, 0xFF	; 255
    1644:	c5 01       	movw	r24, r10
    1646:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <strnlen_P>
    164a:	4c 01       	movw	r8, r24
    164c:	f3 2d       	mov	r31, r3
    164e:	f0 68       	ori	r31, 0x80	; 128
    1650:	3f 2e       	mov	r3, r31
    1652:	82 01       	movw	r16, r4
    1654:	33 fc       	sbrc	r3, 3
    1656:	1b c0       	rjmp	.+54     	; 0x168e <vfprintf+0x1c2>
    1658:	82 2d       	mov	r24, r2
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	88 16       	cp	r8, r24
    165e:	99 06       	cpc	r9, r25
    1660:	b0 f4       	brcc	.+44     	; 0x168e <vfprintf+0x1c2>
    1662:	b6 01       	movw	r22, r12
    1664:	80 e2       	ldi	r24, 0x20	; 32
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    166c:	2a 94       	dec	r2
    166e:	f4 cf       	rjmp	.-24     	; 0x1658 <vfprintf+0x18c>
    1670:	f5 01       	movw	r30, r10
    1672:	37 fc       	sbrc	r3, 7
    1674:	85 91       	lpm	r24, Z+
    1676:	37 fe       	sbrs	r3, 7
    1678:	81 91       	ld	r24, Z+
    167a:	5f 01       	movw	r10, r30
    167c:	b6 01       	movw	r22, r12
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    1684:	21 10       	cpse	r2, r1
    1686:	2a 94       	dec	r2
    1688:	21 e0       	ldi	r18, 0x01	; 1
    168a:	82 1a       	sub	r8, r18
    168c:	91 08       	sbc	r9, r1
    168e:	81 14       	cp	r8, r1
    1690:	91 04       	cpc	r9, r1
    1692:	71 f7       	brne	.-36     	; 0x1670 <vfprintf+0x1a4>
    1694:	e8 c0       	rjmp	.+464    	; 0x1866 <vfprintf+0x39a>
    1696:	84 36       	cpi	r24, 0x64	; 100
    1698:	11 f0       	breq	.+4      	; 0x169e <vfprintf+0x1d2>
    169a:	89 36       	cpi	r24, 0x69	; 105
    169c:	41 f5       	brne	.+80     	; 0x16ee <vfprintf+0x222>
    169e:	f8 01       	movw	r30, r16
    16a0:	37 fe       	sbrs	r3, 7
    16a2:	07 c0       	rjmp	.+14     	; 0x16b2 <vfprintf+0x1e6>
    16a4:	60 81       	ld	r22, Z
    16a6:	71 81       	ldd	r23, Z+1	; 0x01
    16a8:	82 81       	ldd	r24, Z+2	; 0x02
    16aa:	93 81       	ldd	r25, Z+3	; 0x03
    16ac:	0c 5f       	subi	r16, 0xFC	; 252
    16ae:	1f 4f       	sbci	r17, 0xFF	; 255
    16b0:	08 c0       	rjmp	.+16     	; 0x16c2 <vfprintf+0x1f6>
    16b2:	60 81       	ld	r22, Z
    16b4:	71 81       	ldd	r23, Z+1	; 0x01
    16b6:	07 2e       	mov	r0, r23
    16b8:	00 0c       	add	r0, r0
    16ba:	88 0b       	sbc	r24, r24
    16bc:	99 0b       	sbc	r25, r25
    16be:	0e 5f       	subi	r16, 0xFE	; 254
    16c0:	1f 4f       	sbci	r17, 0xFF	; 255
    16c2:	f3 2d       	mov	r31, r3
    16c4:	ff 76       	andi	r31, 0x6F	; 111
    16c6:	3f 2e       	mov	r3, r31
    16c8:	97 ff       	sbrs	r25, 7
    16ca:	09 c0       	rjmp	.+18     	; 0x16de <vfprintf+0x212>
    16cc:	90 95       	com	r25
    16ce:	80 95       	com	r24
    16d0:	70 95       	com	r23
    16d2:	61 95       	neg	r22
    16d4:	7f 4f       	sbci	r23, 0xFF	; 255
    16d6:	8f 4f       	sbci	r24, 0xFF	; 255
    16d8:	9f 4f       	sbci	r25, 0xFF	; 255
    16da:	f0 68       	ori	r31, 0x80	; 128
    16dc:	3f 2e       	mov	r3, r31
    16de:	2a e0       	ldi	r18, 0x0A	; 10
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	a3 01       	movw	r20, r6
    16e4:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <__ultoa_invert>
    16e8:	88 2e       	mov	r8, r24
    16ea:	86 18       	sub	r8, r6
    16ec:	45 c0       	rjmp	.+138    	; 0x1778 <vfprintf+0x2ac>
    16ee:	85 37       	cpi	r24, 0x75	; 117
    16f0:	31 f4       	brne	.+12     	; 0x16fe <vfprintf+0x232>
    16f2:	23 2d       	mov	r18, r3
    16f4:	2f 7e       	andi	r18, 0xEF	; 239
    16f6:	b2 2e       	mov	r11, r18
    16f8:	2a e0       	ldi	r18, 0x0A	; 10
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	25 c0       	rjmp	.+74     	; 0x1748 <vfprintf+0x27c>
    16fe:	93 2d       	mov	r25, r3
    1700:	99 7f       	andi	r25, 0xF9	; 249
    1702:	b9 2e       	mov	r11, r25
    1704:	8f 36       	cpi	r24, 0x6F	; 111
    1706:	c1 f0       	breq	.+48     	; 0x1738 <vfprintf+0x26c>
    1708:	18 f4       	brcc	.+6      	; 0x1710 <vfprintf+0x244>
    170a:	88 35       	cpi	r24, 0x58	; 88
    170c:	79 f0       	breq	.+30     	; 0x172c <vfprintf+0x260>
    170e:	b5 c0       	rjmp	.+362    	; 0x187a <vfprintf+0x3ae>
    1710:	80 37       	cpi	r24, 0x70	; 112
    1712:	19 f0       	breq	.+6      	; 0x171a <vfprintf+0x24e>
    1714:	88 37       	cpi	r24, 0x78	; 120
    1716:	21 f0       	breq	.+8      	; 0x1720 <vfprintf+0x254>
    1718:	b0 c0       	rjmp	.+352    	; 0x187a <vfprintf+0x3ae>
    171a:	e9 2f       	mov	r30, r25
    171c:	e0 61       	ori	r30, 0x10	; 16
    171e:	be 2e       	mov	r11, r30
    1720:	b4 fe       	sbrs	r11, 4
    1722:	0d c0       	rjmp	.+26     	; 0x173e <vfprintf+0x272>
    1724:	fb 2d       	mov	r31, r11
    1726:	f4 60       	ori	r31, 0x04	; 4
    1728:	bf 2e       	mov	r11, r31
    172a:	09 c0       	rjmp	.+18     	; 0x173e <vfprintf+0x272>
    172c:	34 fe       	sbrs	r3, 4
    172e:	0a c0       	rjmp	.+20     	; 0x1744 <vfprintf+0x278>
    1730:	29 2f       	mov	r18, r25
    1732:	26 60       	ori	r18, 0x06	; 6
    1734:	b2 2e       	mov	r11, r18
    1736:	06 c0       	rjmp	.+12     	; 0x1744 <vfprintf+0x278>
    1738:	28 e0       	ldi	r18, 0x08	; 8
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	05 c0       	rjmp	.+10     	; 0x1748 <vfprintf+0x27c>
    173e:	20 e1       	ldi	r18, 0x10	; 16
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	02 c0       	rjmp	.+4      	; 0x1748 <vfprintf+0x27c>
    1744:	20 e1       	ldi	r18, 0x10	; 16
    1746:	32 e0       	ldi	r19, 0x02	; 2
    1748:	f8 01       	movw	r30, r16
    174a:	b7 fe       	sbrs	r11, 7
    174c:	07 c0       	rjmp	.+14     	; 0x175c <vfprintf+0x290>
    174e:	60 81       	ld	r22, Z
    1750:	71 81       	ldd	r23, Z+1	; 0x01
    1752:	82 81       	ldd	r24, Z+2	; 0x02
    1754:	93 81       	ldd	r25, Z+3	; 0x03
    1756:	0c 5f       	subi	r16, 0xFC	; 252
    1758:	1f 4f       	sbci	r17, 0xFF	; 255
    175a:	06 c0       	rjmp	.+12     	; 0x1768 <vfprintf+0x29c>
    175c:	60 81       	ld	r22, Z
    175e:	71 81       	ldd	r23, Z+1	; 0x01
    1760:	80 e0       	ldi	r24, 0x00	; 0
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	0e 5f       	subi	r16, 0xFE	; 254
    1766:	1f 4f       	sbci	r17, 0xFF	; 255
    1768:	a3 01       	movw	r20, r6
    176a:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <__ultoa_invert>
    176e:	88 2e       	mov	r8, r24
    1770:	86 18       	sub	r8, r6
    1772:	fb 2d       	mov	r31, r11
    1774:	ff 77       	andi	r31, 0x7F	; 127
    1776:	3f 2e       	mov	r3, r31
    1778:	36 fe       	sbrs	r3, 6
    177a:	0d c0       	rjmp	.+26     	; 0x1796 <vfprintf+0x2ca>
    177c:	23 2d       	mov	r18, r3
    177e:	2e 7f       	andi	r18, 0xFE	; 254
    1780:	a2 2e       	mov	r10, r18
    1782:	89 14       	cp	r8, r9
    1784:	58 f4       	brcc	.+22     	; 0x179c <vfprintf+0x2d0>
    1786:	34 fe       	sbrs	r3, 4
    1788:	0b c0       	rjmp	.+22     	; 0x17a0 <vfprintf+0x2d4>
    178a:	32 fc       	sbrc	r3, 2
    178c:	09 c0       	rjmp	.+18     	; 0x17a0 <vfprintf+0x2d4>
    178e:	83 2d       	mov	r24, r3
    1790:	8e 7e       	andi	r24, 0xEE	; 238
    1792:	a8 2e       	mov	r10, r24
    1794:	05 c0       	rjmp	.+10     	; 0x17a0 <vfprintf+0x2d4>
    1796:	b8 2c       	mov	r11, r8
    1798:	a3 2c       	mov	r10, r3
    179a:	03 c0       	rjmp	.+6      	; 0x17a2 <vfprintf+0x2d6>
    179c:	b8 2c       	mov	r11, r8
    179e:	01 c0       	rjmp	.+2      	; 0x17a2 <vfprintf+0x2d6>
    17a0:	b9 2c       	mov	r11, r9
    17a2:	a4 fe       	sbrs	r10, 4
    17a4:	0f c0       	rjmp	.+30     	; 0x17c4 <vfprintf+0x2f8>
    17a6:	fe 01       	movw	r30, r28
    17a8:	e8 0d       	add	r30, r8
    17aa:	f1 1d       	adc	r31, r1
    17ac:	80 81       	ld	r24, Z
    17ae:	80 33       	cpi	r24, 0x30	; 48
    17b0:	21 f4       	brne	.+8      	; 0x17ba <vfprintf+0x2ee>
    17b2:	9a 2d       	mov	r25, r10
    17b4:	99 7e       	andi	r25, 0xE9	; 233
    17b6:	a9 2e       	mov	r10, r25
    17b8:	09 c0       	rjmp	.+18     	; 0x17cc <vfprintf+0x300>
    17ba:	a2 fe       	sbrs	r10, 2
    17bc:	06 c0       	rjmp	.+12     	; 0x17ca <vfprintf+0x2fe>
    17be:	b3 94       	inc	r11
    17c0:	b3 94       	inc	r11
    17c2:	04 c0       	rjmp	.+8      	; 0x17cc <vfprintf+0x300>
    17c4:	8a 2d       	mov	r24, r10
    17c6:	86 78       	andi	r24, 0x86	; 134
    17c8:	09 f0       	breq	.+2      	; 0x17cc <vfprintf+0x300>
    17ca:	b3 94       	inc	r11
    17cc:	a3 fc       	sbrc	r10, 3
    17ce:	11 c0       	rjmp	.+34     	; 0x17f2 <vfprintf+0x326>
    17d0:	a0 fe       	sbrs	r10, 0
    17d2:	06 c0       	rjmp	.+12     	; 0x17e0 <vfprintf+0x314>
    17d4:	b2 14       	cp	r11, r2
    17d6:	88 f4       	brcc	.+34     	; 0x17fa <vfprintf+0x32e>
    17d8:	28 0c       	add	r2, r8
    17da:	92 2c       	mov	r9, r2
    17dc:	9b 18       	sub	r9, r11
    17de:	0e c0       	rjmp	.+28     	; 0x17fc <vfprintf+0x330>
    17e0:	b2 14       	cp	r11, r2
    17e2:	60 f4       	brcc	.+24     	; 0x17fc <vfprintf+0x330>
    17e4:	b6 01       	movw	r22, r12
    17e6:	80 e2       	ldi	r24, 0x20	; 32
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    17ee:	b3 94       	inc	r11
    17f0:	f7 cf       	rjmp	.-18     	; 0x17e0 <vfprintf+0x314>
    17f2:	b2 14       	cp	r11, r2
    17f4:	18 f4       	brcc	.+6      	; 0x17fc <vfprintf+0x330>
    17f6:	2b 18       	sub	r2, r11
    17f8:	02 c0       	rjmp	.+4      	; 0x17fe <vfprintf+0x332>
    17fa:	98 2c       	mov	r9, r8
    17fc:	21 2c       	mov	r2, r1
    17fe:	a4 fe       	sbrs	r10, 4
    1800:	10 c0       	rjmp	.+32     	; 0x1822 <vfprintf+0x356>
    1802:	b6 01       	movw	r22, r12
    1804:	80 e3       	ldi	r24, 0x30	; 48
    1806:	90 e0       	ldi	r25, 0x00	; 0
    1808:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    180c:	a2 fe       	sbrs	r10, 2
    180e:	17 c0       	rjmp	.+46     	; 0x183e <vfprintf+0x372>
    1810:	a1 fc       	sbrc	r10, 1
    1812:	03 c0       	rjmp	.+6      	; 0x181a <vfprintf+0x34e>
    1814:	88 e7       	ldi	r24, 0x78	; 120
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	02 c0       	rjmp	.+4      	; 0x181e <vfprintf+0x352>
    181a:	88 e5       	ldi	r24, 0x58	; 88
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	b6 01       	movw	r22, r12
    1820:	0c c0       	rjmp	.+24     	; 0x183a <vfprintf+0x36e>
    1822:	8a 2d       	mov	r24, r10
    1824:	86 78       	andi	r24, 0x86	; 134
    1826:	59 f0       	breq	.+22     	; 0x183e <vfprintf+0x372>
    1828:	a1 fe       	sbrs	r10, 1
    182a:	02 c0       	rjmp	.+4      	; 0x1830 <vfprintf+0x364>
    182c:	8b e2       	ldi	r24, 0x2B	; 43
    182e:	01 c0       	rjmp	.+2      	; 0x1832 <vfprintf+0x366>
    1830:	80 e2       	ldi	r24, 0x20	; 32
    1832:	a7 fc       	sbrc	r10, 7
    1834:	8d e2       	ldi	r24, 0x2D	; 45
    1836:	b6 01       	movw	r22, r12
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    183e:	89 14       	cp	r8, r9
    1840:	38 f4       	brcc	.+14     	; 0x1850 <vfprintf+0x384>
    1842:	b6 01       	movw	r22, r12
    1844:	80 e3       	ldi	r24, 0x30	; 48
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    184c:	9a 94       	dec	r9
    184e:	f7 cf       	rjmp	.-18     	; 0x183e <vfprintf+0x372>
    1850:	8a 94       	dec	r8
    1852:	f3 01       	movw	r30, r6
    1854:	e8 0d       	add	r30, r8
    1856:	f1 1d       	adc	r31, r1
    1858:	80 81       	ld	r24, Z
    185a:	b6 01       	movw	r22, r12
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    1862:	81 10       	cpse	r8, r1
    1864:	f5 cf       	rjmp	.-22     	; 0x1850 <vfprintf+0x384>
    1866:	22 20       	and	r2, r2
    1868:	09 f4       	brne	.+2      	; 0x186c <vfprintf+0x3a0>
    186a:	42 ce       	rjmp	.-892    	; 0x14f0 <vfprintf+0x24>
    186c:	b6 01       	movw	r22, r12
    186e:	80 e2       	ldi	r24, 0x20	; 32
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <fputc>
    1876:	2a 94       	dec	r2
    1878:	f6 cf       	rjmp	.-20     	; 0x1866 <vfprintf+0x39a>
    187a:	f6 01       	movw	r30, r12
    187c:	86 81       	ldd	r24, Z+6	; 0x06
    187e:	97 81       	ldd	r25, Z+7	; 0x07
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <vfprintf+0x3ba>
    1882:	8f ef       	ldi	r24, 0xFF	; 255
    1884:	9f ef       	ldi	r25, 0xFF	; 255
    1886:	2b 96       	adiw	r28, 0x0b	; 11
    1888:	e2 e1       	ldi	r30, 0x12	; 18
    188a:	0c 94 70 10 	jmp	0x20e0	; 0x20e0 <__epilogue_restores__>

0000188e <putval>:
    188e:	20 fd       	sbrc	r18, 0
    1890:	09 c0       	rjmp	.+18     	; 0x18a4 <putval+0x16>
    1892:	fc 01       	movw	r30, r24
    1894:	23 fd       	sbrc	r18, 3
    1896:	05 c0       	rjmp	.+10     	; 0x18a2 <putval+0x14>
    1898:	22 ff       	sbrs	r18, 2
    189a:	02 c0       	rjmp	.+4      	; 0x18a0 <putval+0x12>
    189c:	73 83       	std	Z+3, r23	; 0x03
    189e:	62 83       	std	Z+2, r22	; 0x02
    18a0:	51 83       	std	Z+1, r21	; 0x01
    18a2:	40 83       	st	Z, r20
    18a4:	08 95       	ret

000018a6 <mulacc>:
    18a6:	44 fd       	sbrc	r20, 4
    18a8:	17 c0       	rjmp	.+46     	; 0x18d8 <mulacc+0x32>
    18aa:	46 fd       	sbrc	r20, 6
    18ac:	17 c0       	rjmp	.+46     	; 0x18dc <mulacc+0x36>
    18ae:	ab 01       	movw	r20, r22
    18b0:	bc 01       	movw	r22, r24
    18b2:	da 01       	movw	r26, r20
    18b4:	fb 01       	movw	r30, r22
    18b6:	aa 0f       	add	r26, r26
    18b8:	bb 1f       	adc	r27, r27
    18ba:	ee 1f       	adc	r30, r30
    18bc:	ff 1f       	adc	r31, r31
    18be:	10 94       	com	r1
    18c0:	d1 f7       	brne	.-12     	; 0x18b6 <mulacc+0x10>
    18c2:	4a 0f       	add	r20, r26
    18c4:	5b 1f       	adc	r21, r27
    18c6:	6e 1f       	adc	r22, r30
    18c8:	7f 1f       	adc	r23, r31
    18ca:	cb 01       	movw	r24, r22
    18cc:	ba 01       	movw	r22, r20
    18ce:	66 0f       	add	r22, r22
    18d0:	77 1f       	adc	r23, r23
    18d2:	88 1f       	adc	r24, r24
    18d4:	99 1f       	adc	r25, r25
    18d6:	09 c0       	rjmp	.+18     	; 0x18ea <mulacc+0x44>
    18d8:	33 e0       	ldi	r19, 0x03	; 3
    18da:	01 c0       	rjmp	.+2      	; 0x18de <mulacc+0x38>
    18dc:	34 e0       	ldi	r19, 0x04	; 4
    18de:	66 0f       	add	r22, r22
    18e0:	77 1f       	adc	r23, r23
    18e2:	88 1f       	adc	r24, r24
    18e4:	99 1f       	adc	r25, r25
    18e6:	31 50       	subi	r19, 0x01	; 1
    18e8:	d1 f7       	brne	.-12     	; 0x18de <mulacc+0x38>
    18ea:	62 0f       	add	r22, r18
    18ec:	71 1d       	adc	r23, r1
    18ee:	81 1d       	adc	r24, r1
    18f0:	91 1d       	adc	r25, r1
    18f2:	08 95       	ret

000018f4 <skip_spaces>:
    18f4:	0f 93       	push	r16
    18f6:	1f 93       	push	r17
    18f8:	cf 93       	push	r28
    18fa:	df 93       	push	r29
    18fc:	8c 01       	movw	r16, r24
    18fe:	c8 01       	movw	r24, r16
    1900:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    1904:	ec 01       	movw	r28, r24
    1906:	97 fd       	sbrc	r25, 7
    1908:	08 c0       	rjmp	.+16     	; 0x191a <skip_spaces+0x26>
    190a:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <isspace>
    190e:	89 2b       	or	r24, r25
    1910:	b1 f7       	brne	.-20     	; 0x18fe <skip_spaces+0xa>
    1912:	b8 01       	movw	r22, r16
    1914:	ce 01       	movw	r24, r28
    1916:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <ungetc>
    191a:	ce 01       	movw	r24, r28
    191c:	df 91       	pop	r29
    191e:	cf 91       	pop	r28
    1920:	1f 91       	pop	r17
    1922:	0f 91       	pop	r16
    1924:	08 95       	ret

00001926 <conv_int>:
    1926:	8f 92       	push	r8
    1928:	9f 92       	push	r9
    192a:	af 92       	push	r10
    192c:	bf 92       	push	r11
    192e:	ef 92       	push	r14
    1930:	ff 92       	push	r15
    1932:	0f 93       	push	r16
    1934:	1f 93       	push	r17
    1936:	cf 93       	push	r28
    1938:	df 93       	push	r29
    193a:	8c 01       	movw	r16, r24
    193c:	d6 2f       	mov	r29, r22
    193e:	7a 01       	movw	r14, r20
    1940:	b2 2e       	mov	r11, r18
    1942:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    1946:	9c 01       	movw	r18, r24
    1948:	33 27       	eor	r19, r19
    194a:	2b 32       	cpi	r18, 0x2B	; 43
    194c:	31 05       	cpc	r19, r1
    194e:	31 f0       	breq	.+12     	; 0x195c <conv_int+0x36>
    1950:	2d 32       	cpi	r18, 0x2D	; 45
    1952:	31 05       	cpc	r19, r1
    1954:	61 f4       	brne	.+24     	; 0x196e <conv_int+0x48>
    1956:	8b 2d       	mov	r24, r11
    1958:	80 68       	ori	r24, 0x80	; 128
    195a:	b8 2e       	mov	r11, r24
    195c:	d1 50       	subi	r29, 0x01	; 1
    195e:	11 f4       	brne	.+4      	; 0x1964 <conv_int+0x3e>
    1960:	80 e0       	ldi	r24, 0x00	; 0
    1962:	68 c0       	rjmp	.+208    	; 0x1a34 <conv_int+0x10e>
    1964:	c8 01       	movw	r24, r16
    1966:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    196a:	97 fd       	sbrc	r25, 7
    196c:	f9 cf       	rjmp	.-14     	; 0x1960 <conv_int+0x3a>
    196e:	cb 2d       	mov	r28, r11
    1970:	cd 7f       	andi	r28, 0xFD	; 253
    1972:	2b 2d       	mov	r18, r11
    1974:	20 73       	andi	r18, 0x30	; 48
    1976:	09 f5       	brne	.+66     	; 0x19ba <conv_int+0x94>
    1978:	80 33       	cpi	r24, 0x30	; 48
    197a:	f9 f4       	brne	.+62     	; 0x19ba <conv_int+0x94>
    197c:	aa 24       	eor	r10, r10
    197e:	aa 94       	dec	r10
    1980:	ad 0e       	add	r10, r29
    1982:	09 f4       	brne	.+2      	; 0x1986 <conv_int+0x60>
    1984:	43 c0       	rjmp	.+134    	; 0x1a0c <conv_int+0xe6>
    1986:	c8 01       	movw	r24, r16
    1988:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    198c:	97 fd       	sbrc	r25, 7
    198e:	3e c0       	rjmp	.+124    	; 0x1a0c <conv_int+0xe6>
    1990:	9c 01       	movw	r18, r24
    1992:	2f 7d       	andi	r18, 0xDF	; 223
    1994:	33 27       	eor	r19, r19
    1996:	28 35       	cpi	r18, 0x58	; 88
    1998:	31 05       	cpc	r19, r1
    199a:	49 f4       	brne	.+18     	; 0x19ae <conv_int+0x88>
    199c:	c2 64       	ori	r28, 0x42	; 66
    199e:	d2 50       	subi	r29, 0x02	; 2
    19a0:	a9 f1       	breq	.+106    	; 0x1a0c <conv_int+0xe6>
    19a2:	c8 01       	movw	r24, r16
    19a4:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    19a8:	97 ff       	sbrs	r25, 7
    19aa:	07 c0       	rjmp	.+14     	; 0x19ba <conv_int+0x94>
    19ac:	2f c0       	rjmp	.+94     	; 0x1a0c <conv_int+0xe6>
    19ae:	b6 fe       	sbrs	r11, 6
    19b0:	02 c0       	rjmp	.+4      	; 0x19b6 <conv_int+0x90>
    19b2:	c2 60       	ori	r28, 0x02	; 2
    19b4:	01 c0       	rjmp	.+2      	; 0x19b8 <conv_int+0x92>
    19b6:	c2 61       	ori	r28, 0x12	; 18
    19b8:	da 2d       	mov	r29, r10
    19ba:	81 2c       	mov	r8, r1
    19bc:	91 2c       	mov	r9, r1
    19be:	54 01       	movw	r10, r8
    19c0:	20 ed       	ldi	r18, 0xD0	; 208
    19c2:	28 0f       	add	r18, r24
    19c4:	28 30       	cpi	r18, 0x08	; 8
    19c6:	80 f0       	brcs	.+32     	; 0x19e8 <conv_int+0xc2>
    19c8:	c4 ff       	sbrs	r28, 4
    19ca:	04 c0       	rjmp	.+8      	; 0x19d4 <conv_int+0xae>
    19cc:	b8 01       	movw	r22, r16
    19ce:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <ungetc>
    19d2:	19 c0       	rjmp	.+50     	; 0x1a06 <conv_int+0xe0>
    19d4:	2a 30       	cpi	r18, 0x0A	; 10
    19d6:	40 f0       	brcs	.+16     	; 0x19e8 <conv_int+0xc2>
    19d8:	c6 ff       	sbrs	r28, 6
    19da:	f8 cf       	rjmp	.-16     	; 0x19cc <conv_int+0xa6>
    19dc:	2f 7d       	andi	r18, 0xDF	; 223
    19de:	3f ee       	ldi	r19, 0xEF	; 239
    19e0:	32 0f       	add	r19, r18
    19e2:	36 30       	cpi	r19, 0x06	; 6
    19e4:	98 f7       	brcc	.-26     	; 0x19cc <conv_int+0xa6>
    19e6:	27 50       	subi	r18, 0x07	; 7
    19e8:	4c 2f       	mov	r20, r28
    19ea:	c5 01       	movw	r24, r10
    19ec:	b4 01       	movw	r22, r8
    19ee:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <mulacc>
    19f2:	4b 01       	movw	r8, r22
    19f4:	5c 01       	movw	r10, r24
    19f6:	c2 60       	ori	r28, 0x02	; 2
    19f8:	d1 50       	subi	r29, 0x01	; 1
    19fa:	59 f0       	breq	.+22     	; 0x1a12 <conv_int+0xec>
    19fc:	c8 01       	movw	r24, r16
    19fe:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    1a02:	97 ff       	sbrs	r25, 7
    1a04:	dd cf       	rjmp	.-70     	; 0x19c0 <conv_int+0x9a>
    1a06:	c1 fd       	sbrc	r28, 1
    1a08:	04 c0       	rjmp	.+8      	; 0x1a12 <conv_int+0xec>
    1a0a:	aa cf       	rjmp	.-172    	; 0x1960 <conv_int+0x3a>
    1a0c:	81 2c       	mov	r8, r1
    1a0e:	91 2c       	mov	r9, r1
    1a10:	54 01       	movw	r10, r8
    1a12:	c7 ff       	sbrs	r28, 7
    1a14:	08 c0       	rjmp	.+16     	; 0x1a26 <conv_int+0x100>
    1a16:	b0 94       	com	r11
    1a18:	a0 94       	com	r10
    1a1a:	90 94       	com	r9
    1a1c:	80 94       	com	r8
    1a1e:	81 1c       	adc	r8, r1
    1a20:	91 1c       	adc	r9, r1
    1a22:	a1 1c       	adc	r10, r1
    1a24:	b1 1c       	adc	r11, r1
    1a26:	2c 2f       	mov	r18, r28
    1a28:	b5 01       	movw	r22, r10
    1a2a:	a4 01       	movw	r20, r8
    1a2c:	c7 01       	movw	r24, r14
    1a2e:	0e 94 47 0c 	call	0x188e	; 0x188e <putval>
    1a32:	81 e0       	ldi	r24, 0x01	; 1
    1a34:	df 91       	pop	r29
    1a36:	cf 91       	pop	r28
    1a38:	1f 91       	pop	r17
    1a3a:	0f 91       	pop	r16
    1a3c:	ff 90       	pop	r15
    1a3e:	ef 90       	pop	r14
    1a40:	bf 90       	pop	r11
    1a42:	af 90       	pop	r10
    1a44:	9f 90       	pop	r9
    1a46:	8f 90       	pop	r8
    1a48:	08 95       	ret

00001a4a <conv_brk>:
    1a4a:	a0 e2       	ldi	r26, 0x20	; 32
    1a4c:	b0 e0       	ldi	r27, 0x00	; 0
    1a4e:	eb e2       	ldi	r30, 0x2B	; 43
    1a50:	fd e0       	ldi	r31, 0x0D	; 13
    1a52:	0c 94 57 10 	jmp	0x20ae	; 0x20ae <__prologue_saves__+0x6>
    1a56:	5c 01       	movw	r10, r24
    1a58:	96 2e       	mov	r9, r22
    1a5a:	7a 01       	movw	r14, r20
    1a5c:	f9 01       	movw	r30, r18
    1a5e:	8e 01       	movw	r16, r28
    1a60:	0f 5f       	subi	r16, 0xFF	; 255
    1a62:	1f 4f       	sbci	r17, 0xFF	; 255
    1a64:	68 01       	movw	r12, r16
    1a66:	80 e2       	ldi	r24, 0x20	; 32
    1a68:	d8 01       	movw	r26, r16
    1a6a:	1d 92       	st	X+, r1
    1a6c:	8a 95       	dec	r24
    1a6e:	e9 f7       	brne	.-6      	; 0x1a6a <conv_brk+0x20>
    1a70:	d5 01       	movw	r26, r10
    1a72:	13 96       	adiw	r26, 0x03	; 3
    1a74:	8c 90       	ld	r8, X
    1a76:	80 e0       	ldi	r24, 0x00	; 0
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	61 2c       	mov	r6, r1
    1a7c:	71 2c       	mov	r7, r1
    1a7e:	30 e0       	ldi	r19, 0x00	; 0
    1a80:	61 e0       	ldi	r22, 0x01	; 1
    1a82:	70 e0       	ldi	r23, 0x00	; 0
    1a84:	83 fc       	sbrc	r8, 3
    1a86:	25 91       	lpm	r18, Z+
    1a88:	83 fe       	sbrs	r8, 3
    1a8a:	21 91       	ld	r18, Z+
    1a8c:	8f 01       	movw	r16, r30
    1a8e:	52 2e       	mov	r5, r18
    1a90:	21 11       	cpse	r18, r1
    1a92:	03 c0       	rjmp	.+6      	; 0x1a9a <conv_brk+0x50>
    1a94:	80 e0       	ldi	r24, 0x00	; 0
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	92 c0       	rjmp	.+292    	; 0x1bbe <conv_brk+0x174>
    1a9a:	2e 35       	cpi	r18, 0x5E	; 94
    1a9c:	11 f4       	brne	.+4      	; 0x1aa2 <conv_brk+0x58>
    1a9e:	00 97       	sbiw	r24, 0x00	; 0
    1aa0:	51 f1       	breq	.+84     	; 0x1af6 <conv_brk+0xac>
    1aa2:	43 2f       	mov	r20, r19
    1aa4:	50 e0       	ldi	r21, 0x00	; 0
    1aa6:	48 17       	cp	r20, r24
    1aa8:	59 07       	cpc	r21, r25
    1aaa:	3c f4       	brge	.+14     	; 0x1aba <conv_brk+0x70>
    1aac:	2d 35       	cpi	r18, 0x5D	; 93
    1aae:	59 f1       	breq	.+86     	; 0x1b06 <conv_brk+0xbc>
    1ab0:	2d 32       	cpi	r18, 0x2D	; 45
    1ab2:	19 f4       	brne	.+6      	; 0x1aba <conv_brk+0x70>
    1ab4:	77 20       	and	r7, r7
    1ab6:	09 f1       	breq	.+66     	; 0x1afa <conv_brk+0xb0>
    1ab8:	03 c0       	rjmp	.+6      	; 0x1ac0 <conv_brk+0x76>
    1aba:	77 20       	and	r7, r7
    1abc:	09 f4       	brne	.+2      	; 0x1ac0 <conv_brk+0x76>
    1abe:	6a c0       	rjmp	.+212    	; 0x1b94 <conv_brk+0x14a>
    1ac0:	45 2d       	mov	r20, r5
    1ac2:	46 95       	lsr	r20
    1ac4:	46 95       	lsr	r20
    1ac6:	46 95       	lsr	r20
    1ac8:	d6 01       	movw	r26, r12
    1aca:	a4 0f       	add	r26, r20
    1acc:	b1 1d       	adc	r27, r1
    1ace:	45 2d       	mov	r20, r5
    1ad0:	47 70       	andi	r20, 0x07	; 7
    1ad2:	8b 01       	movw	r16, r22
    1ad4:	02 c0       	rjmp	.+4      	; 0x1ada <conv_brk+0x90>
    1ad6:	00 0f       	add	r16, r16
    1ad8:	11 1f       	adc	r17, r17
    1ada:	4a 95       	dec	r20
    1adc:	e2 f7       	brpl	.-8      	; 0x1ad6 <conv_brk+0x8c>
    1ade:	a8 01       	movw	r20, r16
    1ae0:	5c 91       	ld	r21, X
    1ae2:	45 2b       	or	r20, r21
    1ae4:	4c 93       	st	X, r20
    1ae6:	65 14       	cp	r6, r5
    1ae8:	59 f0       	breq	.+22     	; 0x1b00 <conv_brk+0xb6>
    1aea:	56 14       	cp	r5, r6
    1aec:	10 f4       	brcc	.+4      	; 0x1af2 <conv_brk+0xa8>
    1aee:	53 94       	inc	r5
    1af0:	e7 cf       	rjmp	.-50     	; 0x1ac0 <conv_brk+0x76>
    1af2:	5a 94       	dec	r5
    1af4:	e5 cf       	rjmp	.-54     	; 0x1ac0 <conv_brk+0x76>
    1af6:	31 e0       	ldi	r19, 0x01	; 1
    1af8:	04 c0       	rjmp	.+8      	; 0x1b02 <conv_brk+0xb8>
    1afa:	77 24       	eor	r7, r7
    1afc:	73 94       	inc	r7
    1afe:	01 c0       	rjmp	.+2      	; 0x1b02 <conv_brk+0xb8>
    1b00:	71 2c       	mov	r7, r1
    1b02:	01 96       	adiw	r24, 0x01	; 1
    1b04:	bf cf       	rjmp	.-130    	; 0x1a84 <conv_brk+0x3a>
    1b06:	77 20       	and	r7, r7
    1b08:	19 f0       	breq	.+6      	; 0x1b10 <conv_brk+0xc6>
    1b0a:	8e 81       	ldd	r24, Y+6	; 0x06
    1b0c:	80 62       	ori	r24, 0x20	; 32
    1b0e:	8e 83       	std	Y+6, r24	; 0x06
    1b10:	31 11       	cpse	r19, r1
    1b12:	03 c0       	rjmp	.+6      	; 0x1b1a <conv_brk+0xd0>
    1b14:	88 24       	eor	r8, r8
    1b16:	83 94       	inc	r8
    1b18:	17 c0       	rjmp	.+46     	; 0x1b48 <conv_brk+0xfe>
    1b1a:	f6 01       	movw	r30, r12
    1b1c:	9e 01       	movw	r18, r28
    1b1e:	2f 5d       	subi	r18, 0xDF	; 223
    1b20:	3f 4f       	sbci	r19, 0xFF	; 255
    1b22:	80 81       	ld	r24, Z
    1b24:	80 95       	com	r24
    1b26:	81 93       	st	Z+, r24
    1b28:	2e 17       	cp	r18, r30
    1b2a:	3f 07       	cpc	r19, r31
    1b2c:	d1 f7       	brne	.-12     	; 0x1b22 <conv_brk+0xd8>
    1b2e:	f2 cf       	rjmp	.-28     	; 0x1b14 <conv_brk+0xca>
    1b30:	e1 14       	cp	r14, r1
    1b32:	f1 04       	cpc	r15, r1
    1b34:	29 f0       	breq	.+10     	; 0x1b40 <conv_brk+0xf6>
    1b36:	d7 01       	movw	r26, r14
    1b38:	8c 93       	st	X, r24
    1b3a:	f7 01       	movw	r30, r14
    1b3c:	31 96       	adiw	r30, 0x01	; 1
    1b3e:	7f 01       	movw	r14, r30
    1b40:	9a 94       	dec	r9
    1b42:	81 2c       	mov	r8, r1
    1b44:	99 20       	and	r9, r9
    1b46:	f9 f0       	breq	.+62     	; 0x1b86 <conv_brk+0x13c>
    1b48:	c5 01       	movw	r24, r10
    1b4a:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    1b4e:	97 fd       	sbrc	r25, 7
    1b50:	18 c0       	rjmp	.+48     	; 0x1b82 <conv_brk+0x138>
    1b52:	fc 01       	movw	r30, r24
    1b54:	ff 27       	eor	r31, r31
    1b56:	23 e0       	ldi	r18, 0x03	; 3
    1b58:	f5 95       	asr	r31
    1b5a:	e7 95       	ror	r30
    1b5c:	2a 95       	dec	r18
    1b5e:	e1 f7       	brne	.-8      	; 0x1b58 <conv_brk+0x10e>
    1b60:	ec 0d       	add	r30, r12
    1b62:	fd 1d       	adc	r31, r13
    1b64:	20 81       	ld	r18, Z
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	ac 01       	movw	r20, r24
    1b6a:	47 70       	andi	r20, 0x07	; 7
    1b6c:	55 27       	eor	r21, r21
    1b6e:	02 c0       	rjmp	.+4      	; 0x1b74 <conv_brk+0x12a>
    1b70:	35 95       	asr	r19
    1b72:	27 95       	ror	r18
    1b74:	4a 95       	dec	r20
    1b76:	e2 f7       	brpl	.-8      	; 0x1b70 <conv_brk+0x126>
    1b78:	20 fd       	sbrc	r18, 0
    1b7a:	da cf       	rjmp	.-76     	; 0x1b30 <conv_brk+0xe6>
    1b7c:	b5 01       	movw	r22, r10
    1b7e:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <ungetc>
    1b82:	81 10       	cpse	r8, r1
    1b84:	87 cf       	rjmp	.-242    	; 0x1a94 <conv_brk+0x4a>
    1b86:	e1 14       	cp	r14, r1
    1b88:	f1 04       	cpc	r15, r1
    1b8a:	11 f0       	breq	.+4      	; 0x1b90 <conv_brk+0x146>
    1b8c:	d7 01       	movw	r26, r14
    1b8e:	1c 92       	st	X, r1
    1b90:	c8 01       	movw	r24, r16
    1b92:	15 c0       	rjmp	.+42     	; 0x1bbe <conv_brk+0x174>
    1b94:	42 2f       	mov	r20, r18
    1b96:	46 95       	lsr	r20
    1b98:	46 95       	lsr	r20
    1b9a:	46 95       	lsr	r20
    1b9c:	d6 01       	movw	r26, r12
    1b9e:	a4 0f       	add	r26, r20
    1ba0:	b1 1d       	adc	r27, r1
    1ba2:	42 2f       	mov	r20, r18
    1ba4:	47 70       	andi	r20, 0x07	; 7
    1ba6:	8b 01       	movw	r16, r22
    1ba8:	02 c0       	rjmp	.+4      	; 0x1bae <conv_brk+0x164>
    1baa:	00 0f       	add	r16, r16
    1bac:	11 1f       	adc	r17, r17
    1bae:	4a 95       	dec	r20
    1bb0:	e2 f7       	brpl	.-8      	; 0x1baa <conv_brk+0x160>
    1bb2:	a8 01       	movw	r20, r16
    1bb4:	5c 91       	ld	r21, X
    1bb6:	45 2b       	or	r20, r21
    1bb8:	4c 93       	st	X, r20
    1bba:	62 2e       	mov	r6, r18
    1bbc:	a2 cf       	rjmp	.-188    	; 0x1b02 <conv_brk+0xb8>
    1bbe:	a0 96       	adiw	r28, 0x20	; 32
    1bc0:	ef e0       	ldi	r30, 0x0F	; 15
    1bc2:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <__epilogue_restores__+0x6>

00001bc6 <vfscanf>:
    1bc6:	a0 e0       	ldi	r26, 0x00	; 0
    1bc8:	b0 e0       	ldi	r27, 0x00	; 0
    1bca:	e9 ee       	ldi	r30, 0xE9	; 233
    1bcc:	fd e0       	ldi	r31, 0x0D	; 13
    1bce:	0c 94 57 10 	jmp	0x20ae	; 0x20ae <__prologue_saves__+0x6>
    1bd2:	6c 01       	movw	r12, r24
    1bd4:	eb 01       	movw	r28, r22
    1bd6:	5a 01       	movw	r10, r20
    1bd8:	fc 01       	movw	r30, r24
    1bda:	17 82       	std	Z+7, r1	; 0x07
    1bdc:	16 82       	std	Z+6, r1	; 0x06
    1bde:	51 2c       	mov	r5, r1
    1be0:	f6 01       	movw	r30, r12
    1be2:	e3 80       	ldd	r14, Z+3	; 0x03
    1be4:	fe 01       	movw	r30, r28
    1be6:	e3 fc       	sbrc	r14, 3
    1be8:	85 91       	lpm	r24, Z+
    1bea:	e3 fe       	sbrs	r14, 3
    1bec:	81 91       	ld	r24, Z+
    1bee:	18 2f       	mov	r17, r24
    1bf0:	ef 01       	movw	r28, r30
    1bf2:	88 23       	and	r24, r24
    1bf4:	09 f4       	brne	.+2      	; 0x1bf8 <vfscanf+0x32>
    1bf6:	ee c0       	rjmp	.+476    	; 0x1dd4 <vfscanf+0x20e>
    1bf8:	90 e0       	ldi	r25, 0x00	; 0
    1bfa:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <isspace>
    1bfe:	89 2b       	or	r24, r25
    1c00:	21 f0       	breq	.+8      	; 0x1c0a <vfscanf+0x44>
    1c02:	c6 01       	movw	r24, r12
    1c04:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <skip_spaces>
    1c08:	eb cf       	rjmp	.-42     	; 0x1be0 <vfscanf+0x1a>
    1c0a:	15 32       	cpi	r17, 0x25	; 37
    1c0c:	41 f4       	brne	.+16     	; 0x1c1e <vfscanf+0x58>
    1c0e:	fe 01       	movw	r30, r28
    1c10:	e3 fc       	sbrc	r14, 3
    1c12:	15 91       	lpm	r17, Z+
    1c14:	e3 fe       	sbrs	r14, 3
    1c16:	11 91       	ld	r17, Z+
    1c18:	ef 01       	movw	r28, r30
    1c1a:	15 32       	cpi	r17, 0x25	; 37
    1c1c:	81 f4       	brne	.+32     	; 0x1c3e <vfscanf+0x78>
    1c1e:	c6 01       	movw	r24, r12
    1c20:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    1c24:	97 fd       	sbrc	r25, 7
    1c26:	d4 c0       	rjmp	.+424    	; 0x1dd0 <vfscanf+0x20a>
    1c28:	41 2f       	mov	r20, r17
    1c2a:	50 e0       	ldi	r21, 0x00	; 0
    1c2c:	9c 01       	movw	r18, r24
    1c2e:	33 27       	eor	r19, r19
    1c30:	24 17       	cp	r18, r20
    1c32:	35 07       	cpc	r19, r21
    1c34:	a9 f2       	breq	.-86     	; 0x1be0 <vfscanf+0x1a>
    1c36:	b6 01       	movw	r22, r12
    1c38:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <ungetc>
    1c3c:	cb c0       	rjmp	.+406    	; 0x1dd4 <vfscanf+0x20e>
    1c3e:	1a 32       	cpi	r17, 0x2A	; 42
    1c40:	39 f4       	brne	.+14     	; 0x1c50 <vfscanf+0x8a>
    1c42:	e3 fc       	sbrc	r14, 3
    1c44:	15 91       	lpm	r17, Z+
    1c46:	e3 fe       	sbrs	r14, 3
    1c48:	11 91       	ld	r17, Z+
    1c4a:	ef 01       	movw	r28, r30
    1c4c:	01 e0       	ldi	r16, 0x01	; 1
    1c4e:	01 c0       	rjmp	.+2      	; 0x1c52 <vfscanf+0x8c>
    1c50:	00 e0       	ldi	r16, 0x00	; 0
    1c52:	f1 2c       	mov	r15, r1
    1c54:	20 ed       	ldi	r18, 0xD0	; 208
    1c56:	21 0f       	add	r18, r17
    1c58:	2a 30       	cpi	r18, 0x0A	; 10
    1c5a:	80 f4       	brcc	.+32     	; 0x1c7c <vfscanf+0xb6>
    1c5c:	02 60       	ori	r16, 0x02	; 2
    1c5e:	6f 2d       	mov	r22, r15
    1c60:	70 e0       	ldi	r23, 0x00	; 0
    1c62:	80 e0       	ldi	r24, 0x00	; 0
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	40 e2       	ldi	r20, 0x20	; 32
    1c68:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <mulacc>
    1c6c:	f6 2e       	mov	r15, r22
    1c6e:	fe 01       	movw	r30, r28
    1c70:	e3 fc       	sbrc	r14, 3
    1c72:	15 91       	lpm	r17, Z+
    1c74:	e3 fe       	sbrs	r14, 3
    1c76:	11 91       	ld	r17, Z+
    1c78:	ef 01       	movw	r28, r30
    1c7a:	ec cf       	rjmp	.-40     	; 0x1c54 <vfscanf+0x8e>
    1c7c:	01 ff       	sbrs	r16, 1
    1c7e:	03 c0       	rjmp	.+6      	; 0x1c86 <vfscanf+0xc0>
    1c80:	f1 10       	cpse	r15, r1
    1c82:	03 c0       	rjmp	.+6      	; 0x1c8a <vfscanf+0xc4>
    1c84:	a7 c0       	rjmp	.+334    	; 0x1dd4 <vfscanf+0x20e>
    1c86:	ff 24       	eor	r15, r15
    1c88:	fa 94       	dec	r15
    1c8a:	18 36       	cpi	r17, 0x68	; 104
    1c8c:	19 f0       	breq	.+6      	; 0x1c94 <vfscanf+0xce>
    1c8e:	1c 36       	cpi	r17, 0x6C	; 108
    1c90:	51 f0       	breq	.+20     	; 0x1ca6 <vfscanf+0xe0>
    1c92:	10 c0       	rjmp	.+32     	; 0x1cb4 <vfscanf+0xee>
    1c94:	fe 01       	movw	r30, r28
    1c96:	e3 fc       	sbrc	r14, 3
    1c98:	15 91       	lpm	r17, Z+
    1c9a:	e3 fe       	sbrs	r14, 3
    1c9c:	11 91       	ld	r17, Z+
    1c9e:	ef 01       	movw	r28, r30
    1ca0:	18 36       	cpi	r17, 0x68	; 104
    1ca2:	41 f4       	brne	.+16     	; 0x1cb4 <vfscanf+0xee>
    1ca4:	08 60       	ori	r16, 0x08	; 8
    1ca6:	04 60       	ori	r16, 0x04	; 4
    1ca8:	fe 01       	movw	r30, r28
    1caa:	e3 fc       	sbrc	r14, 3
    1cac:	15 91       	lpm	r17, Z+
    1cae:	e3 fe       	sbrs	r14, 3
    1cb0:	11 91       	ld	r17, Z+
    1cb2:	ef 01       	movw	r28, r30
    1cb4:	11 23       	and	r17, r17
    1cb6:	09 f4       	brne	.+2      	; 0x1cba <vfscanf+0xf4>
    1cb8:	8d c0       	rjmp	.+282    	; 0x1dd4 <vfscanf+0x20e>
    1cba:	61 2f       	mov	r22, r17
    1cbc:	70 e0       	ldi	r23, 0x00	; 0
    1cbe:	8a e7       	ldi	r24, 0x7A	; 122
    1cc0:	90 e0       	ldi	r25, 0x00	; 0
    1cc2:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <strchr_P>
    1cc6:	89 2b       	or	r24, r25
    1cc8:	09 f4       	brne	.+2      	; 0x1ccc <vfscanf+0x106>
    1cca:	84 c0       	rjmp	.+264    	; 0x1dd4 <vfscanf+0x20e>
    1ccc:	00 fd       	sbrc	r16, 0
    1cce:	07 c0       	rjmp	.+14     	; 0x1cde <vfscanf+0x118>
    1cd0:	f5 01       	movw	r30, r10
    1cd2:	80 80       	ld	r8, Z
    1cd4:	91 80       	ldd	r9, Z+1	; 0x01
    1cd6:	c5 01       	movw	r24, r10
    1cd8:	02 96       	adiw	r24, 0x02	; 2
    1cda:	5c 01       	movw	r10, r24
    1cdc:	02 c0       	rjmp	.+4      	; 0x1ce2 <vfscanf+0x11c>
    1cde:	81 2c       	mov	r8, r1
    1ce0:	91 2c       	mov	r9, r1
    1ce2:	1e 36       	cpi	r17, 0x6E	; 110
    1ce4:	51 f4       	brne	.+20     	; 0x1cfa <vfscanf+0x134>
    1ce6:	f6 01       	movw	r30, r12
    1ce8:	46 81       	ldd	r20, Z+6	; 0x06
    1cea:	57 81       	ldd	r21, Z+7	; 0x07
    1cec:	60 e0       	ldi	r22, 0x00	; 0
    1cee:	70 e0       	ldi	r23, 0x00	; 0
    1cf0:	20 2f       	mov	r18, r16
    1cf2:	c4 01       	movw	r24, r8
    1cf4:	0e 94 47 0c 	call	0x188e	; 0x188e <putval>
    1cf8:	73 cf       	rjmp	.-282    	; 0x1be0 <vfscanf+0x1a>
    1cfa:	13 36       	cpi	r17, 0x63	; 99
    1cfc:	a9 f4       	brne	.+42     	; 0x1d28 <vfscanf+0x162>
    1cfe:	01 fd       	sbrc	r16, 1
    1d00:	02 c0       	rjmp	.+4      	; 0x1d06 <vfscanf+0x140>
    1d02:	ff 24       	eor	r15, r15
    1d04:	f3 94       	inc	r15
    1d06:	c6 01       	movw	r24, r12
    1d08:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    1d0c:	97 fd       	sbrc	r25, 7
    1d0e:	60 c0       	rjmp	.+192    	; 0x1dd0 <vfscanf+0x20a>
    1d10:	81 14       	cp	r8, r1
    1d12:	91 04       	cpc	r9, r1
    1d14:	29 f0       	breq	.+10     	; 0x1d20 <vfscanf+0x15a>
    1d16:	f4 01       	movw	r30, r8
    1d18:	80 83       	st	Z, r24
    1d1a:	c4 01       	movw	r24, r8
    1d1c:	01 96       	adiw	r24, 0x01	; 1
    1d1e:	4c 01       	movw	r8, r24
    1d20:	fa 94       	dec	r15
    1d22:	f1 10       	cpse	r15, r1
    1d24:	f0 cf       	rjmp	.-32     	; 0x1d06 <vfscanf+0x140>
    1d26:	50 c0       	rjmp	.+160    	; 0x1dc8 <vfscanf+0x202>
    1d28:	1b 35       	cpi	r17, 0x5B	; 91
    1d2a:	59 f4       	brne	.+22     	; 0x1d42 <vfscanf+0x17c>
    1d2c:	9e 01       	movw	r18, r28
    1d2e:	a4 01       	movw	r20, r8
    1d30:	6f 2d       	mov	r22, r15
    1d32:	c6 01       	movw	r24, r12
    1d34:	0e 94 25 0d 	call	0x1a4a	; 0x1a4a <conv_brk>
    1d38:	ec 01       	movw	r28, r24
    1d3a:	89 2b       	or	r24, r25
    1d3c:	09 f0       	breq	.+2      	; 0x1d40 <vfscanf+0x17a>
    1d3e:	44 c0       	rjmp	.+136    	; 0x1dc8 <vfscanf+0x202>
    1d40:	3e c0       	rjmp	.+124    	; 0x1dbe <vfscanf+0x1f8>
    1d42:	c6 01       	movw	r24, r12
    1d44:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <skip_spaces>
    1d48:	97 fd       	sbrc	r25, 7
    1d4a:	42 c0       	rjmp	.+132    	; 0x1dd0 <vfscanf+0x20a>
    1d4c:	1f 36       	cpi	r17, 0x6F	; 111
    1d4e:	61 f1       	breq	.+88     	; 0x1da8 <vfscanf+0x1e2>
    1d50:	28 f4       	brcc	.+10     	; 0x1d5c <vfscanf+0x196>
    1d52:	14 36       	cpi	r17, 0x64	; 100
    1d54:	39 f1       	breq	.+78     	; 0x1da4 <vfscanf+0x1de>
    1d56:	19 36       	cpi	r17, 0x69	; 105
    1d58:	51 f1       	breq	.+84     	; 0x1dae <vfscanf+0x1e8>
    1d5a:	28 c0       	rjmp	.+80     	; 0x1dac <vfscanf+0x1e6>
    1d5c:	13 37       	cpi	r17, 0x73	; 115
    1d5e:	71 f0       	breq	.+28     	; 0x1d7c <vfscanf+0x1b6>
    1d60:	15 37       	cpi	r17, 0x75	; 117
    1d62:	01 f1       	breq	.+64     	; 0x1da4 <vfscanf+0x1de>
    1d64:	23 c0       	rjmp	.+70     	; 0x1dac <vfscanf+0x1e6>
    1d66:	81 14       	cp	r8, r1
    1d68:	91 04       	cpc	r9, r1
    1d6a:	29 f0       	breq	.+10     	; 0x1d76 <vfscanf+0x1b0>
    1d6c:	f4 01       	movw	r30, r8
    1d6e:	60 82       	st	Z, r6
    1d70:	c4 01       	movw	r24, r8
    1d72:	01 96       	adiw	r24, 0x01	; 1
    1d74:	4c 01       	movw	r8, r24
    1d76:	fa 94       	dec	r15
    1d78:	ff 20       	and	r15, r15
    1d7a:	71 f0       	breq	.+28     	; 0x1d98 <vfscanf+0x1d2>
    1d7c:	c6 01       	movw	r24, r12
    1d7e:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <fgetc>
    1d82:	3c 01       	movw	r6, r24
    1d84:	97 fd       	sbrc	r25, 7
    1d86:	08 c0       	rjmp	.+16     	; 0x1d98 <vfscanf+0x1d2>
    1d88:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <isspace>
    1d8c:	89 2b       	or	r24, r25
    1d8e:	59 f3       	breq	.-42     	; 0x1d66 <vfscanf+0x1a0>
    1d90:	b6 01       	movw	r22, r12
    1d92:	c3 01       	movw	r24, r6
    1d94:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <ungetc>
    1d98:	81 14       	cp	r8, r1
    1d9a:	91 04       	cpc	r9, r1
    1d9c:	a9 f0       	breq	.+42     	; 0x1dc8 <vfscanf+0x202>
    1d9e:	f4 01       	movw	r30, r8
    1da0:	10 82       	st	Z, r1
    1da2:	12 c0       	rjmp	.+36     	; 0x1dc8 <vfscanf+0x202>
    1da4:	00 62       	ori	r16, 0x20	; 32
    1da6:	03 c0       	rjmp	.+6      	; 0x1dae <vfscanf+0x1e8>
    1da8:	00 61       	ori	r16, 0x10	; 16
    1daa:	01 c0       	rjmp	.+2      	; 0x1dae <vfscanf+0x1e8>
    1dac:	00 64       	ori	r16, 0x40	; 64
    1dae:	20 2f       	mov	r18, r16
    1db0:	a4 01       	movw	r20, r8
    1db2:	6f 2d       	mov	r22, r15
    1db4:	c6 01       	movw	r24, r12
    1db6:	0e 94 93 0c 	call	0x1926	; 0x1926 <conv_int>
    1dba:	81 11       	cpse	r24, r1
    1dbc:	05 c0       	rjmp	.+10     	; 0x1dc8 <vfscanf+0x202>
    1dbe:	f6 01       	movw	r30, r12
    1dc0:	83 81       	ldd	r24, Z+3	; 0x03
    1dc2:	80 73       	andi	r24, 0x30	; 48
    1dc4:	29 f4       	brne	.+10     	; 0x1dd0 <vfscanf+0x20a>
    1dc6:	06 c0       	rjmp	.+12     	; 0x1dd4 <vfscanf+0x20e>
    1dc8:	00 fd       	sbrc	r16, 0
    1dca:	0a cf       	rjmp	.-492    	; 0x1be0 <vfscanf+0x1a>
    1dcc:	53 94       	inc	r5
    1dce:	08 cf       	rjmp	.-496    	; 0x1be0 <vfscanf+0x1a>
    1dd0:	55 20       	and	r5, r5
    1dd2:	19 f0       	breq	.+6      	; 0x1dda <vfscanf+0x214>
    1dd4:	85 2d       	mov	r24, r5
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	02 c0       	rjmp	.+4      	; 0x1dde <vfscanf+0x218>
    1dda:	8f ef       	ldi	r24, 0xFF	; 255
    1ddc:	9f ef       	ldi	r25, 0xFF	; 255
    1dde:	cd b7       	in	r28, 0x3d	; 61
    1de0:	de b7       	in	r29, 0x3e	; 62
    1de2:	ef e0       	ldi	r30, 0x0F	; 15
    1de4:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <__epilogue_restores__+0x6>

00001de8 <isspace>:
    1de8:	91 11       	cpse	r25, r1
    1dea:	0c 94 1f 10 	jmp	0x203e	; 0x203e <__ctype_isfalse>
    1dee:	80 32       	cpi	r24, 0x20	; 32
    1df0:	19 f0       	breq	.+6      	; 0x1df8 <isspace+0x10>
    1df2:	89 50       	subi	r24, 0x09	; 9
    1df4:	85 50       	subi	r24, 0x05	; 5
    1df6:	c8 f7       	brcc	.-14     	; 0x1dea <isspace+0x2>
    1df8:	08 95       	ret

00001dfa <strchr_P>:
    1dfa:	fc 01       	movw	r30, r24
    1dfc:	05 90       	lpm	r0, Z+
    1dfe:	06 16       	cp	r0, r22
    1e00:	21 f0       	breq	.+8      	; 0x1e0a <strchr_P+0x10>
    1e02:	00 20       	and	r0, r0
    1e04:	d9 f7       	brne	.-10     	; 0x1dfc <strchr_P+0x2>
    1e06:	c0 01       	movw	r24, r0
    1e08:	08 95       	ret
    1e0a:	31 97       	sbiw	r30, 0x01	; 1
    1e0c:	cf 01       	movw	r24, r30
    1e0e:	08 95       	ret

00001e10 <strnlen_P>:
    1e10:	fc 01       	movw	r30, r24
    1e12:	05 90       	lpm	r0, Z+
    1e14:	61 50       	subi	r22, 0x01	; 1
    1e16:	70 40       	sbci	r23, 0x00	; 0
    1e18:	01 10       	cpse	r0, r1
    1e1a:	d8 f7       	brcc	.-10     	; 0x1e12 <strnlen_P+0x2>
    1e1c:	80 95       	com	r24
    1e1e:	90 95       	com	r25
    1e20:	8e 0f       	add	r24, r30
    1e22:	9f 1f       	adc	r25, r31
    1e24:	08 95       	ret

00001e26 <strnlen>:
    1e26:	fc 01       	movw	r30, r24
    1e28:	61 50       	subi	r22, 0x01	; 1
    1e2a:	70 40       	sbci	r23, 0x00	; 0
    1e2c:	01 90       	ld	r0, Z+
    1e2e:	01 10       	cpse	r0, r1
    1e30:	d8 f7       	brcc	.-10     	; 0x1e28 <strnlen+0x2>
    1e32:	80 95       	com	r24
    1e34:	90 95       	com	r25
    1e36:	8e 0f       	add	r24, r30
    1e38:	9f 1f       	adc	r25, r31
    1e3a:	08 95       	ret

00001e3c <strrev>:
    1e3c:	dc 01       	movw	r26, r24
    1e3e:	fc 01       	movw	r30, r24
    1e40:	67 2f       	mov	r22, r23
    1e42:	71 91       	ld	r23, Z+
    1e44:	77 23       	and	r23, r23
    1e46:	e1 f7       	brne	.-8      	; 0x1e40 <strrev+0x4>
    1e48:	32 97       	sbiw	r30, 0x02	; 2
    1e4a:	04 c0       	rjmp	.+8      	; 0x1e54 <strrev+0x18>
    1e4c:	7c 91       	ld	r23, X
    1e4e:	6d 93       	st	X+, r22
    1e50:	70 83       	st	Z, r23
    1e52:	62 91       	ld	r22, -Z
    1e54:	ae 17       	cp	r26, r30
    1e56:	bf 07       	cpc	r27, r31
    1e58:	c8 f3       	brcs	.-14     	; 0x1e4c <strrev+0x10>
    1e5a:	08 95       	ret

00001e5c <fgetc>:
    1e5c:	cf 93       	push	r28
    1e5e:	df 93       	push	r29
    1e60:	ec 01       	movw	r28, r24
    1e62:	2b 81       	ldd	r18, Y+3	; 0x03
    1e64:	20 ff       	sbrs	r18, 0
    1e66:	33 c0       	rjmp	.+102    	; 0x1ece <fgetc+0x72>
    1e68:	26 ff       	sbrs	r18, 6
    1e6a:	0a c0       	rjmp	.+20     	; 0x1e80 <fgetc+0x24>
    1e6c:	2f 7b       	andi	r18, 0xBF	; 191
    1e6e:	2b 83       	std	Y+3, r18	; 0x03
    1e70:	8e 81       	ldd	r24, Y+6	; 0x06
    1e72:	9f 81       	ldd	r25, Y+7	; 0x07
    1e74:	01 96       	adiw	r24, 0x01	; 1
    1e76:	9f 83       	std	Y+7, r25	; 0x07
    1e78:	8e 83       	std	Y+6, r24	; 0x06
    1e7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	29 c0       	rjmp	.+82     	; 0x1ed2 <fgetc+0x76>
    1e80:	22 ff       	sbrs	r18, 2
    1e82:	0f c0       	rjmp	.+30     	; 0x1ea2 <fgetc+0x46>
    1e84:	e8 81       	ld	r30, Y
    1e86:	f9 81       	ldd	r31, Y+1	; 0x01
    1e88:	80 81       	ld	r24, Z
    1e8a:	08 2e       	mov	r0, r24
    1e8c:	00 0c       	add	r0, r0
    1e8e:	99 0b       	sbc	r25, r25
    1e90:	00 97       	sbiw	r24, 0x00	; 0
    1e92:	19 f4       	brne	.+6      	; 0x1e9a <fgetc+0x3e>
    1e94:	20 62       	ori	r18, 0x20	; 32
    1e96:	2b 83       	std	Y+3, r18	; 0x03
    1e98:	1a c0       	rjmp	.+52     	; 0x1ece <fgetc+0x72>
    1e9a:	31 96       	adiw	r30, 0x01	; 1
    1e9c:	f9 83       	std	Y+1, r31	; 0x01
    1e9e:	e8 83       	st	Y, r30
    1ea0:	0e c0       	rjmp	.+28     	; 0x1ebe <fgetc+0x62>
    1ea2:	ea 85       	ldd	r30, Y+10	; 0x0a
    1ea4:	fb 85       	ldd	r31, Y+11	; 0x0b
    1ea6:	09 95       	icall
    1ea8:	97 ff       	sbrs	r25, 7
    1eaa:	09 c0       	rjmp	.+18     	; 0x1ebe <fgetc+0x62>
    1eac:	2b 81       	ldd	r18, Y+3	; 0x03
    1eae:	01 96       	adiw	r24, 0x01	; 1
    1eb0:	11 f0       	breq	.+4      	; 0x1eb6 <fgetc+0x5a>
    1eb2:	80 e2       	ldi	r24, 0x20	; 32
    1eb4:	01 c0       	rjmp	.+2      	; 0x1eb8 <fgetc+0x5c>
    1eb6:	80 e1       	ldi	r24, 0x10	; 16
    1eb8:	82 2b       	or	r24, r18
    1eba:	8b 83       	std	Y+3, r24	; 0x03
    1ebc:	08 c0       	rjmp	.+16     	; 0x1ece <fgetc+0x72>
    1ebe:	2e 81       	ldd	r18, Y+6	; 0x06
    1ec0:	3f 81       	ldd	r19, Y+7	; 0x07
    1ec2:	2f 5f       	subi	r18, 0xFF	; 255
    1ec4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ec6:	3f 83       	std	Y+7, r19	; 0x07
    1ec8:	2e 83       	std	Y+6, r18	; 0x06
    1eca:	99 27       	eor	r25, r25
    1ecc:	02 c0       	rjmp	.+4      	; 0x1ed2 <fgetc+0x76>
    1ece:	8f ef       	ldi	r24, 0xFF	; 255
    1ed0:	9f ef       	ldi	r25, 0xFF	; 255
    1ed2:	df 91       	pop	r29
    1ed4:	cf 91       	pop	r28
    1ed6:	08 95       	ret

00001ed8 <fputc>:
    1ed8:	0f 93       	push	r16
    1eda:	1f 93       	push	r17
    1edc:	cf 93       	push	r28
    1ede:	df 93       	push	r29
    1ee0:	fb 01       	movw	r30, r22
    1ee2:	23 81       	ldd	r18, Z+3	; 0x03
    1ee4:	21 fd       	sbrc	r18, 1
    1ee6:	03 c0       	rjmp	.+6      	; 0x1eee <fputc+0x16>
    1ee8:	8f ef       	ldi	r24, 0xFF	; 255
    1eea:	9f ef       	ldi	r25, 0xFF	; 255
    1eec:	2c c0       	rjmp	.+88     	; 0x1f46 <fputc+0x6e>
    1eee:	22 ff       	sbrs	r18, 2
    1ef0:	16 c0       	rjmp	.+44     	; 0x1f1e <fputc+0x46>
    1ef2:	46 81       	ldd	r20, Z+6	; 0x06
    1ef4:	57 81       	ldd	r21, Z+7	; 0x07
    1ef6:	24 81       	ldd	r18, Z+4	; 0x04
    1ef8:	35 81       	ldd	r19, Z+5	; 0x05
    1efa:	42 17       	cp	r20, r18
    1efc:	53 07       	cpc	r21, r19
    1efe:	44 f4       	brge	.+16     	; 0x1f10 <fputc+0x38>
    1f00:	a0 81       	ld	r26, Z
    1f02:	b1 81       	ldd	r27, Z+1	; 0x01
    1f04:	9d 01       	movw	r18, r26
    1f06:	2f 5f       	subi	r18, 0xFF	; 255
    1f08:	3f 4f       	sbci	r19, 0xFF	; 255
    1f0a:	31 83       	std	Z+1, r19	; 0x01
    1f0c:	20 83       	st	Z, r18
    1f0e:	8c 93       	st	X, r24
    1f10:	26 81       	ldd	r18, Z+6	; 0x06
    1f12:	37 81       	ldd	r19, Z+7	; 0x07
    1f14:	2f 5f       	subi	r18, 0xFF	; 255
    1f16:	3f 4f       	sbci	r19, 0xFF	; 255
    1f18:	37 83       	std	Z+7, r19	; 0x07
    1f1a:	26 83       	std	Z+6, r18	; 0x06
    1f1c:	14 c0       	rjmp	.+40     	; 0x1f46 <fputc+0x6e>
    1f1e:	8b 01       	movw	r16, r22
    1f20:	ec 01       	movw	r28, r24
    1f22:	fb 01       	movw	r30, r22
    1f24:	00 84       	ldd	r0, Z+8	; 0x08
    1f26:	f1 85       	ldd	r31, Z+9	; 0x09
    1f28:	e0 2d       	mov	r30, r0
    1f2a:	09 95       	icall
    1f2c:	89 2b       	or	r24, r25
    1f2e:	e1 f6       	brne	.-72     	; 0x1ee8 <fputc+0x10>
    1f30:	d8 01       	movw	r26, r16
    1f32:	16 96       	adiw	r26, 0x06	; 6
    1f34:	8d 91       	ld	r24, X+
    1f36:	9c 91       	ld	r25, X
    1f38:	17 97       	sbiw	r26, 0x07	; 7
    1f3a:	01 96       	adiw	r24, 0x01	; 1
    1f3c:	17 96       	adiw	r26, 0x07	; 7
    1f3e:	9c 93       	st	X, r25
    1f40:	8e 93       	st	-X, r24
    1f42:	16 97       	sbiw	r26, 0x06	; 6
    1f44:	ce 01       	movw	r24, r28
    1f46:	df 91       	pop	r29
    1f48:	cf 91       	pop	r28
    1f4a:	1f 91       	pop	r17
    1f4c:	0f 91       	pop	r16
    1f4e:	08 95       	ret

00001f50 <ungetc>:
    1f50:	fb 01       	movw	r30, r22
    1f52:	23 81       	ldd	r18, Z+3	; 0x03
    1f54:	20 ff       	sbrs	r18, 0
    1f56:	12 c0       	rjmp	.+36     	; 0x1f7c <ungetc+0x2c>
    1f58:	26 fd       	sbrc	r18, 6
    1f5a:	10 c0       	rjmp	.+32     	; 0x1f7c <ungetc+0x2c>
    1f5c:	8f 3f       	cpi	r24, 0xFF	; 255
    1f5e:	3f ef       	ldi	r19, 0xFF	; 255
    1f60:	93 07       	cpc	r25, r19
    1f62:	61 f0       	breq	.+24     	; 0x1f7c <ungetc+0x2c>
    1f64:	82 83       	std	Z+2, r24	; 0x02
    1f66:	2f 7d       	andi	r18, 0xDF	; 223
    1f68:	20 64       	ori	r18, 0x40	; 64
    1f6a:	23 83       	std	Z+3, r18	; 0x03
    1f6c:	26 81       	ldd	r18, Z+6	; 0x06
    1f6e:	37 81       	ldd	r19, Z+7	; 0x07
    1f70:	21 50       	subi	r18, 0x01	; 1
    1f72:	31 09       	sbc	r19, r1
    1f74:	37 83       	std	Z+7, r19	; 0x07
    1f76:	26 83       	std	Z+6, r18	; 0x06
    1f78:	99 27       	eor	r25, r25
    1f7a:	08 95       	ret
    1f7c:	8f ef       	ldi	r24, 0xFF	; 255
    1f7e:	9f ef       	ldi	r25, 0xFF	; 255
    1f80:	08 95       	ret

00001f82 <__ultoa_invert>:
    1f82:	fa 01       	movw	r30, r20
    1f84:	aa 27       	eor	r26, r26
    1f86:	28 30       	cpi	r18, 0x08	; 8
    1f88:	51 f1       	breq	.+84     	; 0x1fde <__ultoa_invert+0x5c>
    1f8a:	20 31       	cpi	r18, 0x10	; 16
    1f8c:	81 f1       	breq	.+96     	; 0x1fee <__ultoa_invert+0x6c>
    1f8e:	e8 94       	clt
    1f90:	6f 93       	push	r22
    1f92:	6e 7f       	andi	r22, 0xFE	; 254
    1f94:	6e 5f       	subi	r22, 0xFE	; 254
    1f96:	7f 4f       	sbci	r23, 0xFF	; 255
    1f98:	8f 4f       	sbci	r24, 0xFF	; 255
    1f9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f9c:	af 4f       	sbci	r26, 0xFF	; 255
    1f9e:	b1 e0       	ldi	r27, 0x01	; 1
    1fa0:	3e d0       	rcall	.+124    	; 0x201e <__ultoa_invert+0x9c>
    1fa2:	b4 e0       	ldi	r27, 0x04	; 4
    1fa4:	3c d0       	rcall	.+120    	; 0x201e <__ultoa_invert+0x9c>
    1fa6:	67 0f       	add	r22, r23
    1fa8:	78 1f       	adc	r23, r24
    1faa:	89 1f       	adc	r24, r25
    1fac:	9a 1f       	adc	r25, r26
    1fae:	a1 1d       	adc	r26, r1
    1fb0:	68 0f       	add	r22, r24
    1fb2:	79 1f       	adc	r23, r25
    1fb4:	8a 1f       	adc	r24, r26
    1fb6:	91 1d       	adc	r25, r1
    1fb8:	a1 1d       	adc	r26, r1
    1fba:	6a 0f       	add	r22, r26
    1fbc:	71 1d       	adc	r23, r1
    1fbe:	81 1d       	adc	r24, r1
    1fc0:	91 1d       	adc	r25, r1
    1fc2:	a1 1d       	adc	r26, r1
    1fc4:	20 d0       	rcall	.+64     	; 0x2006 <__ultoa_invert+0x84>
    1fc6:	09 f4       	brne	.+2      	; 0x1fca <__ultoa_invert+0x48>
    1fc8:	68 94       	set
    1fca:	3f 91       	pop	r19
    1fcc:	2a e0       	ldi	r18, 0x0A	; 10
    1fce:	26 9f       	mul	r18, r22
    1fd0:	11 24       	eor	r1, r1
    1fd2:	30 19       	sub	r19, r0
    1fd4:	30 5d       	subi	r19, 0xD0	; 208
    1fd6:	31 93       	st	Z+, r19
    1fd8:	de f6       	brtc	.-74     	; 0x1f90 <__ultoa_invert+0xe>
    1fda:	cf 01       	movw	r24, r30
    1fdc:	08 95       	ret
    1fde:	46 2f       	mov	r20, r22
    1fe0:	47 70       	andi	r20, 0x07	; 7
    1fe2:	40 5d       	subi	r20, 0xD0	; 208
    1fe4:	41 93       	st	Z+, r20
    1fe6:	b3 e0       	ldi	r27, 0x03	; 3
    1fe8:	0f d0       	rcall	.+30     	; 0x2008 <__ultoa_invert+0x86>
    1fea:	c9 f7       	brne	.-14     	; 0x1fde <__ultoa_invert+0x5c>
    1fec:	f6 cf       	rjmp	.-20     	; 0x1fda <__ultoa_invert+0x58>
    1fee:	46 2f       	mov	r20, r22
    1ff0:	4f 70       	andi	r20, 0x0F	; 15
    1ff2:	40 5d       	subi	r20, 0xD0	; 208
    1ff4:	4a 33       	cpi	r20, 0x3A	; 58
    1ff6:	18 f0       	brcs	.+6      	; 0x1ffe <__ultoa_invert+0x7c>
    1ff8:	49 5d       	subi	r20, 0xD9	; 217
    1ffa:	31 fd       	sbrc	r19, 1
    1ffc:	40 52       	subi	r20, 0x20	; 32
    1ffe:	41 93       	st	Z+, r20
    2000:	02 d0       	rcall	.+4      	; 0x2006 <__ultoa_invert+0x84>
    2002:	a9 f7       	brne	.-22     	; 0x1fee <__ultoa_invert+0x6c>
    2004:	ea cf       	rjmp	.-44     	; 0x1fda <__ultoa_invert+0x58>
    2006:	b4 e0       	ldi	r27, 0x04	; 4
    2008:	a6 95       	lsr	r26
    200a:	97 95       	ror	r25
    200c:	87 95       	ror	r24
    200e:	77 95       	ror	r23
    2010:	67 95       	ror	r22
    2012:	ba 95       	dec	r27
    2014:	c9 f7       	brne	.-14     	; 0x2008 <__ultoa_invert+0x86>
    2016:	00 97       	sbiw	r24, 0x00	; 0
    2018:	61 05       	cpc	r22, r1
    201a:	71 05       	cpc	r23, r1
    201c:	08 95       	ret
    201e:	9b 01       	movw	r18, r22
    2020:	ac 01       	movw	r20, r24
    2022:	0a 2e       	mov	r0, r26
    2024:	06 94       	lsr	r0
    2026:	57 95       	ror	r21
    2028:	47 95       	ror	r20
    202a:	37 95       	ror	r19
    202c:	27 95       	ror	r18
    202e:	ba 95       	dec	r27
    2030:	c9 f7       	brne	.-14     	; 0x2024 <__ultoa_invert+0xa2>
    2032:	62 0f       	add	r22, r18
    2034:	73 1f       	adc	r23, r19
    2036:	84 1f       	adc	r24, r20
    2038:	95 1f       	adc	r25, r21
    203a:	a0 1d       	adc	r26, r0
    203c:	08 95       	ret

0000203e <__ctype_isfalse>:
    203e:	99 27       	eor	r25, r25
    2040:	88 27       	eor	r24, r24

00002042 <__ctype_istrue>:
    2042:	08 95       	ret

00002044 <__divmodsi4>:
    2044:	05 2e       	mov	r0, r21
    2046:	97 fb       	bst	r25, 7
    2048:	1e f4       	brtc	.+6      	; 0x2050 <__divmodsi4+0xc>
    204a:	00 94       	com	r0
    204c:	0e 94 39 10 	call	0x2072	; 0x2072 <__negsi2>
    2050:	57 fd       	sbrc	r21, 7
    2052:	07 d0       	rcall	.+14     	; 0x2062 <__divmodsi4_neg2>
    2054:	0e 94 8b 10 	call	0x2116	; 0x2116 <__udivmodsi4>
    2058:	07 fc       	sbrc	r0, 7
    205a:	03 d0       	rcall	.+6      	; 0x2062 <__divmodsi4_neg2>
    205c:	4e f4       	brtc	.+18     	; 0x2070 <__divmodsi4_exit>
    205e:	0c 94 39 10 	jmp	0x2072	; 0x2072 <__negsi2>

00002062 <__divmodsi4_neg2>:
    2062:	50 95       	com	r21
    2064:	40 95       	com	r20
    2066:	30 95       	com	r19
    2068:	21 95       	neg	r18
    206a:	3f 4f       	sbci	r19, 0xFF	; 255
    206c:	4f 4f       	sbci	r20, 0xFF	; 255
    206e:	5f 4f       	sbci	r21, 0xFF	; 255

00002070 <__divmodsi4_exit>:
    2070:	08 95       	ret

00002072 <__negsi2>:
    2072:	90 95       	com	r25
    2074:	80 95       	com	r24
    2076:	70 95       	com	r23
    2078:	61 95       	neg	r22
    207a:	7f 4f       	sbci	r23, 0xFF	; 255
    207c:	8f 4f       	sbci	r24, 0xFF	; 255
    207e:	9f 4f       	sbci	r25, 0xFF	; 255
    2080:	08 95       	ret

00002082 <__muluhisi3>:
    2082:	0e 94 ad 10 	call	0x215a	; 0x215a <__umulhisi3>
    2086:	a5 9f       	mul	r26, r21
    2088:	90 0d       	add	r25, r0
    208a:	b4 9f       	mul	r27, r20
    208c:	90 0d       	add	r25, r0
    208e:	a4 9f       	mul	r26, r20
    2090:	80 0d       	add	r24, r0
    2092:	91 1d       	adc	r25, r1
    2094:	11 24       	eor	r1, r1
    2096:	08 95       	ret

00002098 <__mulshisi3>:
    2098:	b7 ff       	sbrs	r27, 7
    209a:	0c 94 41 10 	jmp	0x2082	; 0x2082 <__muluhisi3>

0000209e <__mulohisi3>:
    209e:	0e 94 41 10 	call	0x2082	; 0x2082 <__muluhisi3>
    20a2:	82 1b       	sub	r24, r18
    20a4:	93 0b       	sbc	r25, r19
    20a6:	08 95       	ret

000020a8 <__prologue_saves__>:
    20a8:	2f 92       	push	r2
    20aa:	3f 92       	push	r3
    20ac:	4f 92       	push	r4
    20ae:	5f 92       	push	r5
    20b0:	6f 92       	push	r6
    20b2:	7f 92       	push	r7
    20b4:	8f 92       	push	r8
    20b6:	9f 92       	push	r9
    20b8:	af 92       	push	r10
    20ba:	bf 92       	push	r11
    20bc:	cf 92       	push	r12
    20be:	df 92       	push	r13
    20c0:	ef 92       	push	r14
    20c2:	ff 92       	push	r15
    20c4:	0f 93       	push	r16
    20c6:	1f 93       	push	r17
    20c8:	cf 93       	push	r28
    20ca:	df 93       	push	r29
    20cc:	cd b7       	in	r28, 0x3d	; 61
    20ce:	de b7       	in	r29, 0x3e	; 62
    20d0:	ca 1b       	sub	r28, r26
    20d2:	db 0b       	sbc	r29, r27
    20d4:	0f b6       	in	r0, 0x3f	; 63
    20d6:	f8 94       	cli
    20d8:	de bf       	out	0x3e, r29	; 62
    20da:	0f be       	out	0x3f, r0	; 63
    20dc:	cd bf       	out	0x3d, r28	; 61
    20de:	09 94       	ijmp

000020e0 <__epilogue_restores__>:
    20e0:	2a 88       	ldd	r2, Y+18	; 0x12
    20e2:	39 88       	ldd	r3, Y+17	; 0x11
    20e4:	48 88       	ldd	r4, Y+16	; 0x10
    20e6:	5f 84       	ldd	r5, Y+15	; 0x0f
    20e8:	6e 84       	ldd	r6, Y+14	; 0x0e
    20ea:	7d 84       	ldd	r7, Y+13	; 0x0d
    20ec:	8c 84       	ldd	r8, Y+12	; 0x0c
    20ee:	9b 84       	ldd	r9, Y+11	; 0x0b
    20f0:	aa 84       	ldd	r10, Y+10	; 0x0a
    20f2:	b9 84       	ldd	r11, Y+9	; 0x09
    20f4:	c8 84       	ldd	r12, Y+8	; 0x08
    20f6:	df 80       	ldd	r13, Y+7	; 0x07
    20f8:	ee 80       	ldd	r14, Y+6	; 0x06
    20fa:	fd 80       	ldd	r15, Y+5	; 0x05
    20fc:	0c 81       	ldd	r16, Y+4	; 0x04
    20fe:	1b 81       	ldd	r17, Y+3	; 0x03
    2100:	aa 81       	ldd	r26, Y+2	; 0x02
    2102:	b9 81       	ldd	r27, Y+1	; 0x01
    2104:	ce 0f       	add	r28, r30
    2106:	d1 1d       	adc	r29, r1
    2108:	0f b6       	in	r0, 0x3f	; 63
    210a:	f8 94       	cli
    210c:	de bf       	out	0x3e, r29	; 62
    210e:	0f be       	out	0x3f, r0	; 63
    2110:	cd bf       	out	0x3d, r28	; 61
    2112:	ed 01       	movw	r28, r26
    2114:	08 95       	ret

00002116 <__udivmodsi4>:
    2116:	a1 e2       	ldi	r26, 0x21	; 33
    2118:	1a 2e       	mov	r1, r26
    211a:	aa 1b       	sub	r26, r26
    211c:	bb 1b       	sub	r27, r27
    211e:	fd 01       	movw	r30, r26
    2120:	0d c0       	rjmp	.+26     	; 0x213c <__udivmodsi4_ep>

00002122 <__udivmodsi4_loop>:
    2122:	aa 1f       	adc	r26, r26
    2124:	bb 1f       	adc	r27, r27
    2126:	ee 1f       	adc	r30, r30
    2128:	ff 1f       	adc	r31, r31
    212a:	a2 17       	cp	r26, r18
    212c:	b3 07       	cpc	r27, r19
    212e:	e4 07       	cpc	r30, r20
    2130:	f5 07       	cpc	r31, r21
    2132:	20 f0       	brcs	.+8      	; 0x213c <__udivmodsi4_ep>
    2134:	a2 1b       	sub	r26, r18
    2136:	b3 0b       	sbc	r27, r19
    2138:	e4 0b       	sbc	r30, r20
    213a:	f5 0b       	sbc	r31, r21

0000213c <__udivmodsi4_ep>:
    213c:	66 1f       	adc	r22, r22
    213e:	77 1f       	adc	r23, r23
    2140:	88 1f       	adc	r24, r24
    2142:	99 1f       	adc	r25, r25
    2144:	1a 94       	dec	r1
    2146:	69 f7       	brne	.-38     	; 0x2122 <__udivmodsi4_loop>
    2148:	60 95       	com	r22
    214a:	70 95       	com	r23
    214c:	80 95       	com	r24
    214e:	90 95       	com	r25
    2150:	9b 01       	movw	r18, r22
    2152:	ac 01       	movw	r20, r24
    2154:	bd 01       	movw	r22, r26
    2156:	cf 01       	movw	r24, r30
    2158:	08 95       	ret

0000215a <__umulhisi3>:
    215a:	a2 9f       	mul	r26, r18
    215c:	b0 01       	movw	r22, r0
    215e:	b3 9f       	mul	r27, r19
    2160:	c0 01       	movw	r24, r0
    2162:	a3 9f       	mul	r26, r19
    2164:	70 0d       	add	r23, r0
    2166:	81 1d       	adc	r24, r1
    2168:	11 24       	eor	r1, r1
    216a:	91 1d       	adc	r25, r1
    216c:	b2 9f       	mul	r27, r18
    216e:	70 0d       	add	r23, r0
    2170:	81 1d       	adc	r24, r1
    2172:	11 24       	eor	r1, r1
    2174:	91 1d       	adc	r25, r1
    2176:	08 95       	ret

00002178 <_exit>:
    2178:	f8 94       	cli

0000217a <__stop_program>:
    217a:	ff cf       	rjmp	.-2      	; 0x217a <__stop_program>
